<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{A40893ED-1B3E-3CEF-AE14-E84B2B7A00D8}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>opencv_world</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\bin\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">opencv_world.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">opencv_world453d</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\bin\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">opencv_world.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">opencv_world453</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>I:\src\opencv-master\opencv\3rdparty\quirc\include;I:\src\opencv-master\build\modules\world;I:\src\opencv-master\build\3rdparty\zlib;I:\src\opencv-master\opencv\3rdparty\zlib;I:\src\opencv-master\opencv\3rdparty\openjpeg\openjp2;I:\src\opencv-master\build\3rdparty\openjpeg\openjp2;I:\src\opencv-master\build\3rdparty\libtiff;I:\src\opencv-master\opencv\3rdparty\libtiff;I:\src\opencv-master\opencv\3rdparty\libpng;I:\src\opencv-master\opencv\3rdparty\libwebp\src;I:\src\opencv-master\build\3rdparty\libjpeg-turbo;I:\src\opencv-master\opencv\3rdparty\libjpeg-turbo\src;I:\src\opencv-master\build\3rdparty\ippicv\ippicv_win\icv\include;I:\src\opencv-master\build\3rdparty\ippicv\ippicv_win\iw\include;I:\src\opencv-master\opencv_contrib\modules\cudev\include;I:\src\opencv-master\opencv\modules\core\include;I:\src\opencv-master\opencv\3rdparty\ittnotify\include;I:\src\opencv-master\opencv_contrib\modules\cudaarithm\include;I:\src\opencv-master\opencv\modules\flann\include;I:\src\opencv-master\opencv\modules\imgproc\include;I:\src\opencv-master\opencv_contrib\modules\intensity_transform\include;I:\src\opencv-master\opencv\modules\ml\include;I:\src\opencv-master\opencv_contrib\modules\phase_unwrapping\include;I:\src\opencv-master\opencv_contrib\modules\plot\include;I:\src\opencv-master\opencv_contrib\modules\quality\include;I:\src\opencv-master\opencv_contrib\modules\reg\include;I:\src\opencv-master\opencv_contrib\modules\surface_matching\include;I:\src\opencv-master\opencv_contrib\modules\alphamat\include;I:\src\opencv-master\opencv_contrib\modules\cudafilters\include;I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\include;I:\src\opencv-master\opencv_contrib\modules\cudawarping\include;I:\src\opencv-master\opencv\modules\dnn\include;I:\src\opencv-master\opencv\modules\dnn\misc\caffe;I:\src\opencv-master\opencv\modules\dnn\misc\tensorflow;I:\src\opencv-master\opencv\modules\dnn\misc\onnx;C:\lib\cudnn-11.4-x64-v8.2.2.26\include;I:\src\opencv-master\opencv_contrib\modules\dnn_superres\include;I:\src\opencv-master\opencv\modules\features2d\include;I:\src\opencv-master\opencv_contrib\modules\fuzzy\include;I:\src\opencv-master\opencv_contrib\modules\hfs\include;I:\src\opencv-master\opencv\modules\imgcodecs\include;I:\src\opencv-master\opencv_contrib\modules\line_descriptor\include;I:\src\opencv-master\opencv\modules\photo\include;I:\src\opencv-master\opencv_contrib\modules\saliency\include;I:\src\opencv-master\opencv_contrib\modules\text\include;I:\src\opencv-master\opencv\modules\videoio\include;I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\include;I:\src\opencv-master\opencv_contrib\modules\xphoto\include;I:\src\opencv-master\opencv_contrib\modules\barcode\include;I:\src\opencv-master\opencv\modules\calib3d\include;I:\src\opencv-master\opencv_contrib\modules\cudacodec\include;I:\src\opencv-master\opencv_contrib\modules\cudafeatures2d\include;I:\src\opencv-master\opencv_contrib\modules\cudastereo\include;I:\src\opencv-master\opencv_contrib\modules\datasets\include;I:\src\opencv-master\opencv\modules\highgui\include;I:\src\opencv-master\opencv_contrib\modules\mcc\include;I:\src\opencv-master\opencv\modules\objdetect\include;I:\src\opencv-master\opencv_contrib\modules\rapid\include;I:\src\opencv-master\opencv_contrib\modules\rgbd\include;I:\src\opencv-master\opencv_contrib\modules\shape\include;I:\src\opencv-master\opencv_contrib\modules\structured_light\include;I:\src\opencv-master\opencv\modules\video\include;I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\include;I:\src\opencv-master\build\downloads\xfeatures2d;I:\src\opencv-master\opencv_contrib\modules\ximgproc\include;I:\src\opencv-master\opencv_contrib\modules\xobjdetect\include;I:\src\opencv-master\opencv_contrib\modules\aruco\include;I:\src\opencv-master\opencv_contrib\modules\bgsegm\include;I:\src\opencv-master\opencv_contrib\modules\bioinspired\include;I:\src\opencv-master\opencv_contrib\modules\ccalib\include;I:\src\opencv-master\opencv_contrib\modules\cudabgsegm\include;I:\src\opencv-master\opencv_contrib\modules\cudalegacy\include;I:\src\opencv-master\opencv_contrib\modules\cudaobjdetect\include;I:\src\opencv-master\opencv_contrib\modules\dnn_objdetect\include;I:\src\opencv-master\opencv_contrib\modules\dpm\include;I:\src\opencv-master\opencv_contrib\modules\face\include;I:\src\opencv-master\opencv\modules\gapi\include;I:\src\opencv-master\opencv\modules\gapi\src;I:\src\opencv-master\opencv_contrib\modules\optflow\include;I:\src\opencv-master\opencv\modules\stitching\include;I:\src\opencv-master\opencv_contrib\modules\tracking\include;I:\src\opencv-master\opencv_contrib\modules\cudaoptflow\include;I:\src\opencv-master\opencv_contrib\modules\stereo\include;I:\src\opencv-master\opencv_contrib\modules\superres\include;I:\src\opencv-master\opencv_contrib\modules\videostab\include;I:\src\opencv-master\opencv\modules\world\include;I:\src\opencv-master\build\3rdparty\ade\ade-0.1.1f\sources\ade\include;I:\src\opencv-master\build\3rdparty\NVIDIAOpticalFlowSDK_2_0_Headers\NVIDIAOpticalFlowSDK-edb50da3cf849840d680249aa6dbef248ebce2ca;I:\src\opencv-master\build;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include;I:\src\opencv-master\opencv\3rdparty\openexr\Half;I:\src\opencv-master\opencv\3rdparty\openexr\Iex;I:\src\opencv-master\opencv\3rdparty\openexr\IlmThread;I:\src\opencv-master\opencv\3rdparty\openexr\Imath;I:\src\opencv-master\opencv\3rdparty\openexr\IlmImf;I:\src\opencv-master\build\3rdparty\openexr;I:\src\eigen-3.3.9;I:\src\opencv-master\opencv\3rdparty\protobuf\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4127;4251;4324;4275;4512;4589;4189;4505;4127;4324;4512;4127;4324;4512;4127;4100;4324;4512;4515;4127;4324;4512;4244;4267;4018;4355;4800;4251;4996;4146;4305;4127;4100;4512;4125;4389;4510;4610;4702;4456;4457;4065;4310;4661;4506;4125;4267;4127;4244;4512;4702;4456;4510;4610;4800;4701;4703;4505;4458;4127;4324;4512;4127;4100;4324;4512;4515;4127;4324;4512;4267;4127;4324;4512;4127;4130;4324;4512;4310;4127;4324;4512;4512;4503;4458;4127;4324;4512</DisableSpecificWarnings>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <ExceptionHandling>Async</ExceptionHandling>
      <FloatingPointModel>Precise</FloatingPointModel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_SCL_SECURE_NO_WARNINGS;ENABLE_PLUGINS;NO_ICONV=1;OPENCV_WITH_ITT=1;OPENCV_MODULE_IS_PART_OF_WORLD=1;_VARIADIC_MAX=10;_WIN32_WINNT=0x0601;__OPENCV_BUILD=1;OPENCV_ALLOCATOR_STATS_COUNTER_TYPE=long long;CV_CUDA4DNN=1;_CRT_SECURE_NO_WARNINGS=1;HAVE_PROTOBUF=1;_HFS_CUDA_ON_;HAVE_WEBP;HAVE_IMGCODEC_HDR;HAVE_IMGCODEC_SUNRASTER;HAVE_IMGCODEC_PXM;HAVE_IMGCODEC_PFM;HAVE_NVIDIA_OPTFLOW=2;_USE_MATH_DEFINES;__STDC_CONSTANT_MACROS;__STDC_LIMIT_MACROS;__STDC_FORMAT_MACROS;OPJ_STATIC;HAVE_DSHOW;HAVE_MSMF;HAVE_MSMF_DXVA;HAVE_FFMPEG_WRAPPER;HAVE_WIN32UI;CMAKE_INTDIR="Debug";CVAPI_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <ProgramDataBaseFileName>I:\src\opencv-master\build\lib\Debug\opencv_world453d.pdb</ProgramDataBaseFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_SCL_SECURE_NO_WARNINGS;ENABLE_PLUGINS;NO_ICONV=1;OPENCV_WITH_ITT=1;OPENCV_MODULE_IS_PART_OF_WORLD=1;_VARIADIC_MAX=10;_WIN32_WINNT=0x0601;__OPENCV_BUILD=1;OPENCV_ALLOCATOR_STATS_COUNTER_TYPE=long long;CV_CUDA4DNN=1;_CRT_SECURE_NO_WARNINGS=1;HAVE_PROTOBUF=1;_HFS_CUDA_ON_;HAVE_WEBP;HAVE_IMGCODEC_HDR;HAVE_IMGCODEC_SUNRASTER;HAVE_IMGCODEC_PXM;HAVE_IMGCODEC_PFM;HAVE_NVIDIA_OPTFLOW=2;_USE_MATH_DEFINES;__STDC_CONSTANT_MACROS;__STDC_LIMIT_MACROS;__STDC_FORMAT_MACROS;OPJ_STATIC;HAVE_DSHOW;HAVE_MSMF;HAVE_MSMF_DXVA;HAVE_FFMPEG_WRAPPER;HAVE_WIN32UI;CMAKE_INTDIR=\"Debug\";CVAPI_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>I:\src\opencv-master\opencv\3rdparty\quirc\include;I:\src\opencv-master\build\modules\world;I:\src\opencv-master\build\3rdparty\zlib;I:\src\opencv-master\opencv\3rdparty\zlib;I:\src\opencv-master\opencv\3rdparty\openjpeg\openjp2;I:\src\opencv-master\build\3rdparty\openjpeg\openjp2;I:\src\opencv-master\build\3rdparty\libtiff;I:\src\opencv-master\opencv\3rdparty\libtiff;I:\src\opencv-master\opencv\3rdparty\libpng;I:\src\opencv-master\opencv\3rdparty\libwebp\src;I:\src\opencv-master\build\3rdparty\libjpeg-turbo;I:\src\opencv-master\opencv\3rdparty\libjpeg-turbo\src;I:\src\opencv-master\build\3rdparty\ippicv\ippicv_win\icv\include;I:\src\opencv-master\build\3rdparty\ippicv\ippicv_win\iw\include;I:\src\opencv-master\opencv_contrib\modules\cudev\include;I:\src\opencv-master\opencv\modules\core\include;I:\src\opencv-master\opencv\3rdparty\ittnotify\include;I:\src\opencv-master\opencv_contrib\modules\cudaarithm\include;I:\src\opencv-master\opencv\modules\flann\include;I:\src\opencv-master\opencv\modules\imgproc\include;I:\src\opencv-master\opencv_contrib\modules\intensity_transform\include;I:\src\opencv-master\opencv\modules\ml\include;I:\src\opencv-master\opencv_contrib\modules\phase_unwrapping\include;I:\src\opencv-master\opencv_contrib\modules\plot\include;I:\src\opencv-master\opencv_contrib\modules\quality\include;I:\src\opencv-master\opencv_contrib\modules\reg\include;I:\src\opencv-master\opencv_contrib\modules\surface_matching\include;I:\src\opencv-master\opencv_contrib\modules\alphamat\include;I:\src\opencv-master\opencv_contrib\modules\cudafilters\include;I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\include;I:\src\opencv-master\opencv_contrib\modules\cudawarping\include;I:\src\opencv-master\opencv\modules\dnn\include;I:\src\opencv-master\opencv\modules\dnn\misc\caffe;I:\src\opencv-master\opencv\modules\dnn\misc\tensorflow;I:\src\opencv-master\opencv\modules\dnn\misc\onnx;C:\lib\cudnn-11.4-x64-v8.2.2.26\include;I:\src\opencv-master\opencv_contrib\modules\dnn_superres\include;I:\src\opencv-master\opencv\modules\features2d\include;I:\src\opencv-master\opencv_contrib\modules\fuzzy\include;I:\src\opencv-master\opencv_contrib\modules\hfs\include;I:\src\opencv-master\opencv\modules\imgcodecs\include;I:\src\opencv-master\opencv_contrib\modules\line_descriptor\include;I:\src\opencv-master\opencv\modules\photo\include;I:\src\opencv-master\opencv_contrib\modules\saliency\include;I:\src\opencv-master\opencv_contrib\modules\text\include;I:\src\opencv-master\opencv\modules\videoio\include;I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\include;I:\src\opencv-master\opencv_contrib\modules\xphoto\include;I:\src\opencv-master\opencv_contrib\modules\barcode\include;I:\src\opencv-master\opencv\modules\calib3d\include;I:\src\opencv-master\opencv_contrib\modules\cudacodec\include;I:\src\opencv-master\opencv_contrib\modules\cudafeatures2d\include;I:\src\opencv-master\opencv_contrib\modules\cudastereo\include;I:\src\opencv-master\opencv_contrib\modules\datasets\include;I:\src\opencv-master\opencv\modules\highgui\include;I:\src\opencv-master\opencv_contrib\modules\mcc\include;I:\src\opencv-master\opencv\modules\objdetect\include;I:\src\opencv-master\opencv_contrib\modules\rapid\include;I:\src\opencv-master\opencv_contrib\modules\rgbd\include;I:\src\opencv-master\opencv_contrib\modules\shape\include;I:\src\opencv-master\opencv_contrib\modules\structured_light\include;I:\src\opencv-master\opencv\modules\video\include;I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\include;I:\src\opencv-master\build\downloads\xfeatures2d;I:\src\opencv-master\opencv_contrib\modules\ximgproc\include;I:\src\opencv-master\opencv_contrib\modules\xobjdetect\include;I:\src\opencv-master\opencv_contrib\modules\aruco\include;I:\src\opencv-master\opencv_contrib\modules\bgsegm\include;I:\src\opencv-master\opencv_contrib\modules\bioinspired\include;I:\src\opencv-master\opencv_contrib\modules\ccalib\include;I:\src\opencv-master\opencv_contrib\modules\cudabgsegm\include;I:\src\opencv-master\opencv_contrib\modules\cudalegacy\include;I:\src\opencv-master\opencv_contrib\modules\cudaobjdetect\include;I:\src\opencv-master\opencv_contrib\modules\dnn_objdetect\include;I:\src\opencv-master\opencv_contrib\modules\dpm\include;I:\src\opencv-master\opencv_contrib\modules\face\include;I:\src\opencv-master\opencv\modules\gapi\include;I:\src\opencv-master\opencv\modules\gapi\src;I:\src\opencv-master\opencv_contrib\modules\optflow\include;I:\src\opencv-master\opencv\modules\stitching\include;I:\src\opencv-master\opencv_contrib\modules\tracking\include;I:\src\opencv-master\opencv_contrib\modules\cudaoptflow\include;I:\src\opencv-master\opencv_contrib\modules\stereo\include;I:\src\opencv-master\opencv_contrib\modules\superres\include;I:\src\opencv-master\opencv_contrib\modules\videostab\include;I:\src\opencv-master\opencv\modules\world\include;I:\src\opencv-master\build\3rdparty\ade\ade-0.1.1f\sources\ade\include;I:\src\opencv-master\build\3rdparty\NVIDIAOpticalFlowSDK_2_0_Headers\NVIDIAOpticalFlowSDK-edb50da3cf849840d680249aa6dbef248ebce2ca;I:\src\opencv-master\build;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include;I:\src\opencv-master\opencv\3rdparty\openexr\Half;I:\src\opencv-master\opencv\3rdparty\openexr\Iex;I:\src\opencv-master\opencv\3rdparty\openexr\IlmThread;I:\src\opencv-master\opencv\3rdparty\openexr\Imath;I:\src\opencv-master\opencv\3rdparty\openexr\IlmImf;I:\src\opencv-master\build\3rdparty\openexr;I:\src\eigen-3.3.9;I:\src\opencv-master\opencv\3rdparty\protobuf\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>I:\src\opencv-master\opencv\3rdparty\quirc\include;I:\src\opencv-master\build\modules\world;I:\src\opencv-master\build\3rdparty\zlib;I:\src\opencv-master\opencv\3rdparty\zlib;I:\src\opencv-master\opencv\3rdparty\openjpeg\openjp2;I:\src\opencv-master\build\3rdparty\openjpeg\openjp2;I:\src\opencv-master\build\3rdparty\libtiff;I:\src\opencv-master\opencv\3rdparty\libtiff;I:\src\opencv-master\opencv\3rdparty\libpng;I:\src\opencv-master\opencv\3rdparty\libwebp\src;I:\src\opencv-master\build\3rdparty\libjpeg-turbo;I:\src\opencv-master\opencv\3rdparty\libjpeg-turbo\src;I:\src\opencv-master\build\3rdparty\ippicv\ippicv_win\icv\include;I:\src\opencv-master\build\3rdparty\ippicv\ippicv_win\iw\include;I:\src\opencv-master\opencv_contrib\modules\cudev\include;I:\src\opencv-master\opencv\modules\core\include;I:\src\opencv-master\opencv\3rdparty\ittnotify\include;I:\src\opencv-master\opencv_contrib\modules\cudaarithm\include;I:\src\opencv-master\opencv\modules\flann\include;I:\src\opencv-master\opencv\modules\imgproc\include;I:\src\opencv-master\opencv_contrib\modules\intensity_transform\include;I:\src\opencv-master\opencv\modules\ml\include;I:\src\opencv-master\opencv_contrib\modules\phase_unwrapping\include;I:\src\opencv-master\opencv_contrib\modules\plot\include;I:\src\opencv-master\opencv_contrib\modules\quality\include;I:\src\opencv-master\opencv_contrib\modules\reg\include;I:\src\opencv-master\opencv_contrib\modules\surface_matching\include;I:\src\opencv-master\opencv_contrib\modules\alphamat\include;I:\src\opencv-master\opencv_contrib\modules\cudafilters\include;I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\include;I:\src\opencv-master\opencv_contrib\modules\cudawarping\include;I:\src\opencv-master\opencv\modules\dnn\include;I:\src\opencv-master\opencv\modules\dnn\misc\caffe;I:\src\opencv-master\opencv\modules\dnn\misc\tensorflow;I:\src\opencv-master\opencv\modules\dnn\misc\onnx;C:\lib\cudnn-11.4-x64-v8.2.2.26\include;I:\src\opencv-master\opencv_contrib\modules\dnn_superres\include;I:\src\opencv-master\opencv\modules\features2d\include;I:\src\opencv-master\opencv_contrib\modules\fuzzy\include;I:\src\opencv-master\opencv_contrib\modules\hfs\include;I:\src\opencv-master\opencv\modules\imgcodecs\include;I:\src\opencv-master\opencv_contrib\modules\line_descriptor\include;I:\src\opencv-master\opencv\modules\photo\include;I:\src\opencv-master\opencv_contrib\modules\saliency\include;I:\src\opencv-master\opencv_contrib\modules\text\include;I:\src\opencv-master\opencv\modules\videoio\include;I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\include;I:\src\opencv-master\opencv_contrib\modules\xphoto\include;I:\src\opencv-master\opencv_contrib\modules\barcode\include;I:\src\opencv-master\opencv\modules\calib3d\include;I:\src\opencv-master\opencv_contrib\modules\cudacodec\include;I:\src\opencv-master\opencv_contrib\modules\cudafeatures2d\include;I:\src\opencv-master\opencv_contrib\modules\cudastereo\include;I:\src\opencv-master\opencv_contrib\modules\datasets\include;I:\src\opencv-master\opencv\modules\highgui\include;I:\src\opencv-master\opencv_contrib\modules\mcc\include;I:\src\opencv-master\opencv\modules\objdetect\include;I:\src\opencv-master\opencv_contrib\modules\rapid\include;I:\src\opencv-master\opencv_contrib\modules\rgbd\include;I:\src\opencv-master\opencv_contrib\modules\shape\include;I:\src\opencv-master\opencv_contrib\modules\structured_light\include;I:\src\opencv-master\opencv\modules\video\include;I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\include;I:\src\opencv-master\build\downloads\xfeatures2d;I:\src\opencv-master\opencv_contrib\modules\ximgproc\include;I:\src\opencv-master\opencv_contrib\modules\xobjdetect\include;I:\src\opencv-master\opencv_contrib\modules\aruco\include;I:\src\opencv-master\opencv_contrib\modules\bgsegm\include;I:\src\opencv-master\opencv_contrib\modules\bioinspired\include;I:\src\opencv-master\opencv_contrib\modules\ccalib\include;I:\src\opencv-master\opencv_contrib\modules\cudabgsegm\include;I:\src\opencv-master\opencv_contrib\modules\cudalegacy\include;I:\src\opencv-master\opencv_contrib\modules\cudaobjdetect\include;I:\src\opencv-master\opencv_contrib\modules\dnn_objdetect\include;I:\src\opencv-master\opencv_contrib\modules\dpm\include;I:\src\opencv-master\opencv_contrib\modules\face\include;I:\src\opencv-master\opencv\modules\gapi\include;I:\src\opencv-master\opencv\modules\gapi\src;I:\src\opencv-master\opencv_contrib\modules\optflow\include;I:\src\opencv-master\opencv\modules\stitching\include;I:\src\opencv-master\opencv_contrib\modules\tracking\include;I:\src\opencv-master\opencv_contrib\modules\cudaoptflow\include;I:\src\opencv-master\opencv_contrib\modules\stereo\include;I:\src\opencv-master\opencv_contrib\modules\superres\include;I:\src\opencv-master\opencv_contrib\modules\videostab\include;I:\src\opencv-master\opencv\modules\world\include;I:\src\opencv-master\build\3rdparty\ade\ade-0.1.1f\sources\ade\include;I:\src\opencv-master\build\3rdparty\NVIDIAOpticalFlowSDK_2_0_Headers\NVIDIAOpticalFlowSDK-edb50da3cf849840d680249aa6dbef248ebce2ca;I:\src\opencv-master\build;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include;I:\src\opencv-master\opencv\3rdparty\openexr\Half;I:\src\opencv-master\opencv\3rdparty\openexr\Iex;I:\src\opencv-master\opencv\3rdparty\openexr\IlmThread;I:\src\opencv-master\opencv\3rdparty\openexr\Imath;I:\src\opencv-master\opencv\3rdparty\openexr\IlmImf;I:\src\opencv-master\build\3rdparty\openexr;I:\src\eigen-3.3.9;I:\src\opencv-master\opencv\3rdparty\protobuf\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\..\3rdparty\lib\Debug\ippiwd.lib;..\..\3rdparty\ippicv\ippicv_win\icv\lib\intel64\ippicvmt.lib;cudart_static.lib;nppc.lib;nppial.lib;nppicc.lib;nppidei.lib;nppif.lib;nppig.lib;nppim.lib;nppist.lib;nppisu.lib;nppitc.lib;npps.lib;cublas.lib;cudnn.lib;cufft.lib;-LIBPATH:C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.4/lib/x64;-LIBPATH:C:/lib/cudnn-11.4-x64-v8.2.2.26/lib/x64;cublas.lib;cufft.lib;..\..\3rdparty\lib\Debug\libprotobufd.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_intel_lp64.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_sequential.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_core.lib;..\..\3rdparty\lib\Debug\libjpeg-turbod.lib;..\..\3rdparty\lib\Debug\libwebpd.lib;..\..\3rdparty\lib\Debug\libpngd.lib;..\..\3rdparty\lib\Debug\libtiffd.lib;..\..\3rdparty\lib\Debug\libopenjp2d.lib;..\..\3rdparty\lib\Debug\IlmImfd.lib;..\..\3rdparty\lib\Debug\zlibd.lib;comctl32.lib;gdi32.lib;ole32.lib;setupapi.lib;ws2_32.lib;..\..\3rdparty\lib\Debug\zlibd.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_intel_lp64.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_sequential.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_core.lib;..\..\3rdparty\lib\Debug\ittnotifyd.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_intel_lp64.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_sequential.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_core.lib;..\..\3rdparty\lib\Debug\quircd.lib;..\..\3rdparty\lib\Debug\aded.lib;..\..\3rdparty\lib\Debug\ittnotifyd.lib;wsock32.lib;ws2_32.lib;cudart_static.lib;nppc.lib;nppial.lib;nppicc.lib;nppidei.lib;nppif.lib;nppig.lib;nppim.lib;nppist.lib;nppisu.lib;nppitc.lib;npps.lib;cublas.lib;cudnn.lib;cufft.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_intel_lp64.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_sequential.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_core.lib;comctl32.lib;ole32.lib;setupapi.lib;wsock32.lib;user32.lib;gdi32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.4/lib/x64;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.4/lib/x64/$(Configuration);C:/lib/cudnn-11.4-x64-v8.2.2.26/lib/x64;C:/lib/cudnn-11.4-x64-v8.2.2.26/lib/x64/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>atlthunk.lib;atlsd.lib;libcmt.lib;%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>I:/src/opencv-master/build/lib/Debug/opencv_world453d.lib</ImportLibrary>
      <ProgramDataBaseFile>I:/src/opencv-master/build/bin/Debug/opencv_world453d.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>I:\src\opencv-master\opencv\3rdparty\quirc\include;I:\src\opencv-master\build\modules\world;I:\src\opencv-master\build\3rdparty\zlib;I:\src\opencv-master\opencv\3rdparty\zlib;I:\src\opencv-master\opencv\3rdparty\openjpeg\openjp2;I:\src\opencv-master\build\3rdparty\openjpeg\openjp2;I:\src\opencv-master\build\3rdparty\libtiff;I:\src\opencv-master\opencv\3rdparty\libtiff;I:\src\opencv-master\opencv\3rdparty\libpng;I:\src\opencv-master\opencv\3rdparty\libwebp\src;I:\src\opencv-master\build\3rdparty\libjpeg-turbo;I:\src\opencv-master\opencv\3rdparty\libjpeg-turbo\src;I:\src\opencv-master\build\3rdparty\ippicv\ippicv_win\icv\include;I:\src\opencv-master\build\3rdparty\ippicv\ippicv_win\iw\include;I:\src\opencv-master\opencv_contrib\modules\cudev\include;I:\src\opencv-master\opencv\modules\core\include;I:\src\opencv-master\opencv\3rdparty\ittnotify\include;I:\src\opencv-master\opencv_contrib\modules\cudaarithm\include;I:\src\opencv-master\opencv\modules\flann\include;I:\src\opencv-master\opencv\modules\imgproc\include;I:\src\opencv-master\opencv_contrib\modules\intensity_transform\include;I:\src\opencv-master\opencv\modules\ml\include;I:\src\opencv-master\opencv_contrib\modules\phase_unwrapping\include;I:\src\opencv-master\opencv_contrib\modules\plot\include;I:\src\opencv-master\opencv_contrib\modules\quality\include;I:\src\opencv-master\opencv_contrib\modules\reg\include;I:\src\opencv-master\opencv_contrib\modules\surface_matching\include;I:\src\opencv-master\opencv_contrib\modules\alphamat\include;I:\src\opencv-master\opencv_contrib\modules\cudafilters\include;I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\include;I:\src\opencv-master\opencv_contrib\modules\cudawarping\include;I:\src\opencv-master\opencv\modules\dnn\include;I:\src\opencv-master\opencv\modules\dnn\misc\caffe;I:\src\opencv-master\opencv\modules\dnn\misc\tensorflow;I:\src\opencv-master\opencv\modules\dnn\misc\onnx;C:\lib\cudnn-11.4-x64-v8.2.2.26\include;I:\src\opencv-master\opencv_contrib\modules\dnn_superres\include;I:\src\opencv-master\opencv\modules\features2d\include;I:\src\opencv-master\opencv_contrib\modules\fuzzy\include;I:\src\opencv-master\opencv_contrib\modules\hfs\include;I:\src\opencv-master\opencv\modules\imgcodecs\include;I:\src\opencv-master\opencv_contrib\modules\line_descriptor\include;I:\src\opencv-master\opencv\modules\photo\include;I:\src\opencv-master\opencv_contrib\modules\saliency\include;I:\src\opencv-master\opencv_contrib\modules\text\include;I:\src\opencv-master\opencv\modules\videoio\include;I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\include;I:\src\opencv-master\opencv_contrib\modules\xphoto\include;I:\src\opencv-master\opencv_contrib\modules\barcode\include;I:\src\opencv-master\opencv\modules\calib3d\include;I:\src\opencv-master\opencv_contrib\modules\cudacodec\include;I:\src\opencv-master\opencv_contrib\modules\cudafeatures2d\include;I:\src\opencv-master\opencv_contrib\modules\cudastereo\include;I:\src\opencv-master\opencv_contrib\modules\datasets\include;I:\src\opencv-master\opencv\modules\highgui\include;I:\src\opencv-master\opencv_contrib\modules\mcc\include;I:\src\opencv-master\opencv\modules\objdetect\include;I:\src\opencv-master\opencv_contrib\modules\rapid\include;I:\src\opencv-master\opencv_contrib\modules\rgbd\include;I:\src\opencv-master\opencv_contrib\modules\shape\include;I:\src\opencv-master\opencv_contrib\modules\structured_light\include;I:\src\opencv-master\opencv\modules\video\include;I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\include;I:\src\opencv-master\build\downloads\xfeatures2d;I:\src\opencv-master\opencv_contrib\modules\ximgproc\include;I:\src\opencv-master\opencv_contrib\modules\xobjdetect\include;I:\src\opencv-master\opencv_contrib\modules\aruco\include;I:\src\opencv-master\opencv_contrib\modules\bgsegm\include;I:\src\opencv-master\opencv_contrib\modules\bioinspired\include;I:\src\opencv-master\opencv_contrib\modules\ccalib\include;I:\src\opencv-master\opencv_contrib\modules\cudabgsegm\include;I:\src\opencv-master\opencv_contrib\modules\cudalegacy\include;I:\src\opencv-master\opencv_contrib\modules\cudaobjdetect\include;I:\src\opencv-master\opencv_contrib\modules\dnn_objdetect\include;I:\src\opencv-master\opencv_contrib\modules\dpm\include;I:\src\opencv-master\opencv_contrib\modules\face\include;I:\src\opencv-master\opencv\modules\gapi\include;I:\src\opencv-master\opencv\modules\gapi\src;I:\src\opencv-master\opencv_contrib\modules\optflow\include;I:\src\opencv-master\opencv\modules\stitching\include;I:\src\opencv-master\opencv_contrib\modules\tracking\include;I:\src\opencv-master\opencv_contrib\modules\cudaoptflow\include;I:\src\opencv-master\opencv_contrib\modules\stereo\include;I:\src\opencv-master\opencv_contrib\modules\superres\include;I:\src\opencv-master\opencv_contrib\modules\videostab\include;I:\src\opencv-master\opencv\modules\world\include;I:\src\opencv-master\build\3rdparty\ade\ade-0.1.1f\sources\ade\include;I:\src\opencv-master\build\3rdparty\NVIDIAOpticalFlowSDK_2_0_Headers\NVIDIAOpticalFlowSDK-edb50da3cf849840d680249aa6dbef248ebce2ca;I:\src\opencv-master\build;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include;I:\src\opencv-master\opencv\3rdparty\openexr\Half;I:\src\opencv-master\opencv\3rdparty\openexr\Iex;I:\src\opencv-master\opencv\3rdparty\openexr\IlmThread;I:\src\opencv-master\opencv\3rdparty\openexr\Imath;I:\src\opencv-master\opencv\3rdparty\openexr\IlmImf;I:\src\opencv-master\build\3rdparty\openexr;I:\src\eigen-3.3.9;I:\src\opencv-master\opencv\3rdparty\protobuf\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DisableSpecificWarnings>4127;4251;4324;4275;4512;4589;4189;4505;4127;4324;4512;4127;4324;4512;4127;4100;4324;4512;4515;4127;4324;4512;4244;4267;4018;4355;4800;4251;4996;4146;4305;4127;4100;4512;4125;4389;4510;4610;4702;4456;4457;4065;4310;4661;4506;4125;4267;4127;4244;4512;4702;4456;4510;4610;4800;4701;4703;4505;4458;4127;4324;4512;4127;4100;4324;4512;4515;4127;4324;4512;4267;4127;4324;4512;4127;4130;4324;4512;4310;4127;4324;4512;4512;4503;4458;4127;4324;4512</DisableSpecificWarnings>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <ExceptionHandling>Async</ExceptionHandling>
      <FloatingPointModel>Precise</FloatingPointModel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_SCL_SECURE_NO_WARNINGS;NDEBUG;ENABLE_PLUGINS;NO_ICONV=1;OPENCV_WITH_ITT=1;OPENCV_MODULE_IS_PART_OF_WORLD=1;_VARIADIC_MAX=10;_WIN32_WINNT=0x0601;__OPENCV_BUILD=1;OPENCV_ALLOCATOR_STATS_COUNTER_TYPE=long long;CV_CUDA4DNN=1;_CRT_SECURE_NO_WARNINGS=1;HAVE_PROTOBUF=1;_HFS_CUDA_ON_;HAVE_WEBP;HAVE_IMGCODEC_HDR;HAVE_IMGCODEC_SUNRASTER;HAVE_IMGCODEC_PXM;HAVE_IMGCODEC_PFM;HAVE_NVIDIA_OPTFLOW=2;_USE_MATH_DEFINES;__STDC_CONSTANT_MACROS;__STDC_LIMIT_MACROS;__STDC_FORMAT_MACROS;OPJ_STATIC;HAVE_DSHOW;HAVE_MSMF;HAVE_MSMF_DXVA;HAVE_FFMPEG_WRAPPER;HAVE_WIN32UI;CMAKE_INTDIR="Release";CVAPI_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <ProgramDataBaseFileName>I:\src\opencv-master\build\lib\Release\opencv_world453.pdb</ProgramDataBaseFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_DEPRECATE;_SCL_SECURE_NO_WARNINGS;NDEBUG;ENABLE_PLUGINS;NO_ICONV=1;OPENCV_WITH_ITT=1;OPENCV_MODULE_IS_PART_OF_WORLD=1;_VARIADIC_MAX=10;_WIN32_WINNT=0x0601;__OPENCV_BUILD=1;OPENCV_ALLOCATOR_STATS_COUNTER_TYPE=long long;CV_CUDA4DNN=1;_CRT_SECURE_NO_WARNINGS=1;HAVE_PROTOBUF=1;_HFS_CUDA_ON_;HAVE_WEBP;HAVE_IMGCODEC_HDR;HAVE_IMGCODEC_SUNRASTER;HAVE_IMGCODEC_PXM;HAVE_IMGCODEC_PFM;HAVE_NVIDIA_OPTFLOW=2;_USE_MATH_DEFINES;__STDC_CONSTANT_MACROS;__STDC_LIMIT_MACROS;__STDC_FORMAT_MACROS;OPJ_STATIC;HAVE_DSHOW;HAVE_MSMF;HAVE_MSMF_DXVA;HAVE_FFMPEG_WRAPPER;HAVE_WIN32UI;CMAKE_INTDIR=\"Release\";CVAPI_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>I:\src\opencv-master\opencv\3rdparty\quirc\include;I:\src\opencv-master\build\modules\world;I:\src\opencv-master\build\3rdparty\zlib;I:\src\opencv-master\opencv\3rdparty\zlib;I:\src\opencv-master\opencv\3rdparty\openjpeg\openjp2;I:\src\opencv-master\build\3rdparty\openjpeg\openjp2;I:\src\opencv-master\build\3rdparty\libtiff;I:\src\opencv-master\opencv\3rdparty\libtiff;I:\src\opencv-master\opencv\3rdparty\libpng;I:\src\opencv-master\opencv\3rdparty\libwebp\src;I:\src\opencv-master\build\3rdparty\libjpeg-turbo;I:\src\opencv-master\opencv\3rdparty\libjpeg-turbo\src;I:\src\opencv-master\build\3rdparty\ippicv\ippicv_win\icv\include;I:\src\opencv-master\build\3rdparty\ippicv\ippicv_win\iw\include;I:\src\opencv-master\opencv_contrib\modules\cudev\include;I:\src\opencv-master\opencv\modules\core\include;I:\src\opencv-master\opencv\3rdparty\ittnotify\include;I:\src\opencv-master\opencv_contrib\modules\cudaarithm\include;I:\src\opencv-master\opencv\modules\flann\include;I:\src\opencv-master\opencv\modules\imgproc\include;I:\src\opencv-master\opencv_contrib\modules\intensity_transform\include;I:\src\opencv-master\opencv\modules\ml\include;I:\src\opencv-master\opencv_contrib\modules\phase_unwrapping\include;I:\src\opencv-master\opencv_contrib\modules\plot\include;I:\src\opencv-master\opencv_contrib\modules\quality\include;I:\src\opencv-master\opencv_contrib\modules\reg\include;I:\src\opencv-master\opencv_contrib\modules\surface_matching\include;I:\src\opencv-master\opencv_contrib\modules\alphamat\include;I:\src\opencv-master\opencv_contrib\modules\cudafilters\include;I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\include;I:\src\opencv-master\opencv_contrib\modules\cudawarping\include;I:\src\opencv-master\opencv\modules\dnn\include;I:\src\opencv-master\opencv\modules\dnn\misc\caffe;I:\src\opencv-master\opencv\modules\dnn\misc\tensorflow;I:\src\opencv-master\opencv\modules\dnn\misc\onnx;C:\lib\cudnn-11.4-x64-v8.2.2.26\include;I:\src\opencv-master\opencv_contrib\modules\dnn_superres\include;I:\src\opencv-master\opencv\modules\features2d\include;I:\src\opencv-master\opencv_contrib\modules\fuzzy\include;I:\src\opencv-master\opencv_contrib\modules\hfs\include;I:\src\opencv-master\opencv\modules\imgcodecs\include;I:\src\opencv-master\opencv_contrib\modules\line_descriptor\include;I:\src\opencv-master\opencv\modules\photo\include;I:\src\opencv-master\opencv_contrib\modules\saliency\include;I:\src\opencv-master\opencv_contrib\modules\text\include;I:\src\opencv-master\opencv\modules\videoio\include;I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\include;I:\src\opencv-master\opencv_contrib\modules\xphoto\include;I:\src\opencv-master\opencv_contrib\modules\barcode\include;I:\src\opencv-master\opencv\modules\calib3d\include;I:\src\opencv-master\opencv_contrib\modules\cudacodec\include;I:\src\opencv-master\opencv_contrib\modules\cudafeatures2d\include;I:\src\opencv-master\opencv_contrib\modules\cudastereo\include;I:\src\opencv-master\opencv_contrib\modules\datasets\include;I:\src\opencv-master\opencv\modules\highgui\include;I:\src\opencv-master\opencv_contrib\modules\mcc\include;I:\src\opencv-master\opencv\modules\objdetect\include;I:\src\opencv-master\opencv_contrib\modules\rapid\include;I:\src\opencv-master\opencv_contrib\modules\rgbd\include;I:\src\opencv-master\opencv_contrib\modules\shape\include;I:\src\opencv-master\opencv_contrib\modules\structured_light\include;I:\src\opencv-master\opencv\modules\video\include;I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\include;I:\src\opencv-master\build\downloads\xfeatures2d;I:\src\opencv-master\opencv_contrib\modules\ximgproc\include;I:\src\opencv-master\opencv_contrib\modules\xobjdetect\include;I:\src\opencv-master\opencv_contrib\modules\aruco\include;I:\src\opencv-master\opencv_contrib\modules\bgsegm\include;I:\src\opencv-master\opencv_contrib\modules\bioinspired\include;I:\src\opencv-master\opencv_contrib\modules\ccalib\include;I:\src\opencv-master\opencv_contrib\modules\cudabgsegm\include;I:\src\opencv-master\opencv_contrib\modules\cudalegacy\include;I:\src\opencv-master\opencv_contrib\modules\cudaobjdetect\include;I:\src\opencv-master\opencv_contrib\modules\dnn_objdetect\include;I:\src\opencv-master\opencv_contrib\modules\dpm\include;I:\src\opencv-master\opencv_contrib\modules\face\include;I:\src\opencv-master\opencv\modules\gapi\include;I:\src\opencv-master\opencv\modules\gapi\src;I:\src\opencv-master\opencv_contrib\modules\optflow\include;I:\src\opencv-master\opencv\modules\stitching\include;I:\src\opencv-master\opencv_contrib\modules\tracking\include;I:\src\opencv-master\opencv_contrib\modules\cudaoptflow\include;I:\src\opencv-master\opencv_contrib\modules\stereo\include;I:\src\opencv-master\opencv_contrib\modules\superres\include;I:\src\opencv-master\opencv_contrib\modules\videostab\include;I:\src\opencv-master\opencv\modules\world\include;I:\src\opencv-master\build\3rdparty\ade\ade-0.1.1f\sources\ade\include;I:\src\opencv-master\build\3rdparty\NVIDIAOpticalFlowSDK_2_0_Headers\NVIDIAOpticalFlowSDK-edb50da3cf849840d680249aa6dbef248ebce2ca;I:\src\opencv-master\build;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include;I:\src\opencv-master\opencv\3rdparty\openexr\Half;I:\src\opencv-master\opencv\3rdparty\openexr\Iex;I:\src\opencv-master\opencv\3rdparty\openexr\IlmThread;I:\src\opencv-master\opencv\3rdparty\openexr\Imath;I:\src\opencv-master\opencv\3rdparty\openexr\IlmImf;I:\src\opencv-master\build\3rdparty\openexr;I:\src\eigen-3.3.9;I:\src\opencv-master\opencv\3rdparty\protobuf\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>I:\src\opencv-master\opencv\3rdparty\quirc\include;I:\src\opencv-master\build\modules\world;I:\src\opencv-master\build\3rdparty\zlib;I:\src\opencv-master\opencv\3rdparty\zlib;I:\src\opencv-master\opencv\3rdparty\openjpeg\openjp2;I:\src\opencv-master\build\3rdparty\openjpeg\openjp2;I:\src\opencv-master\build\3rdparty\libtiff;I:\src\opencv-master\opencv\3rdparty\libtiff;I:\src\opencv-master\opencv\3rdparty\libpng;I:\src\opencv-master\opencv\3rdparty\libwebp\src;I:\src\opencv-master\build\3rdparty\libjpeg-turbo;I:\src\opencv-master\opencv\3rdparty\libjpeg-turbo\src;I:\src\opencv-master\build\3rdparty\ippicv\ippicv_win\icv\include;I:\src\opencv-master\build\3rdparty\ippicv\ippicv_win\iw\include;I:\src\opencv-master\opencv_contrib\modules\cudev\include;I:\src\opencv-master\opencv\modules\core\include;I:\src\opencv-master\opencv\3rdparty\ittnotify\include;I:\src\opencv-master\opencv_contrib\modules\cudaarithm\include;I:\src\opencv-master\opencv\modules\flann\include;I:\src\opencv-master\opencv\modules\imgproc\include;I:\src\opencv-master\opencv_contrib\modules\intensity_transform\include;I:\src\opencv-master\opencv\modules\ml\include;I:\src\opencv-master\opencv_contrib\modules\phase_unwrapping\include;I:\src\opencv-master\opencv_contrib\modules\plot\include;I:\src\opencv-master\opencv_contrib\modules\quality\include;I:\src\opencv-master\opencv_contrib\modules\reg\include;I:\src\opencv-master\opencv_contrib\modules\surface_matching\include;I:\src\opencv-master\opencv_contrib\modules\alphamat\include;I:\src\opencv-master\opencv_contrib\modules\cudafilters\include;I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\include;I:\src\opencv-master\opencv_contrib\modules\cudawarping\include;I:\src\opencv-master\opencv\modules\dnn\include;I:\src\opencv-master\opencv\modules\dnn\misc\caffe;I:\src\opencv-master\opencv\modules\dnn\misc\tensorflow;I:\src\opencv-master\opencv\modules\dnn\misc\onnx;C:\lib\cudnn-11.4-x64-v8.2.2.26\include;I:\src\opencv-master\opencv_contrib\modules\dnn_superres\include;I:\src\opencv-master\opencv\modules\features2d\include;I:\src\opencv-master\opencv_contrib\modules\fuzzy\include;I:\src\opencv-master\opencv_contrib\modules\hfs\include;I:\src\opencv-master\opencv\modules\imgcodecs\include;I:\src\opencv-master\opencv_contrib\modules\line_descriptor\include;I:\src\opencv-master\opencv\modules\photo\include;I:\src\opencv-master\opencv_contrib\modules\saliency\include;I:\src\opencv-master\opencv_contrib\modules\text\include;I:\src\opencv-master\opencv\modules\videoio\include;I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\include;I:\src\opencv-master\opencv_contrib\modules\xphoto\include;I:\src\opencv-master\opencv_contrib\modules\barcode\include;I:\src\opencv-master\opencv\modules\calib3d\include;I:\src\opencv-master\opencv_contrib\modules\cudacodec\include;I:\src\opencv-master\opencv_contrib\modules\cudafeatures2d\include;I:\src\opencv-master\opencv_contrib\modules\cudastereo\include;I:\src\opencv-master\opencv_contrib\modules\datasets\include;I:\src\opencv-master\opencv\modules\highgui\include;I:\src\opencv-master\opencv_contrib\modules\mcc\include;I:\src\opencv-master\opencv\modules\objdetect\include;I:\src\opencv-master\opencv_contrib\modules\rapid\include;I:\src\opencv-master\opencv_contrib\modules\rgbd\include;I:\src\opencv-master\opencv_contrib\modules\shape\include;I:\src\opencv-master\opencv_contrib\modules\structured_light\include;I:\src\opencv-master\opencv\modules\video\include;I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\include;I:\src\opencv-master\build\downloads\xfeatures2d;I:\src\opencv-master\opencv_contrib\modules\ximgproc\include;I:\src\opencv-master\opencv_contrib\modules\xobjdetect\include;I:\src\opencv-master\opencv_contrib\modules\aruco\include;I:\src\opencv-master\opencv_contrib\modules\bgsegm\include;I:\src\opencv-master\opencv_contrib\modules\bioinspired\include;I:\src\opencv-master\opencv_contrib\modules\ccalib\include;I:\src\opencv-master\opencv_contrib\modules\cudabgsegm\include;I:\src\opencv-master\opencv_contrib\modules\cudalegacy\include;I:\src\opencv-master\opencv_contrib\modules\cudaobjdetect\include;I:\src\opencv-master\opencv_contrib\modules\dnn_objdetect\include;I:\src\opencv-master\opencv_contrib\modules\dpm\include;I:\src\opencv-master\opencv_contrib\modules\face\include;I:\src\opencv-master\opencv\modules\gapi\include;I:\src\opencv-master\opencv\modules\gapi\src;I:\src\opencv-master\opencv_contrib\modules\optflow\include;I:\src\opencv-master\opencv\modules\stitching\include;I:\src\opencv-master\opencv_contrib\modules\tracking\include;I:\src\opencv-master\opencv_contrib\modules\cudaoptflow\include;I:\src\opencv-master\opencv_contrib\modules\stereo\include;I:\src\opencv-master\opencv_contrib\modules\superres\include;I:\src\opencv-master\opencv_contrib\modules\videostab\include;I:\src\opencv-master\opencv\modules\world\include;I:\src\opencv-master\build\3rdparty\ade\ade-0.1.1f\sources\ade\include;I:\src\opencv-master\build\3rdparty\NVIDIAOpticalFlowSDK_2_0_Headers\NVIDIAOpticalFlowSDK-edb50da3cf849840d680249aa6dbef248ebce2ca;I:\src\opencv-master\build;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include;I:\src\opencv-master\opencv\3rdparty\openexr\Half;I:\src\opencv-master\opencv\3rdparty\openexr\Iex;I:\src\opencv-master\opencv\3rdparty\openexr\IlmThread;I:\src\opencv-master\opencv\3rdparty\openexr\Imath;I:\src\opencv-master\opencv\3rdparty\openexr\IlmImf;I:\src\opencv-master\build\3rdparty\openexr;I:\src\eigen-3.3.9;I:\src\opencv-master\opencv\3rdparty\protobuf\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\..\3rdparty\lib\Release\ippiw.lib;..\..\3rdparty\ippicv\ippicv_win\icv\lib\intel64\ippicvmt.lib;cudart_static.lib;nppc.lib;nppial.lib;nppicc.lib;nppidei.lib;nppif.lib;nppig.lib;nppim.lib;nppist.lib;nppisu.lib;nppitc.lib;npps.lib;cublas.lib;cudnn.lib;cufft.lib;-LIBPATH:C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.4/lib/x64;-LIBPATH:C:/lib/cudnn-11.4-x64-v8.2.2.26/lib/x64;cublas.lib;cufft.lib;..\..\3rdparty\lib\Release\libprotobuf.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_intel_lp64.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_sequential.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_core.lib;..\..\3rdparty\lib\Release\libjpeg-turbo.lib;..\..\3rdparty\lib\Release\libwebp.lib;..\..\3rdparty\lib\Release\libpng.lib;..\..\3rdparty\lib\Release\libtiff.lib;..\..\3rdparty\lib\Release\libopenjp2.lib;..\..\3rdparty\lib\Release\IlmImf.lib;..\..\3rdparty\lib\Release\zlib.lib;comctl32.lib;gdi32.lib;ole32.lib;setupapi.lib;ws2_32.lib;..\..\3rdparty\lib\Release\zlib.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_intel_lp64.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_sequential.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_core.lib;..\..\3rdparty\lib\Release\ittnotify.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_intel_lp64.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_sequential.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_core.lib;..\..\3rdparty\lib\Release\quirc.lib;..\..\3rdparty\lib\Release\ade.lib;..\..\3rdparty\lib\Release\ittnotify.lib;wsock32.lib;ws2_32.lib;cudart_static.lib;nppc.lib;nppial.lib;nppicc.lib;nppidei.lib;nppif.lib;nppig.lib;nppim.lib;nppist.lib;nppisu.lib;nppitc.lib;npps.lib;cublas.lib;cudnn.lib;cufft.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_intel_lp64.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_sequential.lib;C:\Program Files (x86)\Intel\oneAPI\mkl\2021.1.1\lib\intel64\mkl_core.lib;comctl32.lib;ole32.lib;setupapi.lib;wsock32.lib;user32.lib;gdi32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.4/lib/x64;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.4/lib/x64/$(Configuration);C:/lib/cudnn-11.4-x64-v8.2.2.26/lib/x64;C:/lib/cudnn-11.4-x64-v8.2.2.26/lib/x64/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>atlthunk.lib;atlsd.lib;libcmt.lib;%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>I:/src/opencv-master/build/lib/Release/opencv_world453.lib</ImportLibrary>
      <ProgramDataBaseFile>I:/src/opencv-master/build/bin/Release/opencv_world453.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\build\CMakeFiles\76cdaa2b53db5cfcfd4e6f14d1ac1437\opencl_kernels_core.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Processing OpenCL kernels (core)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=core -DCL_DIR=I:/src/opencv-master/opencv/modules/core/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_core.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\opencv\modules\core\src\opencl\arithm.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\convert.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\copymakeborder.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\copyset.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\cvtclr_dx.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\fft.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\flip.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\gemm.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\halfconvert.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\inrange.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\intel_gemm.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\lut.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\meanstddev.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\minmaxloc.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\mixchannels.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\mulspectrums.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\normalize.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\reduce.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\reduce2.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\repeat.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\set_identity.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\split_merge.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\transpose.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_core.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Processing OpenCL kernels (core)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=core -DCL_DIR=I:/src/opencv-master/opencv/modules/core/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_core.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\opencv\modules\core\src\opencl\arithm.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\convert.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\copymakeborder.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\copyset.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\cvtclr_dx.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\fft.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\flip.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\gemm.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\halfconvert.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\inrange.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\intel_gemm.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\lut.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\meanstddev.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\minmaxloc.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\mixchannels.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\mulspectrums.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\normalize.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\reduce.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\reduce2.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\repeat.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\set_identity.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\split_merge.cl;I:\src\opencv-master\opencv\modules\core\src\opencl\transpose.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_core.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\core\src\cuda\gpu_mat.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/core/src/cuda/$(Configuration)/cuda_compile_1_generated_gpu_mat.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\core\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/core/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/core/src/cuda/$(Configuration)/cuda_compile_1_generated_gpu_mat.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/core/src/cuda/$(Configuration)/cuda_compile_1_generated_gpu_mat.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/core/src/cuda/cuda_compile_1_generated_gpu_mat.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\core\src\cuda\cuda_compile_1_generated_gpu_mat.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\core\src\cuda\cuda_compile_1_generated_gpu_mat.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\core\src\cuda\$(Configuration)\cuda_compile_1_generated_gpu_mat.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/core/src/cuda/$(Configuration)/cuda_compile_1_generated_gpu_mat.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\core\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/core/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/core/src/cuda/$(Configuration)/cuda_compile_1_generated_gpu_mat.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/core/src/cuda/$(Configuration)/cuda_compile_1_generated_gpu_mat.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/core/src/cuda/cuda_compile_1_generated_gpu_mat.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\core\src\cuda\cuda_compile_1_generated_gpu_mat.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\core\src\cuda\cuda_compile_1_generated_gpu_mat.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\core\src\cuda\$(Configuration)\cuda_compile_1_generated_gpu_mat.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\core\src\cuda\gpu_mat_nd.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/core/src/cuda/$(Configuration)/cuda_compile_1_generated_gpu_mat_nd.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\core\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/core/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/core/src/cuda/$(Configuration)/cuda_compile_1_generated_gpu_mat_nd.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/core/src/cuda/$(Configuration)/cuda_compile_1_generated_gpu_mat_nd.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/core/src/cuda/cuda_compile_1_generated_gpu_mat_nd.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\core\src\cuda\cuda_compile_1_generated_gpu_mat_nd.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\core\src\cuda\cuda_compile_1_generated_gpu_mat_nd.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\core\src\cuda\$(Configuration)\cuda_compile_1_generated_gpu_mat_nd.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/core/src/cuda/$(Configuration)/cuda_compile_1_generated_gpu_mat_nd.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\core\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/core/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/core/src/cuda/$(Configuration)/cuda_compile_1_generated_gpu_mat_nd.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/core/src/cuda/$(Configuration)/cuda_compile_1_generated_gpu_mat_nd.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/core/src/cuda/cuda_compile_1_generated_gpu_mat_nd.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\core\src\cuda\cuda_compile_1_generated_gpu_mat_nd.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\core\src\cuda\cuda_compile_1_generated_gpu_mat_nd.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\core\src\cuda\$(Configuration)\cuda_compile_1_generated_gpu_mat_nd.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\absdiff_mat.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_absdiff_mat.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_absdiff_mat.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_absdiff_mat.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_absdiff_mat.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_absdiff_mat.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_absdiff_mat.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_absdiff_mat.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_absdiff_mat.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_absdiff_mat.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_absdiff_mat.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_absdiff_mat.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_absdiff_mat.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_absdiff_mat.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_absdiff_mat.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\absdiff_scalar.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_absdiff_scalar.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_absdiff_scalar.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_absdiff_scalar.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_absdiff_scalar.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_absdiff_scalar.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_absdiff_scalar.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_absdiff_scalar.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_absdiff_scalar.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_absdiff_scalar.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_absdiff_scalar.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_absdiff_scalar.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_absdiff_scalar.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_absdiff_scalar.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_absdiff_scalar.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\add_mat.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_add_mat.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_add_mat.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_add_mat.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_add_mat.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_add_mat.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_add_mat.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_add_mat.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_add_mat.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_add_mat.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_add_mat.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_add_mat.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_add_mat.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_add_mat.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_add_mat.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\add_scalar.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_add_scalar.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_add_scalar.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_add_scalar.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_add_scalar.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_add_scalar.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_add_scalar.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_add_scalar.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_add_scalar.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_add_scalar.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_add_scalar.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_add_scalar.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_add_scalar.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_add_scalar.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_add_scalar.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\add_weighted.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_add_weighted.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_add_weighted.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_add_weighted.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_add_weighted.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_add_weighted.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_add_weighted.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_add_weighted.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_add_weighted.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_add_weighted.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_add_weighted.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_add_weighted.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_add_weighted.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_add_weighted.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_add_weighted.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\bitwise_mat.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_bitwise_mat.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_bitwise_mat.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_bitwise_mat.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_bitwise_mat.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_bitwise_mat.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_bitwise_mat.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_bitwise_mat.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_bitwise_mat.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_bitwise_mat.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_bitwise_mat.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_bitwise_mat.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_bitwise_mat.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_bitwise_mat.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_bitwise_mat.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\bitwise_scalar.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_bitwise_scalar.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_bitwise_scalar.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_bitwise_scalar.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_bitwise_scalar.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_bitwise_scalar.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_bitwise_scalar.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_bitwise_scalar.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_bitwise_scalar.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_bitwise_scalar.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_bitwise_scalar.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_bitwise_scalar.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_bitwise_scalar.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_bitwise_scalar.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_bitwise_scalar.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\cmp_mat.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_cmp_mat.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_cmp_mat.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_cmp_mat.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_cmp_mat.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_cmp_mat.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_cmp_mat.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_cmp_mat.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_cmp_mat.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_cmp_mat.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_cmp_mat.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_cmp_mat.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_cmp_mat.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_cmp_mat.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_cmp_mat.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\cmp_scalar.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_cmp_scalar.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_cmp_scalar.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_cmp_scalar.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_cmp_scalar.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_cmp_scalar.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_cmp_scalar.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_cmp_scalar.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_cmp_scalar.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_cmp_scalar.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_cmp_scalar.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_cmp_scalar.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_cmp_scalar.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_cmp_scalar.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_cmp_scalar.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\copy_make_border.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_copy_make_border.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_copy_make_border.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_copy_make_border.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_copy_make_border.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_copy_make_border.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_copy_make_border.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_copy_make_border.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_copy_make_border.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_copy_make_border.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_copy_make_border.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_copy_make_border.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_copy_make_border.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_copy_make_border.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_copy_make_border.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\countnonzero.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_countnonzero.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_countnonzero.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_countnonzero.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_countnonzero.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_countnonzero.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_countnonzero.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_countnonzero.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_countnonzero.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_countnonzero.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_countnonzero.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_countnonzero.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_countnonzero.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_countnonzero.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_countnonzero.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\div_mat.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_div_mat.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_div_mat.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_div_mat.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_div_mat.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_div_mat.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_div_mat.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_div_mat.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_div_mat.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_div_mat.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_div_mat.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_div_mat.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_div_mat.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_div_mat.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_div_mat.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\div_scalar.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_div_scalar.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_div_scalar.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_div_scalar.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_div_scalar.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_div_scalar.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_div_scalar.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_div_scalar.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_div_scalar.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_div_scalar.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_div_scalar.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_div_scalar.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_div_scalar.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_div_scalar.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_div_scalar.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\in_range.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_in_range.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_in_range.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_in_range.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_in_range.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_in_range.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_in_range.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_in_range.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_in_range.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_in_range.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_in_range.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_in_range.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_in_range.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_in_range.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_in_range.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\integral.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_integral.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_integral.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_integral.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_integral.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_integral.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_integral.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_integral.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_integral.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_integral.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_integral.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_integral.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_integral.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_integral.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_integral.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\lut.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_lut.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_lut.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_lut.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_lut.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_lut.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_lut.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_lut.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_lut.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_lut.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_lut.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_lut.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_lut.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_lut.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_lut.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\math.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_math.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_math.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_math.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_math.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_math.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_math.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_math.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_math.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_math.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_math.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_math.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_math.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_math.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_math.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\minmax.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_minmax.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_minmax.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_minmax.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_minmax.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_minmax.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_minmax.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_minmax.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_minmax.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_minmax.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_minmax.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_minmax.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_minmax.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_minmax.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_minmax.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\minmax_mat.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_minmax_mat.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_minmax_mat.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_minmax_mat.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_minmax_mat.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_minmax_mat.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_minmax_mat.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_minmax_mat.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_minmax_mat.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_minmax_mat.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_minmax_mat.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_minmax_mat.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_minmax_mat.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_minmax_mat.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_minmax_mat.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\minmaxloc.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_minmaxloc.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_minmaxloc.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_minmaxloc.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_minmaxloc.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_minmaxloc.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_minmaxloc.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_minmaxloc.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_minmaxloc.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_minmaxloc.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_minmaxloc.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_minmaxloc.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_minmaxloc.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_minmaxloc.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_minmaxloc.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\mul_mat.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_mul_mat.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_mul_mat.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_mul_mat.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_mul_mat.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_mul_mat.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_mul_mat.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_mul_mat.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_mul_mat.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_mul_mat.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_mul_mat.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_mul_mat.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_mul_mat.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_mul_mat.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_mul_mat.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\mul_scalar.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_mul_scalar.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_mul_scalar.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_mul_scalar.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_mul_scalar.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_mul_scalar.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_mul_scalar.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_mul_scalar.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_mul_scalar.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_mul_scalar.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_mul_scalar.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_mul_scalar.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_mul_scalar.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_mul_scalar.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_mul_scalar.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\mul_spectrums.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_mul_spectrums.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_mul_spectrums.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_mul_spectrums.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_mul_spectrums.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_mul_spectrums.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_mul_spectrums.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_mul_spectrums.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_mul_spectrums.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_mul_spectrums.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_mul_spectrums.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_mul_spectrums.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_mul_spectrums.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_mul_spectrums.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_mul_spectrums.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\norm.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_norm.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_norm.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_norm.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_norm.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_norm.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_norm.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_norm.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_norm.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_norm.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_norm.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_norm.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_norm.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_norm.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_norm.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\normalize.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_normalize.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_normalize.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_normalize.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_normalize.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_normalize.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_normalize.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_normalize.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_normalize.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_normalize.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_normalize.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_normalize.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_normalize.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_normalize.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_normalize.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\polar_cart.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_polar_cart.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_polar_cart.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_polar_cart.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_polar_cart.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_polar_cart.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_polar_cart.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_polar_cart.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_polar_cart.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_polar_cart.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_polar_cart.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_polar_cart.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_polar_cart.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_polar_cart.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_polar_cart.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\reduce.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_reduce.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_reduce.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_reduce.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_reduce.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_reduce.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_reduce.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_reduce.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_reduce.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_reduce.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_reduce.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_reduce.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_reduce.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_reduce.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_reduce.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\split_merge.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_split_merge.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_split_merge.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_split_merge.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_split_merge.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_split_merge.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_split_merge.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_split_merge.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_split_merge.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_split_merge.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_split_merge.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_split_merge.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_split_merge.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_split_merge.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_split_merge.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\sub_mat.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_sub_mat.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_sub_mat.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_sub_mat.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_sub_mat.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_sub_mat.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_sub_mat.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_sub_mat.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_sub_mat.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_sub_mat.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_sub_mat.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_sub_mat.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_sub_mat.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_sub_mat.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_sub_mat.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\sub_scalar.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_sub_scalar.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_sub_scalar.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_sub_scalar.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_sub_scalar.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_sub_scalar.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_sub_scalar.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_sub_scalar.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_sub_scalar.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_sub_scalar.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_sub_scalar.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_sub_scalar.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_sub_scalar.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_sub_scalar.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_sub_scalar.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\sum.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_sum.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_sum.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_sum.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_sum.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_sum.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_sum.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_sum.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_sum.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_sum.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_sum.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_sum.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_sum.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_sum.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_sum.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\threshold.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_threshold.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_threshold.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_threshold.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_threshold.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_threshold.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_threshold.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_threshold.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_threshold.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_threshold.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_threshold.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_threshold.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_threshold.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_threshold.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_threshold.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\cuda\transpose.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_transpose.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_transpose.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_transpose.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_transpose.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_transpose.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_transpose.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_transpose.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_transpose.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_transpose.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/$(Configuration)/cuda_compile_1_generated_transpose.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaarithm/src/cuda/cuda_compile_1_generated_transpose.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_transpose.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\cuda_compile_1_generated_transpose.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_transpose.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\build\CMakeFiles\76cdaa2b53db5cfcfd4e6f14d1ac1437\opencl_kernels_imgproc.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Processing OpenCL kernels (imgproc)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=imgproc -DCL_DIR=I:/src/opencv-master/opencv/modules/imgproc/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_imgproc.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\opencv\modules\imgproc\src\opencl\accumulate.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\bilateral.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\blend_linear.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\boxFilter.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\boxFilter3x3.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\calc_back_project.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\canny.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\clahe.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\color_hsv.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\color_lab.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\color_rgb.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\color_yuv.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\corner.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\covardata.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\filter2D.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\filter2DSmall.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\filterSepCol.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\filterSepRow.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\filterSep_singlePass.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\filterSmall.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\gaussianBlur3x3.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\gaussianBlur5x5.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\gftt.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\histogram.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\hough_lines.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\integral_sum.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\laplacian3.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\laplacian5.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\linearPolar.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\logPolar.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\match_template.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\medianFilter.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\moments.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\morph.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\morph3x3.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\precornerdetect.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\pyr_down.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\pyr_up.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\pyramid_up.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\remap.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\resize.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\sepFilter3x3.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\threshold.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\warp_affine.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\warp_perspective.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\warp_transform.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_imgproc.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Processing OpenCL kernels (imgproc)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=imgproc -DCL_DIR=I:/src/opencv-master/opencv/modules/imgproc/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_imgproc.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\opencv\modules\imgproc\src\opencl\accumulate.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\bilateral.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\blend_linear.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\boxFilter.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\boxFilter3x3.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\calc_back_project.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\canny.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\clahe.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\color_hsv.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\color_lab.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\color_rgb.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\color_yuv.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\corner.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\covardata.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\filter2D.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\filter2DSmall.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\filterSepCol.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\filterSepRow.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\filterSep_singlePass.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\filterSmall.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\gaussianBlur3x3.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\gaussianBlur5x5.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\gftt.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\histogram.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\hough_lines.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\integral_sum.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\laplacian3.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\laplacian5.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\linearPolar.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\logPolar.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\match_template.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\medianFilter.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\moments.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\morph.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\morph3x3.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\precornerdetect.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\pyr_down.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\pyr_up.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\pyramid_up.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\remap.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\resize.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\sepFilter3x3.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\threshold.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\warp_affine.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\warp_perspective.cl;I:\src\opencv-master\opencv\modules\imgproc\src\opencl\warp_transform.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_imgproc.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\column_filter.16sc1.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16sc1.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16sc1.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16sc1.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.16sc1.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16sc1.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16sc1.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.16sc1.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16sc1.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16sc1.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16sc1.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.16sc1.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16sc1.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16sc1.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.16sc1.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\column_filter.16sc3.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16sc3.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16sc3.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16sc3.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.16sc3.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16sc3.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16sc3.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.16sc3.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16sc3.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16sc3.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16sc3.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.16sc3.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16sc3.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16sc3.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.16sc3.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\column_filter.16sc4.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16sc4.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16sc4.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16sc4.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.16sc4.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16sc4.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16sc4.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.16sc4.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16sc4.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16sc4.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16sc4.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.16sc4.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16sc4.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16sc4.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.16sc4.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\column_filter.16uc1.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16uc1.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16uc1.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16uc1.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.16uc1.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16uc1.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16uc1.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.16uc1.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16uc1.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16uc1.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16uc1.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.16uc1.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16uc1.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16uc1.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.16uc1.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\column_filter.16uc3.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16uc3.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16uc3.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16uc3.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.16uc3.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16uc3.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16uc3.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.16uc3.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16uc3.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16uc3.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16uc3.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.16uc3.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16uc3.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16uc3.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.16uc3.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\column_filter.16uc4.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16uc4.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16uc4.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16uc4.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.16uc4.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16uc4.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16uc4.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.16uc4.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16uc4.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16uc4.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.16uc4.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.16uc4.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16uc4.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.16uc4.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.16uc4.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\column_filter.32fc1.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32fc1.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32fc1.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32fc1.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.32fc1.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32fc1.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32fc1.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.32fc1.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32fc1.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32fc1.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32fc1.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.32fc1.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32fc1.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32fc1.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.32fc1.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\column_filter.32fc3.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32fc3.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32fc3.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32fc3.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.32fc3.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32fc3.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32fc3.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.32fc3.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32fc3.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32fc3.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32fc3.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.32fc3.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32fc3.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32fc3.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.32fc3.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\column_filter.32fc4.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32fc4.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32fc4.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32fc4.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.32fc4.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32fc4.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32fc4.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.32fc4.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32fc4.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32fc4.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32fc4.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.32fc4.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32fc4.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32fc4.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.32fc4.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\column_filter.32sc1.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32sc1.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32sc1.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32sc1.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.32sc1.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32sc1.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32sc1.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.32sc1.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32sc1.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32sc1.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32sc1.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.32sc1.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32sc1.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32sc1.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.32sc1.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\column_filter.32sc3.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32sc3.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32sc3.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32sc3.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.32sc3.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32sc3.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32sc3.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.32sc3.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32sc3.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32sc3.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32sc3.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.32sc3.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32sc3.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32sc3.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.32sc3.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\column_filter.32sc4.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32sc4.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32sc4.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32sc4.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.32sc4.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32sc4.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32sc4.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.32sc4.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32sc4.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32sc4.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.32sc4.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.32sc4.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32sc4.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.32sc4.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.32sc4.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\column_filter.8uc1.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.8uc1.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.8uc1.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.8uc1.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.8uc1.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.8uc1.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.8uc1.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.8uc1.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.8uc1.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.8uc1.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.8uc1.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.8uc1.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.8uc1.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.8uc1.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.8uc1.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\column_filter.8uc3.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.8uc3.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.8uc3.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.8uc3.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.8uc3.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.8uc3.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.8uc3.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.8uc3.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.8uc3.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.8uc3.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.8uc3.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.8uc3.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.8uc3.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.8uc3.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.8uc3.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\column_filter.8uc4.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.8uc4.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.8uc4.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.8uc4.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.8uc4.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.8uc4.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.8uc4.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.8uc4.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.8uc4.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.8uc4.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_column_filter.8uc4.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_column_filter.8uc4.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.8uc4.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_column_filter.8uc4.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.8uc4.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\filter2d.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_filter2d.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_filter2d.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_filter2d.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_filter2d.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_filter2d.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_filter2d.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_filter2d.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_filter2d.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_filter2d.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_filter2d.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_filter2d.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_filter2d.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_filter2d.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_filter2d.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\median_filter.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_median_filter.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_median_filter.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_median_filter.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_median_filter.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_median_filter.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_median_filter.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_median_filter.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_median_filter.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_median_filter.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_median_filter.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_median_filter.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_median_filter.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_median_filter.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_median_filter.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\row_filter.16sc1.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16sc1.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16sc1.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16sc1.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.16sc1.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16sc1.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16sc1.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.16sc1.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16sc1.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16sc1.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16sc1.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.16sc1.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16sc1.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16sc1.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.16sc1.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\row_filter.16sc3.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16sc3.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16sc3.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16sc3.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.16sc3.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16sc3.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16sc3.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.16sc3.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16sc3.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16sc3.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16sc3.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.16sc3.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16sc3.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16sc3.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.16sc3.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\row_filter.16sc4.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16sc4.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16sc4.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16sc4.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.16sc4.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16sc4.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16sc4.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.16sc4.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16sc4.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16sc4.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16sc4.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.16sc4.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16sc4.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16sc4.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.16sc4.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\row_filter.16uc1.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16uc1.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16uc1.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16uc1.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.16uc1.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16uc1.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16uc1.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.16uc1.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16uc1.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16uc1.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16uc1.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.16uc1.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16uc1.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16uc1.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.16uc1.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\row_filter.16uc3.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16uc3.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16uc3.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16uc3.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.16uc3.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16uc3.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16uc3.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.16uc3.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16uc3.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16uc3.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16uc3.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.16uc3.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16uc3.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16uc3.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.16uc3.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\row_filter.16uc4.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16uc4.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16uc4.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16uc4.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.16uc4.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16uc4.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16uc4.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.16uc4.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16uc4.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16uc4.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.16uc4.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.16uc4.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16uc4.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.16uc4.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.16uc4.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\row_filter.32fc1.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32fc1.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32fc1.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32fc1.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.32fc1.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32fc1.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32fc1.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.32fc1.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32fc1.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32fc1.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32fc1.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.32fc1.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32fc1.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32fc1.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.32fc1.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\row_filter.32fc3.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32fc3.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32fc3.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32fc3.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.32fc3.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32fc3.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32fc3.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.32fc3.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32fc3.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32fc3.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32fc3.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.32fc3.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32fc3.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32fc3.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.32fc3.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\row_filter.32fc4.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32fc4.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32fc4.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32fc4.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.32fc4.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32fc4.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32fc4.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.32fc4.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32fc4.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32fc4.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32fc4.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.32fc4.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32fc4.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32fc4.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.32fc4.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\row_filter.32sc1.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32sc1.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32sc1.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32sc1.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.32sc1.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32sc1.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32sc1.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.32sc1.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32sc1.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32sc1.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32sc1.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.32sc1.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32sc1.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32sc1.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.32sc1.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\row_filter.32sc3.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32sc3.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32sc3.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32sc3.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.32sc3.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32sc3.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32sc3.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.32sc3.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32sc3.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32sc3.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32sc3.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.32sc3.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32sc3.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32sc3.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.32sc3.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\row_filter.32sc4.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32sc4.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32sc4.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32sc4.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.32sc4.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32sc4.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32sc4.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.32sc4.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32sc4.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32sc4.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.32sc4.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.32sc4.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32sc4.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.32sc4.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.32sc4.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\row_filter.8uc1.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.8uc1.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.8uc1.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.8uc1.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.8uc1.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.8uc1.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.8uc1.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.8uc1.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.8uc1.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.8uc1.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.8uc1.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.8uc1.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.8uc1.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.8uc1.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.8uc1.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\row_filter.8uc3.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.8uc3.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.8uc3.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.8uc3.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.8uc3.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.8uc3.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.8uc3.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.8uc3.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.8uc3.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.8uc3.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.8uc3.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.8uc3.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.8uc3.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.8uc3.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.8uc3.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\row_filter.8uc4.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.8uc4.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.8uc4.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.8uc4.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.8uc4.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.8uc4.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.8uc4.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.8uc4.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.8uc4.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.8uc4.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/$(Configuration)/cuda_compile_1_generated_row_filter.8uc4.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafilters/src/cuda/cuda_compile_1_generated_row_filter.8uc4.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.8uc4.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\cuda_compile_1_generated_row_filter.8uc4.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.8uc4.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\cuda\bilateral_filter.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_bilateral_filter.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_bilateral_filter.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_bilateral_filter.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_bilateral_filter.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_bilateral_filter.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_bilateral_filter.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_bilateral_filter.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_bilateral_filter.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_bilateral_filter.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_bilateral_filter.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_bilateral_filter.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_bilateral_filter.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_bilateral_filter.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_bilateral_filter.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\cuda\blend.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_blend.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_blend.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_blend.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_blend.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_blend.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_blend.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_blend.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_blend.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_blend.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_blend.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_blend.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_blend.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_blend.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_blend.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\cuda\build_point_list.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_build_point_list.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_build_point_list.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_build_point_list.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_build_point_list.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_build_point_list.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_build_point_list.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_build_point_list.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_build_point_list.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_build_point_list.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_build_point_list.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_build_point_list.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_build_point_list.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_build_point_list.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_build_point_list.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\cuda\canny.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_canny.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_canny.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_canny.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_canny.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_canny.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_canny.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_canny.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_canny.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_canny.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_canny.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_canny.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_canny.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_canny.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_canny.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\cuda\clahe.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_clahe.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_clahe.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_clahe.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_clahe.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_clahe.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_clahe.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_clahe.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_clahe.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_clahe.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_clahe.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_clahe.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_clahe.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_clahe.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_clahe.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\cuda\color.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_color.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_color.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_color.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_color.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_color.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_color.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_color.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_color.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_color.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_color.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_color.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_color.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_color.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_color.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\cuda\corners.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_corners.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_corners.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_corners.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_corners.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_corners.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_corners.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_corners.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_corners.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_corners.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_corners.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_corners.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_corners.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_corners.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_corners.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\cuda\debayer.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_debayer.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_debayer.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_debayer.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_debayer.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_debayer.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_debayer.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_debayer.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_debayer.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_debayer.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_debayer.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_debayer.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_debayer.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_debayer.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_debayer.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\cuda\generalized_hough.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_generalized_hough.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_generalized_hough.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_generalized_hough.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_generalized_hough.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_generalized_hough.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_generalized_hough.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_generalized_hough.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_generalized_hough.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_generalized_hough.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_generalized_hough.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_generalized_hough.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_generalized_hough.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_generalized_hough.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_generalized_hough.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\cuda\gftt.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_gftt.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_gftt.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_gftt.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_gftt.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_gftt.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_gftt.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_gftt.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_gftt.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_gftt.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_gftt.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_gftt.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_gftt.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_gftt.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_gftt.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\cuda\hist.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hist.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hist.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hist.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_hist.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_hist.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_hist.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_hist.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hist.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hist.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hist.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_hist.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_hist.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_hist.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_hist.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\cuda\hough_circles.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hough_circles.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hough_circles.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hough_circles.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_hough_circles.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_hough_circles.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_hough_circles.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_hough_circles.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hough_circles.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hough_circles.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hough_circles.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_hough_circles.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_hough_circles.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_hough_circles.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_hough_circles.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\cuda\hough_lines.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hough_lines.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hough_lines.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hough_lines.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_hough_lines.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_hough_lines.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_hough_lines.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_hough_lines.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hough_lines.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hough_lines.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hough_lines.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_hough_lines.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_hough_lines.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_hough_lines.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_hough_lines.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\cuda\hough_segments.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hough_segments.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hough_segments.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hough_segments.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_hough_segments.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_hough_segments.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_hough_segments.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_hough_segments.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hough_segments.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hough_segments.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_hough_segments.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_hough_segments.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_hough_segments.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_hough_segments.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_hough_segments.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\cuda\match_template.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_match_template.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_match_template.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_match_template.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_match_template.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_match_template.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_match_template.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_match_template.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_match_template.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_match_template.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_match_template.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_match_template.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_match_template.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_match_template.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_match_template.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\cuda\mean_shift.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_mean_shift.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_mean_shift.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_mean_shift.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_mean_shift.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_mean_shift.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_mean_shift.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_mean_shift.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_mean_shift.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_mean_shift.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/$(Configuration)/cuda_compile_1_generated_mean_shift.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaimgproc/src/cuda/cuda_compile_1_generated_mean_shift.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_mean_shift.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\cuda_compile_1_generated_mean_shift.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_mean_shift.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudawarping\src\cuda\pyr_down.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_pyr_down.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_pyr_down.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_pyr_down.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/cuda_compile_1_generated_pyr_down.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\cuda_compile_1_generated_pyr_down.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\cuda_compile_1_generated_pyr_down.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\$(Configuration)\cuda_compile_1_generated_pyr_down.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_pyr_down.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_pyr_down.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_pyr_down.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/cuda_compile_1_generated_pyr_down.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\cuda_compile_1_generated_pyr_down.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\cuda_compile_1_generated_pyr_down.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\$(Configuration)\cuda_compile_1_generated_pyr_down.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudawarping\src\cuda\pyr_up.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_pyr_up.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_pyr_up.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_pyr_up.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/cuda_compile_1_generated_pyr_up.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\cuda_compile_1_generated_pyr_up.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\cuda_compile_1_generated_pyr_up.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\$(Configuration)\cuda_compile_1_generated_pyr_up.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_pyr_up.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_pyr_up.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_pyr_up.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/cuda_compile_1_generated_pyr_up.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\cuda_compile_1_generated_pyr_up.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\cuda_compile_1_generated_pyr_up.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\$(Configuration)\cuda_compile_1_generated_pyr_up.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudawarping\src\cuda\remap.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_remap.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_remap.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_remap.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/cuda_compile_1_generated_remap.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\cuda_compile_1_generated_remap.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\cuda_compile_1_generated_remap.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\$(Configuration)\cuda_compile_1_generated_remap.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_remap.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_remap.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_remap.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/cuda_compile_1_generated_remap.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\cuda_compile_1_generated_remap.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\cuda_compile_1_generated_remap.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\$(Configuration)\cuda_compile_1_generated_remap.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudawarping\src\cuda\resize.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_resize.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_resize.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_resize.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/cuda_compile_1_generated_resize.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\cuda_compile_1_generated_resize.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\cuda_compile_1_generated_resize.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\$(Configuration)\cuda_compile_1_generated_resize.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_resize.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_resize.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_resize.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/cuda_compile_1_generated_resize.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\cuda_compile_1_generated_resize.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\cuda_compile_1_generated_resize.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\$(Configuration)\cuda_compile_1_generated_resize.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudawarping\src\cuda\warp.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_warp.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_warp.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_warp.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/cuda_compile_1_generated_warp.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\cuda_compile_1_generated_warp.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\cuda_compile_1_generated_warp.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\$(Configuration)\cuda_compile_1_generated_warp.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_warp.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_warp.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/$(Configuration)/cuda_compile_1_generated_warp.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudawarping/src/cuda/cuda_compile_1_generated_warp.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\cuda_compile_1_generated_warp.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\cuda_compile_1_generated_warp.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\$(Configuration)\cuda_compile_1_generated_warp.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\activation_eltwise.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_activation_eltwise.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_activation_eltwise.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_activation_eltwise.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_activation_eltwise.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_activation_eltwise.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_activation_eltwise.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_activation_eltwise.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_activation_eltwise.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_activation_eltwise.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_activation_eltwise.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_activation_eltwise.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_activation_eltwise.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_activation_eltwise.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_activation_eltwise.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\activations.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_activations.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_activations.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_activations.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_activations.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_activations.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_activations.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_activations.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_activations.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_activations.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_activations.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_activations.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_activations.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_activations.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_activations.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\bias_activation.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_bias_activation.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_bias_activation.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_bias_activation.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_bias_activation.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_bias_activation.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_bias_activation.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_bias_activation.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_bias_activation.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_bias_activation.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_bias_activation.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_bias_activation.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_bias_activation.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_bias_activation.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_bias_activation.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\bias_activation_eltwise.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_bias_activation_eltwise.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_bias_activation_eltwise.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_bias_activation_eltwise.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_bias_activation_eltwise.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_bias_activation_eltwise.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_bias_activation_eltwise.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_bias_activation_eltwise.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_bias_activation_eltwise.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_bias_activation_eltwise.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_bias_activation_eltwise.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_bias_activation_eltwise.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_bias_activation_eltwise.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_bias_activation_eltwise.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_bias_activation_eltwise.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\bias_eltwise_activation.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_bias_eltwise_activation.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_bias_eltwise_activation.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_bias_eltwise_activation.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_bias_eltwise_activation.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_bias_eltwise_activation.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_bias_eltwise_activation.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_bias_eltwise_activation.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_bias_eltwise_activation.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_bias_eltwise_activation.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_bias_eltwise_activation.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_bias_eltwise_activation.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_bias_eltwise_activation.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_bias_eltwise_activation.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_bias_eltwise_activation.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\concat.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_concat.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_concat.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_concat.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_concat.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_concat.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_concat.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_concat.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_concat.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_concat.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_concat.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_concat.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_concat.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_concat.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_concat.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\crop_and_resize.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_crop_and_resize.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_crop_and_resize.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_crop_and_resize.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_crop_and_resize.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_crop_and_resize.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_crop_and_resize.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_crop_and_resize.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_crop_and_resize.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_crop_and_resize.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_crop_and_resize.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_crop_and_resize.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_crop_and_resize.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_crop_and_resize.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_crop_and_resize.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\detection_output.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_detection_output.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_detection_output.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_detection_output.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_detection_output.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_detection_output.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_detection_output.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_detection_output.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_detection_output.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_detection_output.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_detection_output.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_detection_output.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_detection_output.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_detection_output.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_detection_output.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\eltwise_activation.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_eltwise_activation.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_eltwise_activation.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_eltwise_activation.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_eltwise_activation.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_eltwise_activation.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_eltwise_activation.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_eltwise_activation.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_eltwise_activation.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_eltwise_activation.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_eltwise_activation.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_eltwise_activation.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_eltwise_activation.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_eltwise_activation.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_eltwise_activation.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\eltwise_ops.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_eltwise_ops.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_eltwise_ops.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_eltwise_ops.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_eltwise_ops.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_eltwise_ops.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_eltwise_ops.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_eltwise_ops.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_eltwise_ops.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_eltwise_ops.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_eltwise_ops.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_eltwise_ops.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_eltwise_ops.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_eltwise_ops.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_eltwise_ops.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\fill_copy.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_fill_copy.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_fill_copy.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_fill_copy.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_fill_copy.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_fill_copy.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_fill_copy.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_fill_copy.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_fill_copy.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_fill_copy.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_fill_copy.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_fill_copy.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_fill_copy.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_fill_copy.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_fill_copy.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\fp_conversion.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_fp_conversion.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_fp_conversion.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_fp_conversion.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_fp_conversion.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_fp_conversion.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_fp_conversion.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_fp_conversion.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_fp_conversion.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_fp_conversion.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_fp_conversion.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_fp_conversion.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_fp_conversion.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_fp_conversion.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_fp_conversion.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\grid_nms.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_grid_nms.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_grid_nms.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_grid_nms.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_grid_nms.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_grid_nms.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_grid_nms.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_grid_nms.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_grid_nms.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_grid_nms.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_grid_nms.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_grid_nms.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_grid_nms.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_grid_nms.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_grid_nms.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\max_unpooling.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_max_unpooling.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_max_unpooling.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_max_unpooling.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_max_unpooling.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_max_unpooling.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_max_unpooling.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_max_unpooling.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_max_unpooling.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_max_unpooling.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_max_unpooling.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_max_unpooling.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_max_unpooling.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_max_unpooling.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_max_unpooling.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\mvn.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_mvn.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_mvn.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_mvn.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_mvn.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_mvn.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_mvn.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_mvn.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_mvn.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_mvn.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_mvn.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_mvn.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_mvn.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_mvn.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_mvn.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\normalize.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_normalize.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_normalize.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_normalize.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_normalize.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_normalize.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_normalize.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_normalize.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_normalize.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_normalize.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_normalize.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_normalize.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_normalize.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_normalize.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_normalize.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\padding.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_padding.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_padding.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_padding.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_padding.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_padding.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_padding.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_padding.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_padding.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_padding.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_padding.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_padding.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_padding.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_padding.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_padding.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\permute.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_permute.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_permute.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_permute.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_permute.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_permute.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_permute.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_permute.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_permute.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_permute.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_permute.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_permute.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_permute.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_permute.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_permute.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\prior_box.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_prior_box.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_prior_box.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_prior_box.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_prior_box.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_prior_box.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_prior_box.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_prior_box.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_prior_box.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_prior_box.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_prior_box.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_prior_box.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_prior_box.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_prior_box.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_prior_box.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\region.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_region.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_region.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_region.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_region.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_region.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_region.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_region.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_region.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_region.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_region.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_region.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_region.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_region.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_region.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\resize.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_resize.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_resize.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_resize.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_resize.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_resize.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_resize.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_resize.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_resize.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_resize.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_resize.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_resize.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_resize.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_resize.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_resize.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\roi_pooling.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_roi_pooling.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_roi_pooling.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_roi_pooling.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_roi_pooling.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_roi_pooling.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_roi_pooling.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_roi_pooling.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_roi_pooling.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_roi_pooling.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_roi_pooling.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_roi_pooling.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_roi_pooling.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_roi_pooling.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_roi_pooling.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\scale_shift.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_scale_shift.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_scale_shift.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_scale_shift.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_scale_shift.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_scale_shift.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_scale_shift.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_scale_shift.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_scale_shift.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_scale_shift.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_scale_shift.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_scale_shift.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_scale_shift.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_scale_shift.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_scale_shift.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\shortcut.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_shortcut.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_shortcut.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_shortcut.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_shortcut.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_shortcut.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_shortcut.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_shortcut.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_shortcut.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_shortcut.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_shortcut.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_shortcut.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_shortcut.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_shortcut.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_shortcut.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\slice.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_slice.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_slice.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_slice.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_slice.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_slice.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_slice.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_slice.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_slice.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_slice.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/$(Configuration)/cuda_compile_1_generated_slice.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/dnn/src/cuda/cuda_compile_1_generated_slice.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_slice.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\cuda_compile_1_generated_slice.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_slice.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\build\CMakeFiles\76cdaa2b53db5cfcfd4e6f14d1ac1437\opencl_kernels_features2d.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Processing OpenCL kernels (features2d)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=features2d -DCL_DIR=I:/src/opencv-master/opencv/modules/features2d/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_features2d.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\opencv\modules\features2d\src\opencl\akaze.cl;I:\src\opencv-master\opencv\modules\features2d\src\opencl\brute_force_match.cl;I:\src\opencv-master\opencv\modules\features2d\src\opencl\fast.cl;I:\src\opencv-master\opencv\modules\features2d\src\opencl\orb.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_features2d.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Processing OpenCL kernels (features2d)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=features2d -DCL_DIR=I:/src/opencv-master/opencv/modules/features2d/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_features2d.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\opencv\modules\features2d\src\opencl\akaze.cl;I:\src\opencv-master\opencv\modules\features2d\src\opencl\brute_force_match.cl;I:\src\opencv-master\opencv\modules\features2d\src\opencl\fast.cl;I:\src\opencv-master\opencv\modules\features2d\src\opencl\orb.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_features2d.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\hfs\src\cuda\gslic_seg_engine_gpu.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/hfs/src/cuda/$(Configuration)/cuda_compile_1_generated_gslic_seg_engine_gpu.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\hfs\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/hfs/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/hfs/src/cuda/$(Configuration)/cuda_compile_1_generated_gslic_seg_engine_gpu.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/hfs/src/cuda/$(Configuration)/cuda_compile_1_generated_gslic_seg_engine_gpu.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/hfs/src/cuda/cuda_compile_1_generated_gslic_seg_engine_gpu.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\hfs\src\cuda\cuda_compile_1_generated_gslic_seg_engine_gpu.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\hfs\src\cuda\cuda_compile_1_generated_gslic_seg_engine_gpu.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\hfs\src\cuda\$(Configuration)\cuda_compile_1_generated_gslic_seg_engine_gpu.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/hfs/src/cuda/$(Configuration)/cuda_compile_1_generated_gslic_seg_engine_gpu.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\hfs\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/hfs/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/hfs/src/cuda/$(Configuration)/cuda_compile_1_generated_gslic_seg_engine_gpu.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/hfs/src/cuda/$(Configuration)/cuda_compile_1_generated_gslic_seg_engine_gpu.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/hfs/src/cuda/cuda_compile_1_generated_gslic_seg_engine_gpu.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\hfs\src\cuda\cuda_compile_1_generated_gslic_seg_engine_gpu.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\hfs\src\cuda\cuda_compile_1_generated_gslic_seg_engine_gpu.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\hfs\src\cuda\$(Configuration)\cuda_compile_1_generated_gslic_seg_engine_gpu.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\hfs\src\cuda\magnitude.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/hfs/src/cuda/$(Configuration)/cuda_compile_1_generated_magnitude.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\hfs\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/hfs/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/hfs/src/cuda/$(Configuration)/cuda_compile_1_generated_magnitude.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/hfs/src/cuda/$(Configuration)/cuda_compile_1_generated_magnitude.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/hfs/src/cuda/cuda_compile_1_generated_magnitude.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\hfs\src\cuda\cuda_compile_1_generated_magnitude.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\hfs\src\cuda\cuda_compile_1_generated_magnitude.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\hfs\src\cuda\$(Configuration)\cuda_compile_1_generated_magnitude.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/hfs/src/cuda/$(Configuration)/cuda_compile_1_generated_magnitude.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\hfs\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/hfs/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/hfs/src/cuda/$(Configuration)/cuda_compile_1_generated_magnitude.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/hfs/src/cuda/$(Configuration)/cuda_compile_1_generated_magnitude.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/hfs/src/cuda/cuda_compile_1_generated_magnitude.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\hfs\src\cuda\cuda_compile_1_generated_magnitude.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\hfs\src\cuda\cuda_compile_1_generated_magnitude.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\hfs\src\cuda\$(Configuration)\cuda_compile_1_generated_magnitude.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\build\CMakeFiles\76cdaa2b53db5cfcfd4e6f14d1ac1437\opencl_kernels_photo.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Processing OpenCL kernels (photo)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=photo -DCL_DIR=I:/src/opencv-master/opencv/modules/photo/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_photo.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\opencv\modules\photo\src\opencl\nlmeans.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_photo.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Processing OpenCL kernels (photo)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=photo -DCL_DIR=I:/src/opencv-master/opencv/modules/photo/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_photo.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\opencv\modules\photo\src\opencl\nlmeans.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_photo.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\photo\src\cuda\nlm.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/photo/src/cuda/$(Configuration)/cuda_compile_1_generated_nlm.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\photo\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/photo/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/photo/src/cuda/$(Configuration)/cuda_compile_1_generated_nlm.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/photo/src/cuda/$(Configuration)/cuda_compile_1_generated_nlm.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/photo/src/cuda/cuda_compile_1_generated_nlm.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\photo\src\cuda\cuda_compile_1_generated_nlm.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\photo\src\cuda\cuda_compile_1_generated_nlm.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\photo\src\cuda\$(Configuration)\cuda_compile_1_generated_nlm.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/photo/src/cuda/$(Configuration)/cuda_compile_1_generated_nlm.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\photo\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/photo/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/photo/src/cuda/$(Configuration)/cuda_compile_1_generated_nlm.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/photo/src/cuda/$(Configuration)/cuda_compile_1_generated_nlm.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/photo/src/cuda/cuda_compile_1_generated_nlm.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\photo\src\cuda\cuda_compile_1_generated_nlm.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\photo\src\cuda\cuda_compile_1_generated_nlm.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\photo\src\cuda\$(Configuration)\cuda_compile_1_generated_nlm.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\build\CMakeFiles\76cdaa2b53db5cfcfd4e6f14d1ac1437\opencl_kernels_calib3d.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Processing OpenCL kernels (calib3d)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=calib3d -DCL_DIR=I:/src/opencv-master/opencv/modules/calib3d/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_calib3d.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\opencv\modules\calib3d\src\opencl\stereobm.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_calib3d.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Processing OpenCL kernels (calib3d)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=calib3d -DCL_DIR=I:/src/opencv-master/opencv/modules/calib3d/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_calib3d.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\opencv\modules\calib3d\src\opencl\stereobm.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_calib3d.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudacodec\src\cuda\nv12_to_rgb.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudacodec/src/cuda/$(Configuration)/cuda_compile_1_generated_nv12_to_rgb.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudacodec\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudacodec/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudacodec/src/cuda/$(Configuration)/cuda_compile_1_generated_nv12_to_rgb.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudacodec/src/cuda/$(Configuration)/cuda_compile_1_generated_nv12_to_rgb.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudacodec/src/cuda/cuda_compile_1_generated_nv12_to_rgb.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudacodec\src\cuda\cuda_compile_1_generated_nv12_to_rgb.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudacodec\src\cuda\cuda_compile_1_generated_nv12_to_rgb.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudacodec\src\cuda\$(Configuration)\cuda_compile_1_generated_nv12_to_rgb.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudacodec/src/cuda/$(Configuration)/cuda_compile_1_generated_nv12_to_rgb.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudacodec\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudacodec/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudacodec/src/cuda/$(Configuration)/cuda_compile_1_generated_nv12_to_rgb.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudacodec/src/cuda/$(Configuration)/cuda_compile_1_generated_nv12_to_rgb.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudacodec/src/cuda/cuda_compile_1_generated_nv12_to_rgb.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudacodec\src\cuda\cuda_compile_1_generated_nv12_to_rgb.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudacodec\src\cuda\cuda_compile_1_generated_nv12_to_rgb.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudacodec\src\cuda\$(Configuration)\cuda_compile_1_generated_nv12_to_rgb.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudacodec\src\cuda\rgb_to_yv12.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudacodec/src/cuda/$(Configuration)/cuda_compile_1_generated_rgb_to_yv12.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudacodec\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudacodec/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudacodec/src/cuda/$(Configuration)/cuda_compile_1_generated_rgb_to_yv12.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudacodec/src/cuda/$(Configuration)/cuda_compile_1_generated_rgb_to_yv12.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudacodec/src/cuda/cuda_compile_1_generated_rgb_to_yv12.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudacodec\src\cuda\cuda_compile_1_generated_rgb_to_yv12.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudacodec\src\cuda\cuda_compile_1_generated_rgb_to_yv12.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudacodec\src\cuda\$(Configuration)\cuda_compile_1_generated_rgb_to_yv12.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudacodec/src/cuda/$(Configuration)/cuda_compile_1_generated_rgb_to_yv12.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudacodec\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudacodec/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudacodec/src/cuda/$(Configuration)/cuda_compile_1_generated_rgb_to_yv12.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudacodec/src/cuda/$(Configuration)/cuda_compile_1_generated_rgb_to_yv12.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudacodec/src/cuda/cuda_compile_1_generated_rgb_to_yv12.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudacodec\src\cuda\cuda_compile_1_generated_rgb_to_yv12.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudacodec\src\cuda\cuda_compile_1_generated_rgb_to_yv12.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudacodec\src\cuda\$(Configuration)\cuda_compile_1_generated_rgb_to_yv12.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafeatures2d\src\cuda\bf_knnmatch.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_bf_knnmatch.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_bf_knnmatch.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_bf_knnmatch.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/cuda_compile_1_generated_bf_knnmatch.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\cuda_compile_1_generated_bf_knnmatch.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\cuda_compile_1_generated_bf_knnmatch.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\$(Configuration)\cuda_compile_1_generated_bf_knnmatch.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_bf_knnmatch.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_bf_knnmatch.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_bf_knnmatch.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/cuda_compile_1_generated_bf_knnmatch.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\cuda_compile_1_generated_bf_knnmatch.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\cuda_compile_1_generated_bf_knnmatch.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\$(Configuration)\cuda_compile_1_generated_bf_knnmatch.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafeatures2d\src\cuda\bf_match.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_bf_match.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_bf_match.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_bf_match.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/cuda_compile_1_generated_bf_match.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\cuda_compile_1_generated_bf_match.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\cuda_compile_1_generated_bf_match.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\$(Configuration)\cuda_compile_1_generated_bf_match.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_bf_match.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_bf_match.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_bf_match.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/cuda_compile_1_generated_bf_match.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\cuda_compile_1_generated_bf_match.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\cuda_compile_1_generated_bf_match.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\$(Configuration)\cuda_compile_1_generated_bf_match.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafeatures2d\src\cuda\bf_radius_match.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_bf_radius_match.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_bf_radius_match.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_bf_radius_match.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/cuda_compile_1_generated_bf_radius_match.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\cuda_compile_1_generated_bf_radius_match.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\cuda_compile_1_generated_bf_radius_match.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\$(Configuration)\cuda_compile_1_generated_bf_radius_match.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_bf_radius_match.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_bf_radius_match.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_bf_radius_match.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/cuda_compile_1_generated_bf_radius_match.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\cuda_compile_1_generated_bf_radius_match.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\cuda_compile_1_generated_bf_radius_match.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\$(Configuration)\cuda_compile_1_generated_bf_radius_match.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafeatures2d\src\cuda\fast.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_fast.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_fast.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_fast.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/cuda_compile_1_generated_fast.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\cuda_compile_1_generated_fast.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\cuda_compile_1_generated_fast.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\$(Configuration)\cuda_compile_1_generated_fast.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_fast.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_fast.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_fast.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/cuda_compile_1_generated_fast.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\cuda_compile_1_generated_fast.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\cuda_compile_1_generated_fast.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\$(Configuration)\cuda_compile_1_generated_fast.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudafeatures2d\src\cuda\orb.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_orb.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_orb.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_orb.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/cuda_compile_1_generated_orb.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\cuda_compile_1_generated_orb.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\cuda_compile_1_generated_orb.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\$(Configuration)\cuda_compile_1_generated_orb.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_orb.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_orb.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_orb.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudafeatures2d/src/cuda/cuda_compile_1_generated_orb.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\cuda_compile_1_generated_orb.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\cuda_compile_1_generated_orb.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\$(Configuration)\cuda_compile_1_generated_orb.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudastereo\src\cuda\disparity_bilateral_filter.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_disparity_bilateral_filter.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_disparity_bilateral_filter.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_disparity_bilateral_filter.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/cuda_compile_1_generated_disparity_bilateral_filter.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_disparity_bilateral_filter.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_disparity_bilateral_filter.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\$(Configuration)\cuda_compile_1_generated_disparity_bilateral_filter.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_disparity_bilateral_filter.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_disparity_bilateral_filter.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_disparity_bilateral_filter.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/cuda_compile_1_generated_disparity_bilateral_filter.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_disparity_bilateral_filter.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_disparity_bilateral_filter.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\$(Configuration)\cuda_compile_1_generated_disparity_bilateral_filter.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudastereo\src\cuda\stereobm.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereobm.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereobm.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereobm.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/cuda_compile_1_generated_stereobm.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_stereobm.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_stereobm.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\$(Configuration)\cuda_compile_1_generated_stereobm.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereobm.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereobm.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereobm.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/cuda_compile_1_generated_stereobm.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_stereobm.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_stereobm.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\$(Configuration)\cuda_compile_1_generated_stereobm.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudastereo\src\cuda\stereobp.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereobp.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereobp.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereobp.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/cuda_compile_1_generated_stereobp.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_stereobp.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_stereobp.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\$(Configuration)\cuda_compile_1_generated_stereobp.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereobp.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereobp.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereobp.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/cuda_compile_1_generated_stereobp.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_stereobp.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_stereobp.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\$(Configuration)\cuda_compile_1_generated_stereobp.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudastereo\src\cuda\stereocsbp.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereocsbp.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereocsbp.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereocsbp.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/cuda_compile_1_generated_stereocsbp.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_stereocsbp.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_stereocsbp.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\$(Configuration)\cuda_compile_1_generated_stereocsbp.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereocsbp.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereocsbp.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereocsbp.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/cuda_compile_1_generated_stereocsbp.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_stereocsbp.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_stereocsbp.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\$(Configuration)\cuda_compile_1_generated_stereocsbp.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudastereo\src\cuda\stereosgm.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereosgm.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereosgm.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereosgm.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/cuda_compile_1_generated_stereosgm.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_stereosgm.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_stereosgm.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\$(Configuration)\cuda_compile_1_generated_stereosgm.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereosgm.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereosgm.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_stereosgm.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/cuda_compile_1_generated_stereosgm.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_stereosgm.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_stereosgm.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\$(Configuration)\cuda_compile_1_generated_stereosgm.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudastereo\src\cuda\util.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_util.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_util.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_util.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/cuda_compile_1_generated_util.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_util.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_util.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\$(Configuration)\cuda_compile_1_generated_util.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_util.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_util.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/$(Configuration)/cuda_compile_1_generated_util.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudastereo/src/cuda/cuda_compile_1_generated_util.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_util.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\cuda_compile_1_generated_util.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\$(Configuration)\cuda_compile_1_generated_util.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\build\CMakeFiles\76cdaa2b53db5cfcfd4e6f14d1ac1437\opencl_kernels_objdetect.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Processing OpenCL kernels (objdetect)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=objdetect -DCL_DIR=I:/src/opencv-master/opencv/modules/objdetect/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_objdetect.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\opencv\modules\objdetect\src\opencl\cascadedetect.cl;I:\src\opencv-master\opencv\modules\objdetect\src\opencl\objdetect_hog.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_objdetect.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Processing OpenCL kernels (objdetect)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=objdetect -DCL_DIR=I:/src/opencv-master/opencv/modules/objdetect/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_objdetect.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\opencv\modules\objdetect\src\opencl\cascadedetect.cl;I:\src\opencv-master\opencv\modules\objdetect\src\opencl\objdetect_hog.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_objdetect.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\build\CMakeFiles\76cdaa2b53db5cfcfd4e6f14d1ac1437\opencl_kernels_rgbd.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Processing OpenCL kernels (rgbd)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=rgbd -DCL_DIR=I:/src/opencv-master/opencv_contrib/modules/rgbd/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_rgbd.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\opencv_contrib\modules\rgbd\src\opencl\hash_tsdf.cl;I:\src\opencv-master\opencv_contrib\modules\rgbd\src\opencl\icp.cl;I:\src\opencv-master\opencv_contrib\modules\rgbd\src\opencl\kinfu_frame.cl;I:\src\opencv-master\opencv_contrib\modules\rgbd\src\opencl\tsdf.cl;I:\src\opencv-master\opencv_contrib\modules\rgbd\src\opencl\tsdf_functions.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_rgbd.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Processing OpenCL kernels (rgbd)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=rgbd -DCL_DIR=I:/src/opencv-master/opencv_contrib/modules/rgbd/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_rgbd.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\opencv_contrib\modules\rgbd\src\opencl\hash_tsdf.cl;I:\src\opencv-master\opencv_contrib\modules\rgbd\src\opencl\icp.cl;I:\src\opencv-master\opencv_contrib\modules\rgbd\src\opencl\kinfu_frame.cl;I:\src\opencv-master\opencv_contrib\modules\rgbd\src\opencl\tsdf.cl;I:\src\opencv-master\opencv_contrib\modules\rgbd\src\opencl\tsdf_functions.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_rgbd.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\build\CMakeFiles\76cdaa2b53db5cfcfd4e6f14d1ac1437\opencl_kernels_video.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Processing OpenCL kernels (video)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=video -DCL_DIR=I:/src/opencv-master/opencv/modules/video/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_video.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\opencv\modules\video\src\opencl\bgfg_knn.cl;I:\src\opencv-master\opencv\modules\video\src\opencl\bgfg_mog2.cl;I:\src\opencv-master\opencv\modules\video\src\opencl\dis_flow.cl;I:\src\opencv-master\opencv\modules\video\src\opencl\optical_flow_farneback.cl;I:\src\opencv-master\opencv\modules\video\src\opencl\pyrlk.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_video.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Processing OpenCL kernels (video)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=video -DCL_DIR=I:/src/opencv-master/opencv/modules/video/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_video.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\opencv\modules\video\src\opencl\bgfg_knn.cl;I:\src\opencv-master\opencv\modules\video\src\opencl\bgfg_mog2.cl;I:\src\opencv-master\opencv\modules\video\src\opencl\dis_flow.cl;I:\src\opencv-master\opencv\modules\video\src\opencl\optical_flow_farneback.cl;I:\src\opencv-master\opencv\modules\video\src\opencl\pyrlk.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_video.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\build\CMakeFiles\76cdaa2b53db5cfcfd4e6f14d1ac1437\opencl_kernels_xfeatures2d.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Processing OpenCL kernels (xfeatures2d)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=xfeatures2d -DCL_DIR=I:/src/opencv-master/opencv_contrib/modules/xfeatures2d/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_xfeatures2d.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\opencl\surf.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_xfeatures2d.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Processing OpenCL kernels (xfeatures2d)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=xfeatures2d -DCL_DIR=I:/src/opencv-master/opencv_contrib/modules/xfeatures2d/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_xfeatures2d.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\opencl\surf.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_xfeatures2d.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\cuda\surf.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/xfeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_surf.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\xfeatures2d\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/xfeatures2d/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/xfeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_surf.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/xfeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_surf.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/xfeatures2d/src/cuda/cuda_compile_1_generated_surf.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\xfeatures2d\src\cuda\cuda_compile_1_generated_surf.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\xfeatures2d\src\cuda\cuda_compile_1_generated_surf.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\xfeatures2d\src\cuda\$(Configuration)\cuda_compile_1_generated_surf.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/xfeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_surf.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\xfeatures2d\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/xfeatures2d/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/xfeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_surf.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/xfeatures2d/src/cuda/$(Configuration)/cuda_compile_1_generated_surf.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/xfeatures2d/src/cuda/cuda_compile_1_generated_surf.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\xfeatures2d\src\cuda\cuda_compile_1_generated_surf.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\xfeatures2d\src\cuda\cuda_compile_1_generated_surf.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\xfeatures2d\src\cuda\$(Configuration)\cuda_compile_1_generated_surf.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\build\CMakeFiles\76cdaa2b53db5cfcfd4e6f14d1ac1437\opencl_kernels_ximgproc.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Processing OpenCL kernels (ximgproc)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=ximgproc -DCL_DIR=I:/src/opencv-master/opencv_contrib/modules/ximgproc/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_ximgproc.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\opencl\anisodiff.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_ximgproc.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Processing OpenCL kernels (ximgproc)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=ximgproc -DCL_DIR=I:/src/opencv-master/opencv_contrib/modules/ximgproc/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_ximgproc.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\opencl\anisodiff.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_ximgproc.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\build\CMakeFiles\76cdaa2b53db5cfcfd4e6f14d1ac1437\opencl_kernels_bioinspired.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Processing OpenCL kernels (bioinspired)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=bioinspired -DCL_DIR=I:/src/opencv-master/opencv_contrib/modules/bioinspired/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_bioinspired.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\opencl\retina_kernel.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_bioinspired.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Processing OpenCL kernels (bioinspired)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=bioinspired -DCL_DIR=I:/src/opencv-master/opencv_contrib/modules/bioinspired/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_bioinspired.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\opencl\retina_kernel.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_bioinspired.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudabgsegm\src\cuda\mog.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudabgsegm/src/cuda/$(Configuration)/cuda_compile_1_generated_mog.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudabgsegm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudabgsegm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudabgsegm/src/cuda/$(Configuration)/cuda_compile_1_generated_mog.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudabgsegm/src/cuda/$(Configuration)/cuda_compile_1_generated_mog.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudabgsegm/src/cuda/cuda_compile_1_generated_mog.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudabgsegm\src\cuda\cuda_compile_1_generated_mog.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudabgsegm\src\cuda\cuda_compile_1_generated_mog.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudabgsegm\src\cuda\$(Configuration)\cuda_compile_1_generated_mog.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudabgsegm/src/cuda/$(Configuration)/cuda_compile_1_generated_mog.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudabgsegm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudabgsegm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudabgsegm/src/cuda/$(Configuration)/cuda_compile_1_generated_mog.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudabgsegm/src/cuda/$(Configuration)/cuda_compile_1_generated_mog.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudabgsegm/src/cuda/cuda_compile_1_generated_mog.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudabgsegm\src\cuda\cuda_compile_1_generated_mog.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudabgsegm\src\cuda\cuda_compile_1_generated_mog.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudabgsegm\src\cuda\$(Configuration)\cuda_compile_1_generated_mog.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudabgsegm\src\cuda\mog2.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudabgsegm/src/cuda/$(Configuration)/cuda_compile_1_generated_mog2.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudabgsegm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudabgsegm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudabgsegm/src/cuda/$(Configuration)/cuda_compile_1_generated_mog2.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudabgsegm/src/cuda/$(Configuration)/cuda_compile_1_generated_mog2.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudabgsegm/src/cuda/cuda_compile_1_generated_mog2.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudabgsegm\src\cuda\cuda_compile_1_generated_mog2.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudabgsegm\src\cuda\cuda_compile_1_generated_mog2.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudabgsegm\src\cuda\$(Configuration)\cuda_compile_1_generated_mog2.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudabgsegm/src/cuda/$(Configuration)/cuda_compile_1_generated_mog2.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudabgsegm\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudabgsegm/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudabgsegm/src/cuda/$(Configuration)/cuda_compile_1_generated_mog2.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudabgsegm/src/cuda/$(Configuration)/cuda_compile_1_generated_mog2.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudabgsegm/src/cuda/cuda_compile_1_generated_mog2.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudabgsegm\src\cuda\cuda_compile_1_generated_mog2.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudabgsegm\src\cuda\cuda_compile_1_generated_mog2.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudabgsegm\src\cuda\$(Configuration)\cuda_compile_1_generated_mog2.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\cuda\NCV.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCV.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCV.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCV.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_NCV.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_NCV.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_NCV.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_NCV.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCV.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCV.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCV.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_NCV.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_NCV.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_NCV.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_NCV.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\cuda\NCVBroxOpticalFlow.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCVBroxOpticalFlow.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCVBroxOpticalFlow.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCVBroxOpticalFlow.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_NCVBroxOpticalFlow.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_NCVBroxOpticalFlow.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_NCVBroxOpticalFlow.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_NCVBroxOpticalFlow.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCVBroxOpticalFlow.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCVBroxOpticalFlow.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCVBroxOpticalFlow.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_NCVBroxOpticalFlow.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_NCVBroxOpticalFlow.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_NCVBroxOpticalFlow.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_NCVBroxOpticalFlow.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\cuda\NCVHaarObjectDetection.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCVHaarObjectDetection.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCVHaarObjectDetection.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCVHaarObjectDetection.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_NCVHaarObjectDetection.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_NCVHaarObjectDetection.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_NCVHaarObjectDetection.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_NCVHaarObjectDetection.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCVHaarObjectDetection.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCVHaarObjectDetection.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCVHaarObjectDetection.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_NCVHaarObjectDetection.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_NCVHaarObjectDetection.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_NCVHaarObjectDetection.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_NCVHaarObjectDetection.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\cuda\NCVPyramid.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCVPyramid.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCVPyramid.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCVPyramid.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_NCVPyramid.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_NCVPyramid.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_NCVPyramid.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_NCVPyramid.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCVPyramid.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCVPyramid.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NCVPyramid.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_NCVPyramid.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_NCVPyramid.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_NCVPyramid.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_NCVPyramid.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\cuda\NPP_staging.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NPP_staging.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NPP_staging.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NPP_staging.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_NPP_staging.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_NPP_staging.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_NPP_staging.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_NPP_staging.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NPP_staging.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NPP_staging.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_NPP_staging.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_NPP_staging.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_NPP_staging.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_NPP_staging.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_NPP_staging.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\cuda\bm.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_bm.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_bm.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_bm.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_bm.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_bm.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_bm.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_bm.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_bm.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_bm.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_bm.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_bm.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_bm.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_bm.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_bm.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\cuda\bm_fast.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_bm_fast.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_bm_fast.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_bm_fast.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_bm_fast.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_bm_fast.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_bm_fast.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_bm_fast.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_bm_fast.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_bm_fast.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_bm_fast.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_bm_fast.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_bm_fast.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_bm_fast.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_bm_fast.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\cuda\calib3d.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_calib3d.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_calib3d.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_calib3d.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_calib3d.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_calib3d.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_calib3d.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_calib3d.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_calib3d.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_calib3d.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_calib3d.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_calib3d.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_calib3d.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_calib3d.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_calib3d.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\cuda\ccomponetns.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_ccomponetns.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_ccomponetns.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_ccomponetns.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_ccomponetns.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_ccomponetns.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_ccomponetns.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_ccomponetns.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_ccomponetns.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_ccomponetns.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_ccomponetns.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_ccomponetns.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_ccomponetns.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_ccomponetns.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_ccomponetns.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\cuda\fgd.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_fgd.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_fgd.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_fgd.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_fgd.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_fgd.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_fgd.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_fgd.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_fgd.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_fgd.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_fgd.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_fgd.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_fgd.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_fgd.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_fgd.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\cuda\gmg.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_gmg.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_gmg.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_gmg.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_gmg.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_gmg.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_gmg.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_gmg.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_gmg.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_gmg.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_gmg.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_gmg.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_gmg.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_gmg.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_gmg.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\cuda\needle_map.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_needle_map.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_needle_map.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_needle_map.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_needle_map.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_needle_map.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_needle_map.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_needle_map.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_needle_map.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_needle_map.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/$(Configuration)/cuda_compile_1_generated_needle_map.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudalegacy/src/cuda/cuda_compile_1_generated_needle_map.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_needle_map.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\cuda_compile_1_generated_needle_map.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_needle_map.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaobjdetect\src\cuda\hog.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaobjdetect/src/cuda/$(Configuration)/cuda_compile_1_generated_hog.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaobjdetect\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaobjdetect/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaobjdetect/src/cuda/$(Configuration)/cuda_compile_1_generated_hog.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaobjdetect/src/cuda/$(Configuration)/cuda_compile_1_generated_hog.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaobjdetect/src/cuda/cuda_compile_1_generated_hog.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaobjdetect\src\cuda\cuda_compile_1_generated_hog.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaobjdetect\src\cuda\cuda_compile_1_generated_hog.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaobjdetect\src\cuda\$(Configuration)\cuda_compile_1_generated_hog.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaobjdetect/src/cuda/$(Configuration)/cuda_compile_1_generated_hog.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaobjdetect\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaobjdetect/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaobjdetect/src/cuda/$(Configuration)/cuda_compile_1_generated_hog.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaobjdetect/src/cuda/$(Configuration)/cuda_compile_1_generated_hog.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaobjdetect/src/cuda/cuda_compile_1_generated_hog.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaobjdetect\src\cuda\cuda_compile_1_generated_hog.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaobjdetect\src\cuda\cuda_compile_1_generated_hog.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaobjdetect\src\cuda\$(Configuration)\cuda_compile_1_generated_hog.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaobjdetect\src\cuda\lbp.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaobjdetect/src/cuda/$(Configuration)/cuda_compile_1_generated_lbp.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaobjdetect\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaobjdetect/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaobjdetect/src/cuda/$(Configuration)/cuda_compile_1_generated_lbp.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaobjdetect/src/cuda/$(Configuration)/cuda_compile_1_generated_lbp.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaobjdetect/src/cuda/cuda_compile_1_generated_lbp.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaobjdetect\src\cuda\cuda_compile_1_generated_lbp.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaobjdetect\src\cuda\cuda_compile_1_generated_lbp.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaobjdetect\src\cuda\$(Configuration)\cuda_compile_1_generated_lbp.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaobjdetect/src/cuda/$(Configuration)/cuda_compile_1_generated_lbp.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaobjdetect\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaobjdetect/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaobjdetect/src/cuda/$(Configuration)/cuda_compile_1_generated_lbp.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaobjdetect/src/cuda/$(Configuration)/cuda_compile_1_generated_lbp.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaobjdetect/src/cuda/cuda_compile_1_generated_lbp.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaobjdetect\src\cuda\cuda_compile_1_generated_lbp.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaobjdetect\src\cuda\cuda_compile_1_generated_lbp.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaobjdetect\src\cuda\$(Configuration)\cuda_compile_1_generated_lbp.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\build\CMakeFiles\76cdaa2b53db5cfcfd4e6f14d1ac1437\opencl_kernels_optflow.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Processing OpenCL kernels (optflow)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=optflow -DCL_DIR=I:/src/opencv-master/opencv_contrib/modules/optflow/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_optflow.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\opencv_contrib\modules\optflow\src\opencl\optical_flow_tvl1.cl;I:\src\opencv-master\opencv_contrib\modules\optflow\src\opencl\sparse_matching_gpc.cl;I:\src\opencv-master\opencv_contrib\modules\optflow\src\opencl\updatemotionhistory.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_optflow.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Processing OpenCL kernels (optflow)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=optflow -DCL_DIR=I:/src/opencv-master/opencv_contrib/modules/optflow/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_optflow.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\opencv_contrib\modules\optflow\src\opencl\optical_flow_tvl1.cl;I:\src\opencv-master\opencv_contrib\modules\optflow\src\opencl\sparse_matching_gpc.cl;I:\src\opencv-master\opencv_contrib\modules\optflow\src\opencl\updatemotionhistory.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_optflow.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\build\CMakeFiles\76cdaa2b53db5cfcfd4e6f14d1ac1437\opencl_kernels_stitching.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Processing OpenCL kernels (stitching)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=stitching -DCL_DIR=I:/src/opencv-master/opencv/modules/stitching/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_stitching.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\opencv\modules\stitching\src\opencl\multibandblend.cl;I:\src\opencv-master\opencv\modules\stitching\src\opencl\warpers.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_stitching.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Processing OpenCL kernels (stitching)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=stitching -DCL_DIR=I:/src/opencv-master/opencv/modules/stitching/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_stitching.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\opencv\modules\stitching\src\opencl\multibandblend.cl;I:\src\opencv-master\opencv\modules\stitching\src\opencl\warpers.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_stitching.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\stitching\src\cuda\build_warp_maps.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/stitching/src/cuda/$(Configuration)/cuda_compile_1_generated_build_warp_maps.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\stitching\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/stitching/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/stitching/src/cuda/$(Configuration)/cuda_compile_1_generated_build_warp_maps.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/stitching/src/cuda/$(Configuration)/cuda_compile_1_generated_build_warp_maps.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/stitching/src/cuda/cuda_compile_1_generated_build_warp_maps.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\stitching\src\cuda\cuda_compile_1_generated_build_warp_maps.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\stitching\src\cuda\cuda_compile_1_generated_build_warp_maps.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\stitching\src\cuda\$(Configuration)\cuda_compile_1_generated_build_warp_maps.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/stitching/src/cuda/$(Configuration)/cuda_compile_1_generated_build_warp_maps.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\stitching\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/stitching/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/stitching/src/cuda/$(Configuration)/cuda_compile_1_generated_build_warp_maps.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/stitching/src/cuda/$(Configuration)/cuda_compile_1_generated_build_warp_maps.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/stitching/src/cuda/cuda_compile_1_generated_build_warp_maps.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\stitching\src\cuda\cuda_compile_1_generated_build_warp_maps.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\stitching\src\cuda\cuda_compile_1_generated_build_warp_maps.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\stitching\src\cuda\$(Configuration)\cuda_compile_1_generated_build_warp_maps.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv\modules\stitching\src\cuda\multiband_blend.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/stitching/src/cuda/$(Configuration)/cuda_compile_1_generated_multiband_blend.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\stitching\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/stitching/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/stitching/src/cuda/$(Configuration)/cuda_compile_1_generated_multiband_blend.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/stitching/src/cuda/$(Configuration)/cuda_compile_1_generated_multiband_blend.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/stitching/src/cuda/cuda_compile_1_generated_multiband_blend.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\stitching\src\cuda\cuda_compile_1_generated_multiband_blend.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\stitching\src\cuda\cuda_compile_1_generated_multiband_blend.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\stitching\src\cuda\$(Configuration)\cuda_compile_1_generated_multiband_blend.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/stitching/src/cuda/$(Configuration)/cuda_compile_1_generated_multiband_blend.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\stitching\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/stitching/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/stitching/src/cuda/$(Configuration)/cuda_compile_1_generated_multiband_blend.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/stitching/src/cuda/$(Configuration)/cuda_compile_1_generated_multiband_blend.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/stitching/src/cuda/cuda_compile_1_generated_multiband_blend.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\stitching\src\cuda\cuda_compile_1_generated_multiband_blend.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\stitching\src\cuda\cuda_compile_1_generated_multiband_blend.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\stitching\src\cuda\$(Configuration)\cuda_compile_1_generated_multiband_blend.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\build\CMakeFiles\76cdaa2b53db5cfcfd4e6f14d1ac1437\opencl_kernels_tracking.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Processing OpenCL kernels (tracking)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=tracking -DCL_DIR=I:/src/opencv-master/opencv_contrib/modules/tracking/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_tracking.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\opencv_contrib\modules\tracking\src\opencl\tldDetector.cl;I:\src\opencv-master\opencv_contrib\modules\tracking\src\opencl\tmm.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_tracking.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Processing OpenCL kernels (tracking)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=tracking -DCL_DIR=I:/src/opencv-master/opencv_contrib/modules/tracking/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_tracking.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\opencv_contrib\modules\tracking\src\opencl\tldDetector.cl;I:\src\opencv-master\opencv_contrib\modules\tracking\src\opencl\tmm.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_tracking.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaoptflow\src\cuda\farneback.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_farneback.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_farneback.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_farneback.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/cuda_compile_1_generated_farneback.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\cuda_compile_1_generated_farneback.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\cuda_compile_1_generated_farneback.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\$(Configuration)\cuda_compile_1_generated_farneback.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_farneback.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_farneback.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_farneback.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/cuda_compile_1_generated_farneback.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\cuda_compile_1_generated_farneback.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\cuda_compile_1_generated_farneback.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\$(Configuration)\cuda_compile_1_generated_farneback.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaoptflow\src\cuda\nvidiaOpticalFlow.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_nvidiaOpticalFlow.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_nvidiaOpticalFlow.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_nvidiaOpticalFlow.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/cuda_compile_1_generated_nvidiaOpticalFlow.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\cuda_compile_1_generated_nvidiaOpticalFlow.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\cuda_compile_1_generated_nvidiaOpticalFlow.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\$(Configuration)\cuda_compile_1_generated_nvidiaOpticalFlow.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_nvidiaOpticalFlow.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_nvidiaOpticalFlow.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_nvidiaOpticalFlow.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/cuda_compile_1_generated_nvidiaOpticalFlow.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\cuda_compile_1_generated_nvidiaOpticalFlow.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\cuda_compile_1_generated_nvidiaOpticalFlow.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\$(Configuration)\cuda_compile_1_generated_nvidiaOpticalFlow.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaoptflow\src\cuda\pyrlk.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_pyrlk.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_pyrlk.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_pyrlk.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/cuda_compile_1_generated_pyrlk.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\cuda_compile_1_generated_pyrlk.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\cuda_compile_1_generated_pyrlk.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\$(Configuration)\cuda_compile_1_generated_pyrlk.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_pyrlk.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_pyrlk.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_pyrlk.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/cuda_compile_1_generated_pyrlk.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\cuda_compile_1_generated_pyrlk.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\cuda_compile_1_generated_pyrlk.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\$(Configuration)\cuda_compile_1_generated_pyrlk.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\cudaoptflow\src\cuda\tvl1flow.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_tvl1flow.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_tvl1flow.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_tvl1flow.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/cuda_compile_1_generated_tvl1flow.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\cuda_compile_1_generated_tvl1flow.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\cuda_compile_1_generated_tvl1flow.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\$(Configuration)\cuda_compile_1_generated_tvl1flow.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_tvl1flow.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_tvl1flow.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/$(Configuration)/cuda_compile_1_generated_tvl1flow.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/cudaoptflow/src/cuda/cuda_compile_1_generated_tvl1flow.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\cuda_compile_1_generated_tvl1flow.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\cuda_compile_1_generated_tvl1flow.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\$(Configuration)\cuda_compile_1_generated_tvl1flow.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\build\CMakeFiles\76cdaa2b53db5cfcfd4e6f14d1ac1437\opencl_kernels_superres.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Processing OpenCL kernels (superres)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=superres -DCL_DIR=I:/src/opencv-master/opencv_contrib/modules/superres/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_superres.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\opencv_contrib\modules\superres\src\opencl\superres_btvl1.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_superres.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Processing OpenCL kernels (superres)</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -DMODULE_NAME=superres -DCL_DIR=I:/src/opencv-master/opencv_contrib/modules/superres/src/opencl -DOUTPUT=I:/src/opencv-master/build/modules/world/opencl_kernels_superres.cpp -P I:/src/opencv-master/opencv/cmake/cl2cpp.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\opencv_contrib\modules\superres\src\opencl\superres_btvl1.cl;I:\src\opencv-master\opencv\cmake\cl2cpp.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\opencl_kernels_superres.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\superres\src\cuda\btv_l1_gpu.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/superres/src/cuda/$(Configuration)/cuda_compile_1_generated_btv_l1_gpu.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\superres\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/superres/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/superres/src/cuda/$(Configuration)/cuda_compile_1_generated_btv_l1_gpu.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/superres/src/cuda/$(Configuration)/cuda_compile_1_generated_btv_l1_gpu.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/superres/src/cuda/cuda_compile_1_generated_btv_l1_gpu.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\superres\src\cuda\cuda_compile_1_generated_btv_l1_gpu.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\superres\src\cuda\cuda_compile_1_generated_btv_l1_gpu.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\superres\src\cuda\$(Configuration)\cuda_compile_1_generated_btv_l1_gpu.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/superres/src/cuda/$(Configuration)/cuda_compile_1_generated_btv_l1_gpu.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\superres\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/superres/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/superres/src/cuda/$(Configuration)/cuda_compile_1_generated_btv_l1_gpu.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/superres/src/cuda/$(Configuration)/cuda_compile_1_generated_btv_l1_gpu.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/superres/src/cuda/cuda_compile_1_generated_btv_l1_gpu.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\superres\src\cuda\cuda_compile_1_generated_btv_l1_gpu.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\superres\src\cuda\cuda_compile_1_generated_btv_l1_gpu.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\superres\src\cuda\$(Configuration)\cuda_compile_1_generated_btv_l1_gpu.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="I:\src\opencv-master\opencv_contrib\modules\videostab\src\cuda\global_motion.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/videostab/src/cuda/$(Configuration)/cuda_compile_1_generated_global_motion.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\videostab\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/videostab/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/videostab/src/cuda/$(Configuration)/cuda_compile_1_generated_global_motion.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/videostab/src/cuda/$(Configuration)/cuda_compile_1_generated_global_motion.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/videostab/src/cuda/cuda_compile_1_generated_global_motion.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\videostab\src\cuda\cuda_compile_1_generated_global_motion.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\videostab\src\cuda\cuda_compile_1_generated_global_motion.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\videostab\src\cuda\$(Configuration)\cuda_compile_1_generated_global_motion.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/videostab/src/cuda/$(Configuration)/cuda_compile_1_generated_global_motion.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\videostab\src\cuda
if %errorlevel% neq 0 goto :cmEnd
I:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/videostab/src/cuda/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/videostab/src/cuda/$(Configuration)/cuda_compile_1_generated_global_motion.cu.obj -D generated_cubin_file:STRING=I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/videostab/src/cuda/$(Configuration)/cuda_compile_1_generated_global_motion.cu.obj.cubin.txt -P I:/src/opencv-master/build/modules/world/CMakeFiles/cuda_compile_1.dir/__/__/__/opencv_contrib/modules/videostab/src/cuda/cuda_compile_1_generated_global_motion.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\videostab\src\cuda\cuda_compile_1_generated_global_motion.cu.obj.depend;I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\videostab\src\cuda\cuda_compile_1_generated_global_motion.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\videostab\src\cuda\$(Configuration)\cuda_compile_1_generated_global_motion.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="I:\src\opencv-master\opencv\modules\calib3d\include\opencv2\calib3d.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\calib3d\include\opencv2\calib3d\calib3d.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\calib3d\include\opencv2\calib3d\calib3d_c.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\affine.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\async.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\base.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\bindings_utils.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\bufferpool.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\check.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\core.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\core_c.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda.inl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\block.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\border_interpolate.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\color.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\common.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\datamov_utils.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\detail\color_detail.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\detail\reduce.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\detail\reduce_key_val.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\detail\transform_detail.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\detail\type_traits_detail.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\detail\vec_distance_detail.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\dynamic_smem.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\emulation.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\filters.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\funcattrib.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\functional.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\limits.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\reduce.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\saturate_cast.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\scan.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\simd_functions.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\transform.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\type_traits.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\utility.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\vec_distance.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\vec_math.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\vec_traits.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\warp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\warp_reduce.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda\warp_shuffle.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda_stream_accessor.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cuda_types.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cv_cpu_dispatch.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cv_cpu_helper.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cvdef.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cvstd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cvstd.inl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\cvstd_wrapper.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\detail\async_promise.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\detail\exception_ptr.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\directx.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\dualquaternion.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\dualquaternion.inl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\eigen.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\fast_math.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\hal\hal.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\hal\interface.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\hal\intrin.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\hal\intrin_avx.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\hal\intrin_avx512.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\hal\intrin_cpp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\hal\intrin_forward.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\hal\intrin_msa.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\hal\intrin_neon.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\hal\intrin_rvv.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\hal\intrin_rvv071.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\hal\intrin_sse.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\hal\intrin_sse_em.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\hal\intrin_vsx.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\hal\intrin_wasm.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\hal\msa_macros.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\hal\simd_utils.impl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\mat.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\mat.inl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\matx.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\neon_utils.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\ocl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\ocl_genbase.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\opencl\ocl_defs.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\opencl\opencl_info.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\opencl\opencl_svm.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\opencl\runtime\autogenerated\opencl_clblas.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\opencl\runtime\autogenerated\opencl_clfft.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\opencl\runtime\autogenerated\opencl_core.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\opencl\runtime\autogenerated\opencl_core_wrappers.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\opencl\runtime\autogenerated\opencl_gl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\opencl\runtime\autogenerated\opencl_gl_wrappers.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\opencl\runtime\opencl_clblas.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\opencl\runtime\opencl_clfft.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\opencl\runtime\opencl_core.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\opencl\runtime\opencl_core_wrappers.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\opencl\runtime\opencl_gl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\opencl\runtime\opencl_gl_wrappers.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\opencl\runtime\opencl_svm_20.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\opencl\runtime\opencl_svm_definitions.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\opencl\runtime\opencl_svm_hsa_extension.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\opengl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\operations.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\optim.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\ovx.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\parallel\backend\parallel_for.openmp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\parallel\backend\parallel_for.tbb.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\parallel\parallel_backend.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\persistence.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\private.cuda.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\private.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\quaternion.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\quaternion.inl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\saturate.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\simd_intrinsics.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\softfloat.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\sse_utils.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\traits.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\types.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\types_c.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\utility.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\utils\allocator_stats.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\utils\allocator_stats.impl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\utils\buffer_area.private.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\utils\configuration.private.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\utils\filesystem.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\utils\filesystem.private.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\utils\instrumentation.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\utils\lock.private.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\utils\logger.defines.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\utils\logger.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\utils\logtag.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\utils\plugin_loader.private.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\utils\tls.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\utils\trace.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\utils\trace.private.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\va_intel.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\version.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\include\opencv2\core\vsx_utils.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\include\opencv2\dnn.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\include\opencv2\dnn\all_layers.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\include\opencv2\dnn\dict.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\include\opencv2\dnn\dnn.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\include\opencv2\dnn\dnn.inl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\include\opencv2\dnn\layer.details.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\include\opencv2\dnn\layer.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\include\opencv2\dnn\layer_reg.private.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\include\opencv2\dnn\shape_utils.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\include\opencv2\dnn\utils\inference_engine.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\include\opencv2\dnn\version.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\features2d\include\opencv2\features2d.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\features2d\include\opencv2\features2d\features2d.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\features2d\include\opencv2\features2d\hal\interface.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\all_indices.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\allocator.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\any.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\autotuned_index.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\composite_index.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\config.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\defines.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\dist.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\dummy.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\dynamic_bitset.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\flann.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\flann_base.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\general.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\ground_truth.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\hdf5.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\heap.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\hierarchical_clustering_index.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\index_testing.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\kdtree_index.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\kdtree_single_index.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\kmeans_index.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\linear_index.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\logger.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\lsh_index.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\lsh_table.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\matrix.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\miniflann.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\nn_index.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\object_factory.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\params.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\random.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\result_set.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\sampling.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\saving.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\simplex_downhill.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\include\opencv2\flann\timer.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\core.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\cpu\core.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\cpu\gcpukernel.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\cpu\imgproc.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\cpu\stereo.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\cpu\video.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\fluid\core.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\fluid\gfluidbuffer.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\fluid\gfluidkernel.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\fluid\imgproc.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\garg.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\garray.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gasync_context.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gcall.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gcommon.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gcompiled.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gcompiled_async.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gcompoundkernel.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gcomputation.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gcomputation_async.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gframe.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gkernel.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gmat.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gmetaarg.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gopaque.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gproto.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gpu\core.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gpu\ggpukernel.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gpu\imgproc.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gscalar.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gstreaming.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gtransform.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gtype_traits.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\gtyped.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\imgproc.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\infer.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\infer\bindings_ie.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\infer\ie.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\infer\onnx.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\infer\parsers.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\media.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\ocl\core.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\ocl\goclkernel.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\ocl\imgproc.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\opencv_includes.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\operators.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\own\assert.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\own\convert.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\own\cvdefs.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\own\exports.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\own\mat.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\own\saturate.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\own\scalar.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\own\types.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\plaidml\core.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\plaidml\gplaidmlkernel.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\plaidml\plaidml.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\python\python.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\render.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\render\render.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\render\render_types.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\rmat.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\s11n.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\s11n\base.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\stereo.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\streaming\cap.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\streaming\desync.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\streaming\format.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\streaming\meta.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\streaming\source.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\streaming\sync.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\util\any.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\util\compiler_hints.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\util\copy_through_move.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\util\optional.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\util\throw.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\util\type_traits.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\util\util.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\util\variant.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\gapi\include\opencv2\gapi\video.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\highgui\include\opencv2\highgui.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\highgui\include\opencv2\highgui\highgui.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\highgui\include\opencv2\highgui\highgui_c.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\include\opencv2\imgcodecs.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\include\opencv2\imgcodecs\imgcodecs.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\include\opencv2\imgcodecs\imgcodecs_c.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\include\opencv2\imgcodecs\ios.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\include\opencv2\imgcodecs\legacy\constants_c.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\include\opencv2\imgcodecs\macosx.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\include\opencv2\imgproc.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\include\opencv2\imgproc\bindings.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\include\opencv2\imgproc\detail\gcgraph.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\include\opencv2\imgproc\hal\hal.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\include\opencv2\imgproc\hal\interface.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\include\opencv2\imgproc\imgproc.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\include\opencv2\imgproc\imgproc_c.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\include\opencv2\imgproc\segmentation.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\include\opencv2\imgproc\types_c.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\ml\include\opencv2\ml.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\ml\include\opencv2\ml\ml.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\ml\include\opencv2\ml\ml.inl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\objdetect\include\opencv2\objdetect.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\objdetect\include\opencv2\objdetect\detection_based_tracker.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\objdetect\include\opencv2\objdetect\objdetect.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\photo\include\opencv2\photo.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\photo\include\opencv2\photo\cuda.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\photo\include\opencv2\photo\legacy\constants_c.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\photo\include\opencv2\photo\photo.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\stitching\include\opencv2\stitching.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\stitching\include\opencv2\stitching\detail\autocalib.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\stitching\include\opencv2\stitching\detail\blenders.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\stitching\include\opencv2\stitching\detail\camera.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\stitching\include\opencv2\stitching\detail\exposure_compensate.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\stitching\include\opencv2\stitching\detail\matchers.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\stitching\include\opencv2\stitching\detail\motion_estimators.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\stitching\include\opencv2\stitching\detail\seam_finders.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\stitching\include\opencv2\stitching\detail\timelapsers.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\stitching\include\opencv2\stitching\detail\util.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\stitching\include\opencv2\stitching\detail\util_inl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\stitching\include\opencv2\stitching\detail\warpers.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\stitching\include\opencv2\stitching\detail\warpers_inl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\stitching\include\opencv2\stitching\warpers.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\video\include\opencv2\video.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\video\include\opencv2\video\background_segm.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\video\include\opencv2\video\detail\tracking.detail.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\video\include\opencv2\video\legacy\constants_c.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\video\include\opencv2\video\tracking.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\video\include\opencv2\video\video.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\videoio\include\opencv2\videoio.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\videoio\include\opencv2\videoio\cap_ios.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\videoio\include\opencv2\videoio\container_avi.private.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\videoio\include\opencv2\videoio\legacy\constants_c.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\videoio\include\opencv2\videoio\registry.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\videoio\include\opencv2\videoio\videoio.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\videoio\include\opencv2\videoio\videoio_c.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\videoio\src\cap_dshow.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\videoio\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\world\include\opencv2\world.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\alphamat\include\opencv2\alphamat.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\aruco\include\opencv2\aruco.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\aruco\include\opencv2\aruco\charuco.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\aruco\include\opencv2\aruco\dictionary.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\barcode\include\opencv2\barcode.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\bgsegm\include\opencv2\bgsegm.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\include\opencv2\bioinspired.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\include\opencv2\bioinspired\bioinspired.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\include\opencv2\bioinspired\retina.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\include\opencv2\bioinspired\retinafasttonemapping.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\include\opencv2\bioinspired\transientareassegmentationmodule.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ccalib\include\opencv2\ccalib.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ccalib\include\opencv2\ccalib\multicalib.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ccalib\include\opencv2\ccalib\omnidir.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ccalib\include\opencv2\ccalib\randpattern.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\include\opencv2\cudaarithm.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudabgsegm\include\opencv2\cudabgsegm.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudacodec\include\opencv2\cudacodec.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudafeatures2d\include\opencv2\cudafeatures2d.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\include\opencv2\cudafilters.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\include\opencv2\cudaimgproc.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\include\opencv2\cudalegacy.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\include\opencv2\cudalegacy\NCV.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\include\opencv2\cudalegacy\NCVBroxOpticalFlow.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\include\opencv2\cudalegacy\NCVHaarObjectDetection.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\include\opencv2\cudalegacy\NCVPyramid.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\include\opencv2\cudalegacy\NPP_staging.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\include\opencv2\cudalegacy\private.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudaobjdetect\include\opencv2\cudaobjdetect.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudaoptflow\include\opencv2\cudaoptflow.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudastereo\include\opencv2\cudastereo.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudawarping\include\opencv2\cudawarping.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\block\block.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\block\detail\reduce.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\block\detail\reduce_key_val.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\block\dynamic_smem.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\block\reduce.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\block\scan.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\block\vec_distance.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\common.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\expr\binary_func.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\expr\binary_op.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\expr\color.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\expr\deriv.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\expr\expr.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\expr\per_element_func.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\expr\reduction.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\expr\unary_func.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\expr\unary_op.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\expr\warping.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\functional\color_cvt.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\functional\detail\color_cvt.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\functional\functional.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\functional\tuple_adapter.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\copy.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\detail\copy.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\detail\histogram.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\detail\integral.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\detail\minmaxloc.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\detail\pyr_down.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\detail\pyr_up.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\detail\reduce.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\detail\reduce_to_column.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\detail\reduce_to_row.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\detail\split_merge.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\detail\transform.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\detail\transpose.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\histogram.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\integral.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\pyramids.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\reduce.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\reduce_to_vec.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\split_merge.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\transform.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\grid\transpose.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\ptr2d\constant.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\ptr2d\deriv.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\ptr2d\detail\gpumat.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\ptr2d\extrapolation.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\ptr2d\glob.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\ptr2d\gpumat.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\ptr2d\interpolation.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\ptr2d\lut.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\ptr2d\mask.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\ptr2d\remap.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\ptr2d\resize.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\ptr2d\texture.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\ptr2d\traits.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\ptr2d\transform.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\ptr2d\warping.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\ptr2d\zip.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\util\atomic.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\util\detail\tuple.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\util\detail\type_traits.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\util\limits.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\util\saturate_cast.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\util\simd_functions.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\util\tuple.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\util\type_traits.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\util\vec_math.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\util\vec_traits.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\warp\detail\reduce.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\warp\detail\reduce_key_val.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\warp\reduce.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\warp\scan.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\warp\shuffle.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudev\include\opencv2\cudev\warp\warp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\ar_hmdb.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\ar_sports.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\dataset.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\fr_adience.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\fr_lfw.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\gr_chalearn.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\gr_skig.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\hpe_humaneva.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\hpe_parse.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\ir_affine.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\ir_robot.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\is_bsds.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\is_weizmann.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\msm_epfl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\msm_middlebury.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\or_imagenet.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\or_mnist.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\or_pascal.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\or_sun.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\pd_caltech.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\pd_inria.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\slam_kitti.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\slam_tumindoor.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\sr_bsds.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\sr_div2k.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\sr_general100.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\tr_chars.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\tr_icdar.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\tr_svt.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\track_alov.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\track_vot.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\include\opencv2\datasets\util.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\dnn_objdetect\include\opencv2\core_detect.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\dnn_superres\include\opencv2\dnn_superres.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\dpm\include\opencv2\dpm.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\face\include\opencv2\face.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\face\include\opencv2\face\bif.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\face\include\opencv2\face\face_alignment.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\face\include\opencv2\face\facemark.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\face\include\opencv2\face\facemarkAAM.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\face\include\opencv2\face\facemarkLBF.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\face\include\opencv2\face\facemark_train.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\face\include\opencv2\face\facerec.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\face\include\opencv2\face\mace.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\face\include\opencv2\face\predict_collector.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\fuzzy\include\opencv2\fuzzy.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\fuzzy\include\opencv2\fuzzy\fuzzy_F0_math.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\fuzzy\include\opencv2\fuzzy\fuzzy_F1_math.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\fuzzy\include\opencv2\fuzzy\fuzzy_image.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\fuzzy\include\opencv2\fuzzy\types.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\hfs\include\opencv2\hfs.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\intensity_transform\include\opencv2\intensity_transform.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\line_descriptor\include\opencv2\line_descriptor.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\line_descriptor\include\opencv2\line_descriptor\descriptor.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\include\opencv2\mcc.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\include\opencv2\mcc\ccm.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\include\opencv2\mcc\checker_detector.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\include\opencv2\mcc\checker_model.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\optflow\include\opencv2\optflow.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\optflow\include\opencv2\optflow\motempl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\optflow\include\opencv2\optflow\pcaflow.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\optflow\include\opencv2\optflow\rlofflow.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\optflow\include\opencv2\optflow\sparse_matching_gpc.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\phase_unwrapping\include\opencv2\phase_unwrapping.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\phase_unwrapping\include\opencv2\phase_unwrapping\histogramphaseunwrapping.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\phase_unwrapping\include\opencv2\phase_unwrapping\phase_unwrapping.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\plot\include\opencv2\plot.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\quality\include\opencv2\quality.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\quality\include\opencv2\quality\quality_utils.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\quality\include\opencv2\quality\qualitybase.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\quality\include\opencv2\quality\qualitybrisque.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\quality\include\opencv2\quality\qualitygmsd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\quality\include\opencv2\quality\qualitymse.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\quality\include\opencv2\quality\qualitypsnr.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\quality\include\opencv2\quality\qualityssim.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rapid\include\opencv2\rapid.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\reg\include\opencv2\reg\map.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\reg\include\opencv2\reg\mapaffine.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\reg\include\opencv2\reg\mapper.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\reg\include\opencv2\reg\mappergradaffine.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\reg\include\opencv2\reg\mappergradeuclid.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\reg\include\opencv2\reg\mappergradproj.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\reg\include\opencv2\reg\mappergradshift.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\reg\include\opencv2\reg\mappergradsimilar.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\reg\include\opencv2\reg\mapperpyramid.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\reg\include\opencv2\reg\mapprojec.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\reg\include\opencv2\reg\mapshift.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\include\opencv2\rgbd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\include\opencv2\rgbd\colored_kinfu.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\include\opencv2\rgbd\depth.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\include\opencv2\rgbd\detail\pose_graph.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\include\opencv2\rgbd\dynafu.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\include\opencv2\rgbd\intrinsics.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\include\opencv2\rgbd\kinfu.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\include\opencv2\rgbd\large_kinfu.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\include\opencv2\rgbd\linemod.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\include\opencv2\rgbd\volume.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\saliency\include\opencv2\saliency.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\saliency\include\opencv2\saliency\saliencyBaseClasses.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\saliency\include\opencv2\saliency\saliencySpecializedClasses.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\shape\include\opencv2\shape.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\shape\include\opencv2\shape\emdL1.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\shape\include\opencv2\shape\hist_cost.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\shape\include\opencv2\shape\shape.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\shape\include\opencv2\shape\shape_distance.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\shape\include\opencv2\shape\shape_transformer.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\stereo\include\opencv2\stereo.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\stereo\include\opencv2\stereo\descriptor.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\stereo\include\opencv2\stereo\quasi_dense_stereo.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\stereo\include\opencv2\stereo\stereo.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\structured_light\include\opencv2\structured_light.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\structured_light\include\opencv2\structured_light\graycodepattern.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\structured_light\include\opencv2\structured_light\sinusoidalpattern.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\structured_light\include\opencv2\structured_light\structured_light.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\superres\include\opencv2\superres.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\superres\include\opencv2\superres\optical_flow.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\surface_matching\include\opencv2\surface_matching.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\surface_matching\include\opencv2\surface_matching\icp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\surface_matching\include\opencv2\surface_matching\pose_3d.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\surface_matching\include\opencv2\surface_matching\ppf_helpers.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\surface_matching\include\opencv2\surface_matching\ppf_match_3d.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\surface_matching\include\opencv2\surface_matching\t_hash_int.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\text\include\opencv2\text.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\text\include\opencv2\text\erfilter.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\text\include\opencv2\text\ocr.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\text\include\opencv2\text\swt_text_detection.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\text\include\opencv2\text\textDetector.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\include\opencv2\tracking.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\include\opencv2\tracking\feature.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\include\opencv2\tracking\kalman_filters.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\include\opencv2\tracking\onlineBoosting.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\include\opencv2\tracking\tldDataset.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\include\opencv2\tracking\tracking.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\include\opencv2\tracking\tracking_by_matching.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\include\opencv2\tracking\tracking_internals.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\include\opencv2\tracking\tracking_legacy.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\videostab\include\opencv2\videostab.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\videostab\include\opencv2\videostab\deblurring.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\videostab\include\opencv2\videostab\fast_marching.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\videostab\include\opencv2\videostab\fast_marching_inl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\videostab\include\opencv2\videostab\frame_source.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\videostab\include\opencv2\videostab\global_motion.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\videostab\include\opencv2\videostab\inpainting.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\videostab\include\opencv2\videostab\log.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\videostab\include\opencv2\videostab\motion_core.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\videostab\include\opencv2\videostab\motion_stabilizing.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\videostab\include\opencv2\videostab\optical_flow.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\videostab\include\opencv2\videostab\outlier_rejection.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\videostab\include\opencv2\videostab\ring_buffer.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\videostab\include\opencv2\videostab\stabilizer.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\videostab\include\opencv2\videostab\wobble_suppression.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\include\opencv2\wechat_qrcode.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\include\opencv2\xfeatures2d.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\include\opencv2\xfeatures2d\cuda.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\include\opencv2\xfeatures2d\nonfree.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\brightedges.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\color_match.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\deriche_filter.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\disparity_filter.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\edge_drawing.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\edge_filter.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\edgeboxes.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\edgepreserving_filter.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\estimated_covariance.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\fast_hough_transform.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\fast_line_detector.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\fourier_descriptors.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\lsc.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\paillou_filter.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\peilin.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\ridgefilter.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\run_length_morphology.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\seeds.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\segmentation.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\slic.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\sparse_match_interpolator.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\structured_edge_detection.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\include\opencv2\ximgproc\weighted_median_filter.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xobjdetect\include\opencv2\xobjdetect.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\include\opencv2\xphoto.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\include\opencv2\xphoto\bm3d_image_denoising.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\include\opencv2\xphoto\dct_image_denoising.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\include\opencv2\xphoto\inpainting.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\include\opencv2\xphoto\oilpainting.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\include\opencv2\xphoto\tonemap.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\include\opencv2\xphoto\white_balance.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudev\src\stub.cpp" />
    <None Include="I:\src\opencv-master\build\modules\world\version_string.inc">
    </None>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\algorithm.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\alloc.cpp">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);HAVE_MALLOC_H=1;HAVE_WIN32_ALIGNED_MALLOC=1</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);HAVE_MALLOC_H=1;HAVE_WIN32_ALIGNED_MALLOC=1</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\arithm.cpp">
      <ObjectFileName>$(IntDir)/__/core/src/arithm.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\arithm.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\array.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\async.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\batch_distance.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\bindings_utils.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\buffer_area.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\channels.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\check.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\command_line_parser.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\conjugate_gradient.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\convert.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\convert_c.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\convert_scale.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\copy.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\count_non_zero.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\cuda_gpu_mat.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\cuda_gpu_mat_nd.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\cuda_host_mem.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\cuda_info.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\cuda_stream.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\datastructs.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\directx.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\downhill_simplex.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\dxt.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\gl_core_3_1.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\glob.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\hal_internal.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\kmeans.cpp">
      <ObjectFileName>$(IntDir)/__/core/src/kmeans.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\lapack.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\lda.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\logger.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\lpsolver.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\lut.cpp">
      <ObjectFileName>$(IntDir)/__/core/src/lut.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\mathfuncs.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\mathfuncs_core.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\matmul.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\matrix.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\matrix_c.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\matrix_decomp.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\matrix_expressions.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\matrix_iterator.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\matrix_operations.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\matrix_sparse.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\matrix_transform.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\matrix_wrap.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\mean.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\merge.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\minmax.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\norm.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\ocl.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\opencl\runtime\opencl_clblas.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\opencl\runtime\opencl_clfft.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\opencl\runtime\opencl_core.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\opengl.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\out.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\ovx.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\parallel.cpp">
      <ObjectFileName>$(IntDir)/__/core/src/parallel.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\parallel\parallel.cpp">
      <ObjectFileName>$(IntDir)/__/core/src/parallel/parallel.cpp.obj</ObjectFileName>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);PARALLEL_ENABLE_PLUGINS=1;DEBUG_POSTFIX=d</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);PARALLEL_ENABLE_PLUGINS=1;DEBUG_POSTFIX=d</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\parallel\parallel_openmp.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\parallel\parallel_tbb.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\parallel_impl.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\pca.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\persistence.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\persistence_base64_encoding.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\persistence_json.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\persistence_types.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\persistence_xml.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\persistence_yml.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\rand.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\softfloat.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\split.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\stat.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\stat_c.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\stl.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\sum.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\system.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\tables.cpp">
      <ObjectFileName>$(IntDir)/__/core/src/tables.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\trace.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\types.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\umatrix.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\utils\datafile.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\utils\filesystem.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\utils\logtagconfigparser.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\utils\logtagmanager.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\utils\samples.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\core\src\va_intel.cpp" />
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\arithm.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\convert.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\copymakeborder.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\copyset.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\cvtclr_dx.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\fft.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\flip.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\gemm.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\halfconvert.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\inrange.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\intel_gemm.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\lut.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\meanstddev.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\minmaxloc.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\mixchannels.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\mulspectrums.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\normalize.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\reduce.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\reduce2.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\repeat.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\set_identity.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\split_merge.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\core\src\opencl\transpose.cl">
    </None>
    <ClCompile Include="I:\src\opencv-master\build\modules\world\opencl_kernels_core.cpp" />
    <ClInclude Include="I:\src\opencv-master\build\modules\world\opencl_kernels_core.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\arithm.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\arithm_ipp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\bufferpool.impl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\convert.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\convert.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\convert_scale.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\count_non_zero.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\directx.inc.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\gl_core_3_1.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\hal_internal.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\hal_replacement.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\intel_gpu_gemm.inl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\mathfuncs.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\mathfuncs_core.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\matmul.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\mean.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\merge.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\ocl_disabled.impl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\opencl\runtime\autogenerated\opencl_clblas_impl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\opencl\runtime\autogenerated\opencl_clfft_impl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\opencl\runtime\autogenerated\opencl_core_impl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\opencl\runtime\autogenerated\opencl_core_static_impl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\opencl\runtime\autogenerated\opencl_gl_impl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\opencl\runtime\autogenerated\opencl_gl_static_impl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\opencl\runtime\runtime_common.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\parallel\factory_parallel.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\parallel\parallel.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\parallel\plugin_parallel_api.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\parallel\plugin_parallel_wrapper.impl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\parallel\registry_parallel.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\parallel\registry_parallel.impl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\parallel_impl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\persistence.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\persistence_base64_encoding.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\persistence_impl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\split.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\stat.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\stat.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\sum.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\umatrix.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\utils\logtagconfig.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\utils\logtagconfigparser.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\utils\logtagmanager.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\utils\plugin_loader.impl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\core\src\va_wrapper.impl.hpp" />
    <ClCompile Include="I:\src\opencv-master\build\modules\world\mathfuncs_core.avx.cpp">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);CV_CPU_DISPATCH_MODE=AVX</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);CV_CPU_DISPATCH_MODE=AVX</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\arithm.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/cudaarithm/src/arithm.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\core.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\element_operations.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\lut.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/cudaarithm/src/lut.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\reductions.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\lut.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudaarithm\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\flann\src\flann.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\flann\src\miniflann.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\flann\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\accum.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\accum.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\approx.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\bilateral_filter.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\blend.cpp">
      <ObjectFileName>$(IntDir)/__/imgproc/src/blend.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\box_filter.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\canny.cpp">
      <ObjectFileName>$(IntDir)/__/imgproc/src/canny.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\clahe.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\color.cpp">
      <ObjectFileName>$(IntDir)/__/imgproc/src/color.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\color_hsv.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\color_lab.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\color_rgb.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\color_yuv.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\colormap.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\connectedcomponents.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\contours.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\convhull.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\corner.avx.cpp">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);CV_CPU_DISPATCH_MODE=AVX</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);CV_CPU_DISPATCH_MODE=AVX</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\corner.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\cornersubpix.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\demosaicing.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\deriv.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\distransform.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\drawing.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\emd.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\featureselect.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\filter.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\floodfill.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\gabor.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\generalized_hough.cpp">
      <ObjectFileName>$(IntDir)/__/imgproc/src/generalized_hough.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\geometry.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\grabcut.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\hershey_fonts.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\histogram.cpp">
      <ObjectFileName>$(IntDir)/__/imgproc/src/histogram.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\hough.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\imgwarp.avx2.cpp">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);CV_CPU_DISPATCH_MODE=AVX2</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);CV_CPU_DISPATCH_MODE=AVX2</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\imgwarp.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\imgwarp.sse4_1.cpp">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);CV_CPU_DISPATCH_MODE=SSE4_1</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);CV_CPU_DISPATCH_MODE=SSE4_1</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\intelligent_scissors.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\intersection.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\linefit.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\lsd.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\main.cpp">
      <ObjectFileName>$(IntDir)/__/imgproc/src/main.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\matchcontours.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\median_blur.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\min_enclosing_triangle.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\moments.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\morph.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\phasecorr.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\pyramids.cpp">
      <ObjectFileName>$(IntDir)/__/imgproc/src/pyramids.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\resize.avx2.cpp">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);CV_CPU_DISPATCH_MODE=AVX2</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);CV_CPU_DISPATCH_MODE=AVX2</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\resize.cpp">
      <ObjectFileName>$(IntDir)/__/imgproc/src/resize.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\resize.sse4_1.cpp">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);CV_CPU_DISPATCH_MODE=SSE4_1</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);CV_CPU_DISPATCH_MODE=SSE4_1</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\rotcalipers.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\samplers.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\segmentation.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\shapedescr.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\smooth.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\spatialgradient.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\subdivision2d.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\sumpixels.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\tables.cpp">
      <ObjectFileName>$(IntDir)/__/imgproc/src/tables.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\templmatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\thresh.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgproc\src\utils.cpp">
      <ObjectFileName>$(IntDir)/__/imgproc/src/utils.cpp.obj</ObjectFileName>
    </ClCompile>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\accumulate.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\bilateral.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\blend_linear.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\boxFilter.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\boxFilter3x3.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\calc_back_project.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\canny.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\clahe.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\color_hsv.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\color_lab.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\color_rgb.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\color_yuv.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\corner.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\covardata.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\filter2D.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\filter2DSmall.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\filterSepCol.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\filterSepRow.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\filterSep_singlePass.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\filterSmall.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\gaussianBlur3x3.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\gaussianBlur5x5.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\gftt.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\histogram.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\hough_lines.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\integral_sum.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\laplacian3.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\laplacian5.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\linearPolar.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\logPolar.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\match_template.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\medianFilter.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\moments.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\morph.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\morph3x3.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\precornerdetect.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\pyr_down.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\pyr_up.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\pyramid_up.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\remap.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\resize.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\sepFilter3x3.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\threshold.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\warp_affine.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\warp_perspective.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\imgproc\src\opencl\warp_transform.cl">
    </None>
    <ClCompile Include="I:\src\opencv-master\build\modules\world\opencl_kernels_imgproc.cpp" />
    <ClInclude Include="I:\src\opencv-master\build\modules\world\opencl_kernels_imgproc.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\_geom.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\accum.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\bilateral_filter.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\box_filter.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\ccl_bolelli_forest.inc.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\ccl_bolelli_forest_firstline.inc.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\ccl_bolelli_forest_lastline.inc.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\ccl_bolelli_forest_singleline.inc.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\color.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\color.simd_helpers.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\color_hsv.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\color_rgb.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\color_yuv.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\corner.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\filter.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\filter.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\filterengine.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\fixedpoint.inl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\hal_replacement.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\imgwarp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\median_blur.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\morph.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\resize.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\smooth.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\sumpixels.avx512_skx.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgproc\src\sumpixels.simd.hpp" />
    <ClCompile Include="I:\src\opencv-master\build\modules\world\accum.avx.cpp">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);CV_CPU_DISPATCH_MODE=AVX</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);CV_CPU_DISPATCH_MODE=AVX</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\intensity_transform\src\bimef.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\intensity_transform\src\intensity_transform.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\intensity_transform\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\ml\src\ann_mlp.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\ml\src\boost.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\ml\src\data.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\ml\src\em.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\ml\src\gbt.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\ml\src\inner_functions.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\ml\src\kdtree.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\ml\src\knearest.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\ml\src\lr.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\ml\src\nbayes.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\ml\src\rtrees.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\ml\src\svm.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\ml\src\svmsgd.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\ml\src\testset.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\ml\src\tree.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\ml\src\kdtree.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\ml\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\phase_unwrapping\src\histogramphaseunwrapping.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\phase_unwrapping\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\plot\src\plot.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\plot\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\quality\src\qualitybrisque.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\quality\src\qualitygmsd.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\quality\src\qualitymse.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\quality\src\qualityssim.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\quality\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\reg\src\map.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\reg\src\mapaffine.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\reg\src\mapper.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\reg\src\mappergradaffine.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\reg\src\mappergradeuclid.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\reg\src\mappergradproj.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\reg\src\mappergradshift.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\reg\src\mappergradsimilar.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\reg\src\mapperpyramid.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\reg\src\mapprojec.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\reg\src\mapshift.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\reg\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\surface_matching\src\icp.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\surface_matching\src\pose_3d.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\surface_matching\src\ppf_helpers.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\surface_matching\src\ppf_match_3d.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\surface_matching\src\t_hash_int.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\surface_matching\src\c_utils.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\surface_matching\src\hash_murmur.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\surface_matching\src\hash_murmur64.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\surface_matching\src\hash_murmur86.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\surface_matching\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\alphamat\src\cm.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\alphamat\src\infoflow.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\alphamat\src\intraU.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\alphamat\src\local_info.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\alphamat\src\3rdparty\KDTreeVectorOfVectorsAdaptor.h" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\alphamat\src\3rdparty\nanoflann.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\alphamat\src\cm.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\alphamat\src\intraU.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\alphamat\src\local_info.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\alphamat\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\filtering.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\column_filter.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\cuda\row_filter.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudafilters\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\bilateral_filter.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\blend.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/cudaimgproc/src/blend.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\canny.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/cudaimgproc/src/canny.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\color.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/cudaimgproc/src/color.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\corners.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\generalized_hough.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/cudaimgproc/src/generalized_hough.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\gftt.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/cudaimgproc/src/gftt.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\histogram.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/cudaimgproc/src/histogram.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\hough_circles.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\hough_lines.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\hough_segments.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\match_template.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\mean_shift.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\mssegmentation.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\cvt_color_internal.h" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudaimgproc\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudawarping\src\pyramids.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/cudawarping/src/pyramids.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudawarping\src\remap.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudawarping\src\resize.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/cudawarping/src/resize.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudawarping\src\warp.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudawarping\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\misc\caffe\opencv-caffe.pb.cc" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\misc\onnx\opencv-onnx.pb.cc" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\misc\tensorflow\attr_value.pb.cc" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\misc\tensorflow\function.pb.cc" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\misc\tensorflow\graph.pb.cc" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\misc\tensorflow\op_def.pb.cc" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\misc\tensorflow\tensor.pb.cc" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\misc\tensorflow\tensor_shape.pb.cc" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\misc\tensorflow\types.pb.cc" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\misc\tensorflow\versions.pb.cc" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\caffe\caffe_importer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\caffe\caffe_io.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\caffe\caffe_shrinker.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\darknet\darknet_importer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\darknet\darknet_io.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\dnn.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\graph_simplifier.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\halide_scheduler.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\ie_ngraph.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\init.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\accum_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\batch_norm_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\blank_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\concat_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\const_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\convolution_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\correlation_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\crop_and_resize_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\detection_output_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\elementwise_layers.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\eltwise_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\flatten_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\flow_warp_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\fully_connected_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\layers_common.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\lrn_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\max_unpooling_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\mvn_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\normalize_bbox_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\not_implemented_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\padding_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\permute_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\pooling_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\prior_box_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\proposal_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\recurrent_layers.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\region_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\reorg_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\reshape_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\resize_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\scale_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\shuffle_channel_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\slice_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\softmax_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\split_layer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\model.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\nms.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\onnx\onnx_graph_simplifier.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\onnx\onnx_importer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\op_halide.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\op_inf_engine.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\op_vkcom.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\tengine4dnn\src\tengine_graph_convolution.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\tensorflow\tf_graph_simplifier.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\tensorflow\tf_importer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\tensorflow\tf_io.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\torch\THDiskFile.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\torch\THFile.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\torch\THGeneral.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\torch\torch_importer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\shader\avg_pool_spv.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\shader\concat_spv.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\shader\conv48_spv.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\shader\conv_spv.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\shader\dw_conv_spv.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\shader\lrn_spv.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\shader\max_pool_spv.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\shader\permute_spv.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\shader\prior_box_spv.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\shader\relu_spv.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\shader\softmax_spv.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\src\buffer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\src\context.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\src\internal.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\src\op_base.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\src\op_concat.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\src\op_conv.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\src\op_lrn.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\src\op_permute.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\src\op_pool.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\src\op_prior_box.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\src\op_relu.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\src\op_softmax.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\src\tensor.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\vulkan\vk_functions.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\vulkan\vk_loader.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\caffe\caffe_io.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\caffe\glog_emulator.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\array.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\atomics.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\bbox_utils.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\block_stride_range.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\execution.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\functors.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\grid_stride_range.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\index_helpers.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\kernel_dispatcher.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\limits.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\math.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\memory.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\types.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda\vector_traits.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\csl\cublas.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\csl\cudnn.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\csl\cudnn\activation.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\csl\cudnn\convolution.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\csl\cudnn\cudnn.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\csl\cudnn\lrn.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\csl\cudnn\pooling.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\csl\cudnn\softmax.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\csl\cudnn\transform.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\csl\cudnn\transpose_convolution.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\csl\error.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\csl\event.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\csl\memory.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\csl\nvcc_defs.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\csl\pointer.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\csl\span.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\csl\stream.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\csl\tensor.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\csl\tensor_ops.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\csl\workspace.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\cxx_utils\is_iterator.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\cxx_utils\resizable_static_array.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\init.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\activation_eltwise.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\activations.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\bias_activation.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\bias_activation_eltwise.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\bias_eltwise_activation.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\concat.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\crop_and_resize.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\detection_output.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\eltwise_activation.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\eltwise_ops.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\fill_copy.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\fp_conversion.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\grid_nms.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\max_unpooling.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\mvn.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\normalize.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\padding.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\permute.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\prior_box.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\region.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\resize.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\roi_pooling.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\scale_shift.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\shortcut.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\kernels\slice.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\activation.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\batch_norm.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\concat.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\const.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\convolution.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\crop_and_resize.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\detection_output.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\eltwise.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\inner_product.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\lrn.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\matmul.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\max_unpooling.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\mvn.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\normalize_bbox.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\padding.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\permute.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\pooling.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\prior_box.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\region.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\reorg.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\reshape.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\resize.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\roi_pooling.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\scale_shift.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\shortcut.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\shuffle_channel.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\slice.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\softmax.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\split.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\cuda4dnn\primitives\transpose_convolution.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\darknet\darknet_io.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\dnn_common.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\graph_simplifier.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\halide_scheduler.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\ie_ngraph.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\layers_common.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\layers\layers_common.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\nms.inl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\onnx\onnx_graph_simplifier.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\op_cuda.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\op_halide.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\op_inf_engine.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\op_vkcom.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\tengine4dnn\include\tengine_graph_convolution.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\tensorflow\tf_graph_simplifier.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\tensorflow\tf_io.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\torch\THDiskFile.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\torch\THFile.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\torch\THFilePrivate.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\torch\THGeneral.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\include\buffer.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\include\op_base.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\include\op_concat.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\include\op_conv.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\include\op_lrn.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\include\op_permute.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\include\op_pool.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\include\op_prior_box.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\include\op_relu.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\include\op_softmax.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\include\tensor.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\include\vkcom.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\shader\spv_shader.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\src\common.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\src\context.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\src\internal.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\vulkan\function_list.inl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\vulkan\vk_functions.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\dnn\src\vkcom\vulkan\vk_loader.hpp" />
    <ClCompile Include="I:\src\opencv-master\build\modules\world\layers\layers_common.avx.cpp">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);CV_CPU_DISPATCH_MODE=AVX</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);CV_CPU_DISPATCH_MODE=AVX</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\build\modules\world\layers\layers_common.avx2.cpp">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);CV_CPU_DISPATCH_MODE=AVX2</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);CV_CPU_DISPATCH_MODE=AVX2</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\dnn_superres\src\dnn_superres.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\dnn_superres\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\affine_feature.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\agast.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\agast_score.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\akaze.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\bagofwords.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\blobdetector.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\brisk.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\draw.cpp">
      <ObjectFileName>$(IntDir)/__/features2d/src/draw.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\dynamic.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\evaluation.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\fast.avx2.cpp">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);CV_CPU_DISPATCH_MODE=AVX2</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);CV_CPU_DISPATCH_MODE=AVX2</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\fast.cpp">
      <ObjectFileName>$(IntDir)/__/features2d/src/fast.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\fast_score.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\feature2d.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\gftt.cpp">
      <ObjectFileName>$(IntDir)/__/features2d/src/gftt.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\kaze.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\kaze\AKAZEFeatures.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\kaze\KAZEFeatures.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\kaze\fed.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\kaze\nldiffusion_functions.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\keypoint.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\main.cpp">
      <ObjectFileName>$(IntDir)/__/features2d/src/main.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\matchers.cpp">
      <ObjectFileName>$(IntDir)/__/features2d/src/matchers.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\mser.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\orb.cpp">
      <ObjectFileName>$(IntDir)/__/features2d/src/orb.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\features2d\src\sift.dispatch.cpp" />
    <None Include="I:\src\opencv-master\opencv\modules\features2d\src\opencl\akaze.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\features2d\src\opencl\brute_force_match.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\features2d\src\opencl\fast.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\features2d\src\opencl\orb.cl">
    </None>
    <ClCompile Include="I:\src\opencv-master\build\modules\world\opencl_kernels_features2d.cpp" />
    <ClInclude Include="I:\src\opencv-master\build\modules\world\opencl_kernels_features2d.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\features2d\src\agast_score.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\features2d\src\fast.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\features2d\src\fast_score.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\features2d\src\hal_replacement.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\features2d\src\kaze\AKAZEConfig.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\features2d\src\kaze\AKAZEFeatures.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\features2d\src\kaze\KAZEConfig.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\features2d\src\kaze\KAZEFeatures.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\features2d\src\kaze\TEvolution.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\features2d\src\kaze\fed.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\features2d\src\kaze\nldiffusion_functions.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\features2d\src\kaze\utils.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\features2d\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\features2d\src\sift.simd.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\fuzzy\src\fuzzy_F0_math.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\fuzzy\src\fuzzy_F1_math.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\fuzzy\src\fuzzy_image.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\fuzzy\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\hfs\src\hfs.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\hfs\src\hfs_core.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\hfs\src\magnitude\magnitude.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\hfs\src\merge\merge.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/hfs/src/merge/merge.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\hfs\src\slic\gslic_engine.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\hfs\src\slic\slic.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/hfs/src/slic/slic.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\hfs\src\hfs_core.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\hfs\src\magnitude\magnitude.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\hfs\src\merge\merge.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\hfs\src\or_utils\or_image.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\hfs\src\or_utils\or_memory_block.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\hfs\src\or_utils\or_types.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\hfs\src\or_utils\or_vector.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\hfs\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\hfs\src\slic\slic.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\loadsave.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\utils.cpp">
      <ObjectFileName>$(IntDir)/__/imgcodecs/src/utils.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\utils.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_base.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_bmp.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_exr.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_gdal.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_gdcm.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_hdr.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_jpeg.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_jpeg2000.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_jpeg2000_openjpeg.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_pam.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_pfm.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_png.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_pxm.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_sunras.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_tiff.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_webp.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\bitstrm.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\rgbe.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\exif.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_base.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_bmp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_exr.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_gdal.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_gdcm.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_hdr.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_jpeg.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_jpeg2000.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_jpeg2000_openjpeg.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_pam.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_pfm.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_png.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_pxm.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_sunras.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_tiff.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmt_webp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\grfmts.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\bitstrm.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\rgbe.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\imgcodecs\src\exif.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\line_descriptor\src\LSDDetector.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\line_descriptor\src\binary_descriptor.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\line_descriptor\src\binary_descriptor_matcher.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\line_descriptor\src\draw.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/line_descriptor/src/draw.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\line_descriptor\src\bitarray.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\line_descriptor\src\bitops.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\line_descriptor\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\line_descriptor\src\types.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\photo\src\align.cpp">
      <ObjectFileName>$(IntDir)/__/photo/src/align.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\photo\src\calibrate.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\photo\src\contrast_preserve.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\photo\src\denoise_tvl1.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\photo\src\denoising.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\photo\src\denoising.cuda.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\photo\src\hdr_common.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\photo\src\inpaint.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\photo\src\merge.cpp">
      <ObjectFileName>$(IntDir)/__/photo/src/merge.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\photo\src\npr.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\photo\src\seamless_cloning.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\photo\src\seamless_cloning_impl.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\photo\src\tonemap.cpp">
      <ObjectFileName>$(IntDir)/__/photo/src/tonemap.cpp.obj</ObjectFileName>
    </ClCompile>
    <None Include="I:\src\opencv-master\opencv\modules\photo\src\opencl\nlmeans.cl">
    </None>
    <ClCompile Include="I:\src\opencv-master\build\modules\world\opencl_kernels_photo.cpp" />
    <ClInclude Include="I:\src\opencv-master\build\modules\world\opencl_kernels_photo.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\photo\src\arrays.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\photo\src\contrast_preserve.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\photo\src\fast_nlmeans_denoising_invoker.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\photo\src\fast_nlmeans_denoising_invoker_commons.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\photo\src\fast_nlmeans_denoising_opencl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\photo\src\fast_nlmeans_multi_denoising_invoker.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\photo\src\hdr_common.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\photo\src\npr.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\photo\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\photo\src\seamless_cloning.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\saliency\src\BING\CmFile.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\saliency\src\BING\CmShow.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\saliency\src\BING\FilterTIG.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\saliency\src\BING\ValStructVec.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\saliency\src\BING\objectnessBING.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\saliency\src\motionSaliency.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\saliency\src\motionSaliencyBinWangApr2014.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\saliency\src\objectness.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\saliency\src\saliency.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\saliency\src\staticSaliency.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\saliency\src\staticSaliencyFineGrained.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\saliency\src\staticSaliencySpectralResidual.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\saliency\src\BING\CmFile.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\saliency\src\BING\CmShow.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\saliency\src\BING\CmTimer.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\saliency\src\BING\kyheader.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\saliency\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\text\src\erfilter.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\text\src\ocr_beamsearch_decoder.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\text\src\ocr_hmm_decoder.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\text\src\ocr_holistic.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\text\src\ocr_tesseract.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\text\src\text_detectorCNN.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\text\src\text_detector_swt.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\text\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\videoio\src\videoio_registry.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\videoio\src\videoio_c.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\videoio\src\cap.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\videoio\src\cap_images.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\videoio\src\cap_mjpeg_encoder.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\videoio\src\cap_mjpeg_decoder.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\videoio\src\backend_plugin.cpp">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);DEBUG_POSTFIX=d</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);DEBUG_POSTFIX=d</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\videoio\src\backend_static.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\videoio\src\container_avi.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\videoio\src\cap_dshow.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\videoio\src\cap_msmf.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\videoio\src\cap_msmf.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\binarizermgr.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\decodermgr.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\detector\align.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/wechat_qrcode/src/detector/align.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\detector\ssd_detector.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\imgsource.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\scale\super_scale.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/wechat_qrcode/src/scale/super_scale.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\wechat_qrcode.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\binarizer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\binarybitmap.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\binarizer\adaptive_threshold_mean_binarizer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\binarizer\fast_window_binarizer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\binarizer\global_histogram_binarizer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\binarizer\hybrid_binarizer.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/wechat_qrcode/src/zxing/common/binarizer/hybrid_binarizer.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\binarizer\simple_adaptive_binarizer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\bitarray.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\bitmatrix.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\bitsource.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\bytematrix.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\characterseteci.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\decoder_result.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\detector_result.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\greyscale_luminance_source.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\greyscale_rotated_luminance_source.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\grid_sampler.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\imagecut.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\kmeans.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/wechat_qrcode/src/zxing/common/kmeans.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\perspective_transform.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\reedsolomon\genericgf.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\reedsolomon\genericgfpoly.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\reedsolomon\reed_solomon_decoder.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\str.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\stringutils.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\unicomblock.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\errorhandler.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\luminance_source.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\decoder\bitmatrixparser.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\decoder\datablock.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\decoder\datamask.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\decoder\decoded_bit_stream_parser.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\decoder\decoder.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\decoder\mode.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\detector\alignment_pattern.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\detector\alignment_pattern_finder.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\detector\detector.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\detector\finder_pattern.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\detector\finder_pattern_finder.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\detector\finder_pattern_info.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\detector\pattern_result.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\error_correction_level.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\format_information.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\qrcode_reader.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\version.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\reader.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\result.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\resultpoint.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\binarizermgr.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\decodermgr.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\detector\align.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\detector\ssd_detector.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\imgsource.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\scale\super_scale.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\binarizer.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\binarybitmap.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\array.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\binarizer\adaptive_threshold_mean_binarizer.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\binarizer\fast_window_binarizer.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\binarizer\global_histogram_binarizer.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\binarizer\hybrid_binarizer.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\binarizer\simple_adaptive_binarizer.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\bitarray.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\bitmatrix.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\bitsource.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\bytematrix.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\characterseteci.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\counted.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\decoder_result.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\detector_result.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\greyscale_luminance_source.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\greyscale_rotated_luminance_source.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\grid_sampler.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\imagecut.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\kmeans.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\mathutils.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\perspective_transform.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\reedsolomon\genericgf.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\reedsolomon\genericgfpoly.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\reedsolomon\reed_solomon_decoder.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\str.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\stringutils.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\common\unicomblock.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\decodehints.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\errorhandler.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\luminance_source.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\decoder\bitmatrixparser.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\decoder\datablock.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\decoder\datamask.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\decoder\decoded_bit_stream_parser.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\decoder\decoder.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\decoder\mode.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\decoder\qrcode_decoder_metadata.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\detector\alignment_pattern.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\detector\alignment_pattern_finder.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\detector\detector.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\detector\finder_pattern.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\detector\finder_pattern_finder.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\detector\finder_pattern_info.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\detector\pattern_result.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\error_correction_level.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\format_information.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\qrcode_reader.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\qrcode\version.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\reader.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\result.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\resultpoint.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\wechat_qrcode\src\zxing\zxing.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\bm3d_image_denoising.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\dct_image_denoising.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\grayworld_white_balance.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\inpainting.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/xphoto/src/inpainting.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\learning_based_color_balance.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\oilpainting.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\simple_color_balance.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\tonemap.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/xphoto/src/tonemap.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\advanced_types.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\annf.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\blending.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\bm3d_denoising_invoker_commons.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\bm3d_denoising_invoker_step1.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\bm3d_denoising_invoker_step2.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\bm3d_denoising_invoker_structs.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\bm3d_denoising_transforms.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\bm3d_denoising_transforms_1D.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\bm3d_denoising_transforms_2D.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\bm3d_denoising_transforms_haar.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\gcgraph.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\inpainting_fsr.impl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\kaiser_window.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\learning_based_color_balance_model.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\norm2.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\photomontage.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xphoto\src\whs.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\barcode\src\barcode.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\barcode\src\decoder\abs_decoder.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\barcode\src\decoder\common\hybrid_binarizer.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/barcode/src/decoder/common/hybrid_binarizer.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\barcode\src\decoder\common\super_scale.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/barcode/src/decoder/common/super_scale.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\barcode\src\decoder\common\utils.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/barcode/src/decoder/common/utils.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\barcode\src\decoder\ean13_decoder.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\barcode\src\decoder\ean8_decoder.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\barcode\src\decoder\upcean_decoder.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\barcode\src\detector\bardetect.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\barcode\src\decoder\abs_decoder.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\barcode\src\decoder\common\hybrid_binarizer.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\barcode\src\decoder\common\super_scale.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\barcode\src\decoder\common\utils.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\barcode\src\decoder\ean13_decoder.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\barcode\src\decoder\ean8_decoder.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\barcode\src\decoder\upcean_decoder.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\barcode\src\detector\bardetect.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\barcode\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\ap3p.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\calibinit.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\calibration.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\calibration_handeye.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\checkchessboard.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\chessboard.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\circlesgrid.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\compat_ptsetreg.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\dls.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\epnp.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\fisheye.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\five-point.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\fundam.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\homography_decomp.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\ippe.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\levmarq.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\main.cpp">
      <ObjectFileName>$(IntDir)/__/calib3d/src/main.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\p3p.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\polynom_solver.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\posit.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\ptsetreg.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\quadsubpix.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\rho.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\solvepnp.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\sqpnp.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\stereobm.cpp">
      <ObjectFileName>$(IntDir)/__/calib3d/src/stereobm.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\stereosgbm.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\triangulate.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\undistort.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\upnp.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\usac\degeneracy.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\usac\dls_solver.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\usac\essential_solver.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\usac\estimator.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\usac\fundamental_solver.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\usac\gamma_values.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\usac\homography_solver.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\usac\local_optimization.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\usac\pnp_solver.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\usac\quality.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\usac\ransac_solvers.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\usac\sampler.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\usac\termination.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\calib3d\src\usac\utils.cpp">
      <ObjectFileName>$(IntDir)/__/calib3d/src/usac/utils.cpp.obj</ObjectFileName>
    </ClCompile>
    <None Include="I:\src\opencv-master\opencv\modules\calib3d\src\opencl\stereobm.cl">
    </None>
    <ClCompile Include="I:\src\opencv-master\build\modules\world\opencl_kernels_calib3d.cpp" />
    <ClInclude Include="I:\src\opencv-master\build\modules\world\opencl_kernels_calib3d.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\calib3d\src\ap3p.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\calib3d\src\calib3d_c_api.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\calib3d\src\chessboard.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\calib3d\src\circlesgrid.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\calib3d\src\distortion_model.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\calib3d\src\dls.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\calib3d\src\epnp.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\calib3d\src\fisheye.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\calib3d\src\ippe.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\calib3d\src\p3p.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\calib3d\src\polynom_solver.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\calib3d\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\calib3d\src\rho.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\calib3d\src\sqpnp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\calib3d\src\undistort.simd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\calib3d\src\upnp.h" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\calib3d\src\usac.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudacodec\src\cuvid_video_source.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudacodec\src\ffmpeg_video_source.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudacodec\src\frame_queue.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudacodec\src\thread.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudacodec\src\video_decoder.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudacodec\src\video_parser.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudacodec\src\video_reader.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudacodec\src\video_source.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudacodec\src\video_writer.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudacodec\src\cuvid_video_source.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudacodec\src\ffmpeg_video_source.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudacodec\src\frame_queue.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudacodec\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudacodec\src\thread.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudacodec\src\video_decoder.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudacodec\src\video_parser.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudacodec\src\video_source.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudafeatures2d\src\brute_force_matcher.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudafeatures2d\src\fast.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/cudafeatures2d/src/fast.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudafeatures2d\src\feature2d_async.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudafeatures2d\src\orb.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/cudafeatures2d/src/orb.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudafeatures2d\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudastereo\src\disparity_bilateral_filter.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudastereo\src\stereobm.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/cudastereo/src/stereobm.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudastereo\src\stereobp.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudastereo\src\stereocsbp.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudastereo\src\stereosgm.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudastereo\src\util.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/cudastereo/src/util.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudastereo\src\cuda\disparity_bilateral_filter.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudastereo\src\cuda\stereocsbp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudastereo\src\cuda\stereosgm.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudastereo\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\ar_hmdb.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\ar_sports.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\dataset.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\fr_adience.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\fr_lfw.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\gr_chalearn.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\gr_skig.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\hpe_humaneva.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\hpe_parse.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\ir_affine.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\ir_robot.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\is_bsds.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\is_weizmann.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\msm_epfl.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\msm_middlebury.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\or_imagenet.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\or_mnist.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\or_pascal.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\or_sun.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\pd_caltech.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\pd_inria.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\slam_kitti.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\slam_tumindoor.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\sr_bsds.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\sr_div2k.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\sr_general100.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\tinyxml2\tinyxml2.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\tr_chars.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\tr_icdar.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\tr_svt.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\track_alov.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\track_vot.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\util.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/datasets/src/util.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\datasets\src\tinyxml2\tinyxml2.h" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\highgui\src\backend.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\highgui\src\window.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\highgui\src\roiSelector.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\highgui\src\window_w32.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\highgui\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\bound_min.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\ccm.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\charts.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\checker_detector.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\checker_model.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\color.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/mcc/src/color.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\colorspace.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\common.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\debug.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\distance.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\graph_cluster.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\io.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\linearize.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\mcc.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\operations.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\utils.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/mcc/src/utils.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\wiener_filter.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\bound_min.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\charts.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\checker_detector.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\checker_model.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\color.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\colorspace.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\common.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\debug.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\dictionary.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\distance.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\graph_cluster.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\io.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\linearize.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\operations.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\utils.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\mcc\src\wiener_filter.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\objdetect\src\cascadedetect.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\objdetect\src\cascadedetect_convert.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\objdetect\src\detection_based_tracker.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\objdetect\src\hog.cpp">
      <ObjectFileName>$(IntDir)/__/objdetect/src/hog.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\objdetect\src\main.cpp">
      <ObjectFileName>$(IntDir)/__/objdetect/src/main.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\objdetect\src\qrcode.cpp" />
    <None Include="I:\src\opencv-master\opencv\modules\objdetect\src\opencl\cascadedetect.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\objdetect\src\opencl\objdetect_hog.cl">
    </None>
    <ClCompile Include="I:\src\opencv-master\build\modules\world\opencl_kernels_objdetect.cpp" />
    <ClInclude Include="I:\src\opencv-master\build\modules\world\opencl_kernels_objdetect.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\objdetect\src\cascadedetect.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\objdetect\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rapid\src\histogram.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/rapid/src/histogram.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rapid\src\rapid.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rapid\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\colored_kinfu.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\colored_tsdf.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\depth_cleaner.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\depth_registration.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\depth_to_3d.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\dqb.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\dynafu.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\dynafu_tsdf.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\fast_icp.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\hash_tsdf.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\kinfu.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\kinfu_frame.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\large_kinfu.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\linemod.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\nonrigid_icp.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\normal.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\odometry.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\plane.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\pose_graph.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\tsdf.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\tsdf_functions.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\utils.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/rgbd/src/utils.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\volume.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\warpfield.cpp" />
    <None Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\opencl\hash_tsdf.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\opencl\icp.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\opencl\kinfu_frame.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\opencl\tsdf.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\opencl\tsdf_functions.cl">
    </None>
    <ClCompile Include="I:\src\opencv-master\build\modules\world\opencl_kernels_rgbd.cpp" />
    <ClInclude Include="I:\src\opencv-master\build\modules\world\opencl_kernels_rgbd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\colored_tsdf.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\depth_to_3d.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\dqb.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\dynafu_tsdf.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\fast_icp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\hash_tsdf.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\kinfu_frame.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\marchingcubes.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\nonrigid_icp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\sparse_block_matrix.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\submap.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\tsdf.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\tsdf_functions.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\utils.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\rgbd\src\warpfield.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\shape\src\aff_trans.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\shape\src\emdL1.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\shape\src\haus_dis.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\shape\src\hist_cost.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\shape\src\sc_dis.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\shape\src\tps_trans.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\shape\src\emdL1_def.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\shape\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\shape\src\scd_def.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\structured_light\src\graycodepattern.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\structured_light\src\sinusoidalpattern.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\structured_light\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\bgfg_KNN.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\bgfg_gaussmix2.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\camshift.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\dis_flow.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\ecc.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\kalman.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\lkpyramid.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\optflowgf.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\optical_flow_io.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\tracking\detail\tracker_feature.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\tracking\detail\tracker_feature_set.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\tracking\detail\tracker_mil_model.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\tracking\detail\tracker_mil_state.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\tracking\detail\tracker_model.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\tracking\detail\tracker_sampler.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\tracking\detail\tracker_sampler_algorithm.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\tracking\detail\tracker_state_estimator.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\tracking\detail\tracking_feature.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\tracking\detail\tracking_online_mil.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\tracking\tracker.cpp">
      <ObjectFileName>$(IntDir)/__/video/src/tracking/tracker.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\tracking\tracker_dasiamrpn.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\tracking\tracker_goturn.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\tracking\tracker_mil.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\video\src\variational_refinement.cpp" />
    <None Include="I:\src\opencv-master\opencv\modules\video\src\opencl\bgfg_knn.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\video\src\opencl\bgfg_mog2.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\video\src\opencl\dis_flow.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\video\src\opencl\optical_flow_farneback.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\video\src\opencl\pyrlk.cl">
    </None>
    <ClCompile Include="I:\src\opencv-master\build\modules\world\opencl_kernels_video.cpp" />
    <ClInclude Include="I:\src\opencv-master\build\modules\world\opencl_kernels_video.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\video\src\lkpyramid.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\video\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\video\src\tracking\detail\tracker_feature_haar.impl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\video\src\tracking\detail\tracker_mil_model.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\video\src\tracking\detail\tracker_mil_state.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\video\src\tracking\detail\tracking_feature.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\video\src\tracking\detail\tracking_online_mil.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\affine_feature2d.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\beblid.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\boostdesc.cpp">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);OPENCV_XFEATURES2D_HAS_BOOST_DATA=1</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);OPENCV_XFEATURES2D_HAS_BOOST_DATA=1</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\brief.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\daisy.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\ellipticKeyPoint.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\fast.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/xfeatures2d/src/fast.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\freak.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\gms.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\harris_lapace_detector.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\latch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\logos.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/xfeatures2d/src/logos.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\logos\Logos.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/xfeatures2d/src/logos/Logos.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\logos\Match.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\logos\Point.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\logos\PointPair.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\lucid.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\msd.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\pct_signatures.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\pct_signatures\grayscale_bitmap.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\pct_signatures\pct_clusterizer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\pct_signatures\pct_sampler.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\pct_signatures_sqfd.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\stardetector.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\surf.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\surf.cuda.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\surf.ocl.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\tbmr.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\vgg.cpp">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);OPENCV_XFEATURES2D_HAS_VGG_DATA=1</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);OPENCV_XFEATURES2D_HAS_VGG_DATA=1</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\xfeatures2d_init.cpp" />
    <None Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\opencl\surf.cl">
    </None>
    <ClCompile Include="I:\src\opencv-master\build\modules\world\opencl_kernels_xfeatures2d.cpp" />
    <ClInclude Include="I:\src\opencv-master\build\modules\world\opencl_kernels_xfeatures2d.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\beblid.p256.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\beblid.p512.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\logos\Logos.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\logos\Match.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\logos\Point.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\logos\PointPair.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\msd_pyramid.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\pct_signatures\constants.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\pct_signatures\distance.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\pct_signatures\grayscale_bitmap.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\pct_signatures\pct_clusterizer.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\pct_signatures\pct_sampler.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\pct_signatures\similarity.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xfeatures2d\src\surf.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\adaptive_manifold_filter_n.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\anisodiff.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\bilateral_texture_filter.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\brightedges.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\deriche_filter.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\disparity_filters.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\domain_transform.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\dtfilter_cpu.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\edge_drawing.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\edgeaware_filters_common.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\edgeboxes.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\edgepreserving_filter.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\estimated_covariance.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\fast_hough_transform.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\fast_line_detector.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\fbs_filter.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\fgs_filter.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\fourier_descriptors.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\graphsegmentation.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\guided_filter.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\joint_bilateral_filter.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\l0_smooth.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\lsc.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\niblack_thresholding.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\paillou_filter.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\peilin.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\quaternion.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\ridgedetectionfilter.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\rolling_guidance_filter.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\run_length_morphology.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\seeds.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\selectivesearchsegmentation.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\slic.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/ximgproc/src/slic.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\sparse_match_interpolators.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\structured_edge_detection.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\thinning.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\weighted_median_filter.cpp" />
    <None Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\opencl\anisodiff.cl">
    </None>
    <ClCompile Include="I:\src\opencv-master\build\modules\world\opencl_kernels_ximgproc.cpp" />
    <ClInclude Include="I:\src\opencv-master\build\modules\world\opencl_kernels_ximgproc.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\advanced_types.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\dtfilter_cpu.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\dtfilter_cpu.inl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\edge_drawing_common.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\edgeaware_filters_common.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ximgproc\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xobjdetect\src\feature_evaluator.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xobjdetect\src\lbpfeatures.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xobjdetect\src\waldboost.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\xobjdetect\src\wbdetector.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xobjdetect\src\cascadeclassifier.h" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xobjdetect\src\feature_evaluator.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xobjdetect\src\lbpfeatures.h" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xobjdetect\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xobjdetect\src\waldboost.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\xobjdetect\src\wbdetector.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\aruco\src\apriltag_quad_thresh.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\aruco\src\aruco.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\aruco\src\charuco.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\aruco\src\dictionary.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\aruco\src\zmaxheap.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\aruco\src\apriltag_quad_thresh.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\aruco\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\aruco\src\predefined_dictionaries.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\aruco\src\predefined_dictionaries_apriltag.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\aruco\src\unionfind.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\aruco\src\zarray.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\aruco\src\zmaxheap.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\bgsegm\src\bgfg_gaussmix.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\bgsegm\src\bgfg_gmg.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\bgsegm\src\bgfg_gsoc.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\bgsegm\src\bgfg_subcnt.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\bgsegm\src\synthetic_seq.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\bgsegm\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\basicretinafilter.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\imagelogpolprojection.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\magnoretinafilter.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\parvoretinafilter.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\retina.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\retina_ocl.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\retinacolor.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\retinafasttonemapping.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\retinafilter.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\transientareassegmentationmodule.cpp" />
    <None Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\opencl\retina_kernel.cl">
    </None>
    <ClCompile Include="I:\src\opencv-master\build\modules\world\opencl_kernels_bioinspired.cpp" />
    <ClInclude Include="I:\src\opencv-master\build\modules\world\opencl_kernels_bioinspired.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\basicretinafilter.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\imagelogpolprojection.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\magnoretinafilter.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\parvoretinafilter.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\retina_ocl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\retinacolor.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\retinafilter.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\bioinspired\src\templatebuffer.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ccalib\src\ccalib.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ccalib\src\multicalib.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ccalib\src\omnidir.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\ccalib\src\randpattern.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\ccalib\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudabgsegm\src\mog.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudabgsegm\src\mog2.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudabgsegm\src\cuda\mog2.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudabgsegm\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\NCV.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\bm.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\bm_fast.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\calib3d.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\fgd.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\gmg.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\graphcuts.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\image_pyramid.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\interpolate_frames.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\needle_map.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\cuda\NCVAlg.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\cuda\NCVColorConversion.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\cuda\NCVPixelOperations.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\cuda\NCVRuntimeTemplates.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\cuda\fgd.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudalegacy\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaobjdetect\src\cascadeclassifier.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaobjdetect\src\hog.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/cudaobjdetect/src/hog.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudaobjdetect\src\cuda\lbp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudaobjdetect\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\dnn_objdetect\src\core_detect.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\dnn_objdetect\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\dpm\src\dpm_cascade.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\dpm\src\dpm_cascade_detector.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\dpm\src\dpm_convolution.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\dpm\src\dpm_feature.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\dpm\src\dpm_model.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\dpm\src\dpm_nms.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\dpm\src\dpm_cascade.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\dpm\src\dpm_convolution.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\dpm\src\dpm_feature.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\dpm\src\dpm_model.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\dpm\src\dpm_nms.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\dpm\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\face\src\bif.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\face\src\eigen_faces.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\face\src\face_alignment.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\face\src\face_basic.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\face\src\facemark.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\face\src\facemarkAAM.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\face\src\facemarkLBF.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\face\src\facerec.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\face\src\fisher_faces.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\face\src\getlandmarks.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\face\src\lbph_faces.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\face\src\mace.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\face\src\predict_collector.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\face\src\regtree.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\face\src\trainFacemark.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\face\src\face_alignmentimpl.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\face\src\face_utils.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\face\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\grunarg.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\gorigin.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\gmat.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\garray.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\gopaque.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\gscalar.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\gframe.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\gkernel.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\gbackend.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\gproto.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\gnode.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\gcall.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\gcomputation.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\operators.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\kernels_core.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\kernels_imgproc.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\kernels_video.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\kernels_nnparsers.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\kernels_streaming.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\kernels_stereo.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\render.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\render_ocv.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\ginfer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\media.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\rmat.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\compiler\gmodel.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\compiler\gmodelbuilder.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\compiler\gislandmodel.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\compiler\gcompiler.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\compiler\gcompiled.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\compiler\gstreaming.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\compiler\passes\helpers.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\compiler\passes\dump_dot.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\compiler\passes\islands.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\compiler\passes\meta.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\compiler\passes\kernels.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\compiler\passes\exec.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\compiler\passes\transformations.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\compiler\passes\pattern_matching.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\compiler\passes\perform_substitution.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\compiler\passes\streaming.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\compiler\passes\intrin.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\executor\gexecutor.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\executor\gtbbexecutor.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\executor\gstreamingexecutor.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\executor\gasync.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\cpu\gcpubackend.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\cpu\gcpukernel.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\cpu\gcpuimgproc.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\cpu\gcpustereo.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\cpu\gcpuvideo.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\cpu\gcpucore.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\cpu\gnnparsers.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\fluid\gfluidbuffer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\fluid\gfluidbackend.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\fluid\gfluidimgproc.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\fluid\gfluidimgproc_func.dispatch.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\fluid\gfluidcore.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\ocl\goclbackend.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\ocl\goclkernel.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\ocl\goclimgproc.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\ocl\goclcore.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\ie\giebackend.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\ie\giebackend\giewrapper.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\onnx\gonnxbackend.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\render\grenderocv.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\render\ft_render.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\plaidml\gplaidmlcore.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\plaidml\gplaidmlbackend.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\common\gmetabackend.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\common\gcompoundbackend.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\common\gcompoundkernel.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\api\s11n.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\common\serialization.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\streaming\gstreamingbackend.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\ie\bindings_ie.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\backends\python\gpythonbackend.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\gapi\src\utils\itt.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\deepflow.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\interfaces.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\motempl.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\pcaflow.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\rlof\geo_interpolation.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\rlof\rlof_localflow.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\rlofflow.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\simpleflow.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\sparse_matching_gpc.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\sparsetodenseflow.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\tvl1flow.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/optflow/src/tvl1flow.cpp.obj</ObjectFileName>
    </ClCompile>
    <None Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\opencl\optical_flow_tvl1.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\opencl\sparse_matching_gpc.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\opencl\updatemotionhistory.cl">
    </None>
    <ClCompile Include="I:\src\opencv-master\build\modules\world\opencl_kernels_optflow.cpp" />
    <ClInclude Include="I:\src\opencv-master\build\modules\world\opencl_kernels_optflow.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\rlof\berlof_invoker.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\rlof\geo_interpolation.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\rlof\plk_invoker.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\rlof\rlof_invoker.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\rlof\rlof_invokerbase.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\optflow\src\rlof\rlof_localflow.h" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\stitching\src\autocalib.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\stitching\src\blenders.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\stitching\src\camera.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\stitching\src\exposure_compensate.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\stitching\src\matchers.cpp">
      <ObjectFileName>$(IntDir)/__/stitching/src/matchers.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\stitching\src\motion_estimators.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\stitching\src\seam_finders.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\stitching\src\stitcher.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\stitching\src\timelapsers.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\stitching\src\util.cpp">
      <ObjectFileName>$(IntDir)/__/stitching/src/util.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv\modules\stitching\src\warpers.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\stitching\src\warpers_cuda.cpp" />
    <None Include="I:\src\opencv-master\opencv\modules\stitching\src\opencl\multibandblend.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv\modules\stitching\src\opencl\warpers.cl">
    </None>
    <ClCompile Include="I:\src\opencv-master\build\modules\world\opencl_kernels_stitching.cpp" />
    <ClInclude Include="I:\src\opencv-master\build\modules\world\opencl_kernels_stitching.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\stitching\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\stitching\src\util_log.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\augmented_unscented_kalman.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\feature.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\featureColorName.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\gtrUtils.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\kuhn_munkres.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\mosseTracker.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\multiTracker.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\multiTracker_alt.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\onlineBoosting.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\tldDataset.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\tldDetector.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\tldEnsembleClassifier.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\tldModel.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\tldTracker.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\tldUtils.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\tracker.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/tracking/src/tracker.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\trackerBoosting.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\trackerBoostingModel.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\trackerCSRT.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\trackerCSRTScaleEstimation.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\trackerCSRTSegmentation.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\trackerCSRTUtils.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\trackerFeature.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\trackerFeatureSet.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\trackerKCF.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\trackerMIL_legacy.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\trackerMedianFlow.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\trackerSampler.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\trackerSamplerAlgorithm.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\trackerStateEstimator.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\tracking_by_matching.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\tracking_utils.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\unscented_kalman.cpp" />
    <None Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\opencl\tldDetector.cl">
    </None>
    <None Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\opencl\tmm.cl">
    </None>
    <ClCompile Include="I:\src\opencv-master\build\modules\world\opencl_kernels_tracking.cpp" />
    <ClInclude Include="I:\src\opencv-master\build\modules\world\opencl_kernels_tracking.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\PFSolver.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\TrackingFunctionPF.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\gtrUtils.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\kuhn_munkres.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\legacy\tracker.legacy.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\legacy\trackerCSRT.legacy.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\legacy\trackerKCF.legacy.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\multiTracker.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\tldDetector.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\tldEnsembleClassifier.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\tldModel.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\tldTracker.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\tldUtils.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\trackerBoostingModel.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\trackerCSRTScaleEstimation.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\trackerCSRTSegmentation.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\trackerCSRTUtils.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\tracking\src\tracking_utils.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaoptflow\src\brox.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaoptflow\src\farneback.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaoptflow\src\nvidiaOpticalFlow.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaoptflow\src\pyrlk.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\cudaoptflow\src\tvl1flow.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/cudaoptflow/src/tvl1flow.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\cudaoptflow\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\stereo\src\descriptor.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\stereo\src\quasi_dense_stereo.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\stereo\src\stereo_binary_bm.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\stereo\src\stereo_binary_sgbm.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\stereo\src\descriptor.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\stereo\src\matching.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\stereo\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\superres\src\btv_l1.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\superres\src\btv_l1_cuda.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\superres\src\frame_source.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/superres/src/frame_source.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\superres\src\input_array_utility.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\superres\src\optical_flow.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/superres/src/optical_flow.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\superres\src\super_resolution.cpp" />
    <None Include="I:\src\opencv-master\opencv_contrib\modules\superres\src\opencl\superres_btvl1.cl">
    </None>
    <ClCompile Include="I:\src\opencv-master\build\modules\world\opencl_kernels_superres.cpp" />
    <ClInclude Include="I:\src\opencv-master\build\modules\world\opencl_kernels_superres.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\superres\src\input_array_utility.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\superres\src\precomp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\superres\src\ring_buffer.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\videostab\src\deblurring.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\videostab\src\fast_marching.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\videostab\src\frame_source.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/videostab/src/frame_source.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\videostab\src\global_motion.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\videostab\src\inpainting.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/videostab/src/inpainting.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\videostab\src\log.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\videostab\src\motion_stabilizing.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\videostab\src\optical_flow.cpp">
      <ObjectFileName>$(IntDir)/I_/src/opencv-master/opencv_contrib/modules/videostab/src/optical_flow.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\videostab\src\outlier_rejection.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\videostab\src\stabilizer.cpp" />
    <ClCompile Include="I:\src\opencv-master\opencv_contrib\modules\videostab\src\wobble_suppression.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\videostab\src\clp.hpp" />
    <ClInclude Include="I:\src\opencv-master\opencv_contrib\modules\videostab\src\precomp.hpp" />
    <ClCompile Include="I:\src\opencv-master\opencv\modules\world\src\world_init.cpp" />
    <ClInclude Include="I:\src\opencv-master\opencv\modules\world\src\precomp.hpp" />
    <Object Include="I:\src\opencv-master\build\modules\world\opencv_world_AVX512_SKX.dir\$(Configuration)\matmul.avx512_skx.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\opencv_world_AVX512_SKX.dir\$(Configuration)\sumpixels.avx512_skx.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\opencv_world_AVX512_SKX.dir\$(Configuration)\layers_common.avx512_skx.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\opencv_world_AVX512_SKX.dir\$(Configuration)\sift.avx512_skx.obj" />
    <ClInclude Include="I:\src\opencv-master\build\cvconfig.h" />
    <ClInclude Include="I:\src\opencv-master\build\opencv2\opencv_modules.hpp" />
    <ResourceCompile Include="I:\src\opencv-master\build\modules\world\vs_version.rc" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\core\src\cuda\$(Configuration)\cuda_compile_1_generated_gpu_mat.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\core\src\cuda\$(Configuration)\cuda_compile_1_generated_gpu_mat_nd.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_absdiff_mat.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_absdiff_scalar.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_add_mat.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_add_scalar.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_add_weighted.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_bitwise_mat.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_bitwise_scalar.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_cmp_mat.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_cmp_scalar.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_copy_make_border.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_countnonzero.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_div_mat.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_div_scalar.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_in_range.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_integral.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_lut.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_math.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_minmax.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_minmax_mat.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_minmaxloc.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_mul_mat.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_mul_scalar.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_mul_spectrums.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_norm.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_normalize.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_polar_cart.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_reduce.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_split_merge.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_sub_mat.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_sub_scalar.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_sum.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_threshold.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaarithm\src\cuda\$(Configuration)\cuda_compile_1_generated_transpose.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.16sc1.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.16sc3.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.16sc4.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.16uc1.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.16uc3.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.16uc4.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.32fc1.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.32fc3.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.32fc4.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.32sc1.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.32sc3.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.32sc4.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.8uc1.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.8uc3.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_column_filter.8uc4.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_filter2d.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_median_filter.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.16sc1.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.16sc3.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.16sc4.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.16uc1.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.16uc3.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.16uc4.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.32fc1.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.32fc3.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.32fc4.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.32sc1.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.32sc3.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.32sc4.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.8uc1.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.8uc3.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafilters\src\cuda\$(Configuration)\cuda_compile_1_generated_row_filter.8uc4.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_bilateral_filter.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_blend.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_build_point_list.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_canny.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_clahe.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_color.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_corners.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_debayer.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_generalized_hough.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_gftt.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_hist.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_hough_circles.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_hough_lines.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_hough_segments.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_match_template.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaimgproc\src\cuda\$(Configuration)\cuda_compile_1_generated_mean_shift.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\$(Configuration)\cuda_compile_1_generated_pyr_down.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\$(Configuration)\cuda_compile_1_generated_pyr_up.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\$(Configuration)\cuda_compile_1_generated_remap.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\$(Configuration)\cuda_compile_1_generated_resize.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudawarping\src\cuda\$(Configuration)\cuda_compile_1_generated_warp.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_activation_eltwise.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_activations.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_bias_activation.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_bias_activation_eltwise.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_bias_eltwise_activation.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_concat.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_crop_and_resize.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_detection_output.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_eltwise_activation.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_eltwise_ops.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_fill_copy.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_fp_conversion.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_grid_nms.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_max_unpooling.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_mvn.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_normalize.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_padding.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_permute.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_prior_box.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_region.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_resize.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_roi_pooling.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_scale_shift.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_shortcut.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\dnn\src\cuda\$(Configuration)\cuda_compile_1_generated_slice.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\hfs\src\cuda\$(Configuration)\cuda_compile_1_generated_gslic_seg_engine_gpu.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\hfs\src\cuda\$(Configuration)\cuda_compile_1_generated_magnitude.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\photo\src\cuda\$(Configuration)\cuda_compile_1_generated_nlm.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudacodec\src\cuda\$(Configuration)\cuda_compile_1_generated_nv12_to_rgb.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudacodec\src\cuda\$(Configuration)\cuda_compile_1_generated_rgb_to_yv12.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\$(Configuration)\cuda_compile_1_generated_bf_knnmatch.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\$(Configuration)\cuda_compile_1_generated_bf_match.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\$(Configuration)\cuda_compile_1_generated_bf_radius_match.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\$(Configuration)\cuda_compile_1_generated_fast.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudafeatures2d\src\cuda\$(Configuration)\cuda_compile_1_generated_orb.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\$(Configuration)\cuda_compile_1_generated_disparity_bilateral_filter.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\$(Configuration)\cuda_compile_1_generated_stereobm.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\$(Configuration)\cuda_compile_1_generated_stereobp.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\$(Configuration)\cuda_compile_1_generated_stereocsbp.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\$(Configuration)\cuda_compile_1_generated_stereosgm.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudastereo\src\cuda\$(Configuration)\cuda_compile_1_generated_util.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\xfeatures2d\src\cuda\$(Configuration)\cuda_compile_1_generated_surf.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudabgsegm\src\cuda\$(Configuration)\cuda_compile_1_generated_mog.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudabgsegm\src\cuda\$(Configuration)\cuda_compile_1_generated_mog2.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_NCV.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_NCVBroxOpticalFlow.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_NCVHaarObjectDetection.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_NCVPyramid.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_NPP_staging.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_bm.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_bm_fast.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_calib3d.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_ccomponetns.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_fgd.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_gmg.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudalegacy\src\cuda\$(Configuration)\cuda_compile_1_generated_needle_map.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaobjdetect\src\cuda\$(Configuration)\cuda_compile_1_generated_hog.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaobjdetect\src\cuda\$(Configuration)\cuda_compile_1_generated_lbp.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\stitching\src\cuda\$(Configuration)\cuda_compile_1_generated_build_warp_maps.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\stitching\src\cuda\$(Configuration)\cuda_compile_1_generated_multiband_blend.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\$(Configuration)\cuda_compile_1_generated_farneback.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\$(Configuration)\cuda_compile_1_generated_nvidiaOpticalFlow.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\$(Configuration)\cuda_compile_1_generated_pyrlk.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\cudaoptflow\src\cuda\$(Configuration)\cuda_compile_1_generated_tvl1flow.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\superres\src\cuda\$(Configuration)\cuda_compile_1_generated_btv_l1_gpu.cu.obj" />
    <Object Include="I:\src\opencv-master\build\modules\world\CMakeFiles\cuda_compile_1.dir\__\__\__\opencv_contrib\modules\videostab\src\cuda\$(Configuration)\cuda_compile_1_generated_global_motion.cu.obj" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="I:\src\opencv-master\build\3rdparty\openexr\IlmImf.vcxproj">
      <Project>{4D313B2C-0D6C-3AAE-9BFC-C4F387289FCC}</Project>
      <Name>IlmImf</Name>
    </ProjectReference>
    <ProjectReference Include="I:\src\opencv-master\build\modules\ade.vcxproj">
      <Project>{7C7EDE6C-5D8D-30FA-A4D0-D54CA904EC09}</Project>
      <Name>ade</Name>
    </ProjectReference>
    <ProjectReference Include="I:\src\opencv-master\build\3rdparty\ippiw\ippiw.vcxproj">
      <Project>{1AC73EF2-675E-3572-BE57-C46A6F9AD735}</Project>
      <Name>ippiw</Name>
    </ProjectReference>
    <ProjectReference Include="I:\src\opencv-master\build\3rdparty\ittnotify\ittnotify.vcxproj">
      <Project>{148D1CDF-8602-3E9D-8199-30DD5ED17025}</Project>
      <Name>ittnotify</Name>
    </ProjectReference>
    <ProjectReference Include="I:\src\opencv-master\build\3rdparty\libjpeg-turbo\libjpeg-turbo.vcxproj">
      <Project>{571FF0CD-537C-3C90-92A4-60D92FEEE980}</Project>
      <Name>libjpeg-turbo</Name>
    </ProjectReference>
    <ProjectReference Include="I:\src\opencv-master\build\3rdparty\openjpeg\openjp2\libopenjp2.vcxproj">
      <Project>{1BF13601-915C-3ED4-BDE6-FF67CCD80D54}</Project>
      <Name>libopenjp2</Name>
    </ProjectReference>
    <ProjectReference Include="I:\src\opencv-master\build\3rdparty\libpng\libpng.vcxproj">
      <Project>{C2E7FBAF-7601-358F-99BB-C4802E497AB1}</Project>
      <Name>libpng</Name>
    </ProjectReference>
    <ProjectReference Include="I:\src\opencv-master\build\3rdparty\protobuf\libprotobuf.vcxproj">
      <Project>{587C4CCE-7F52-32AF-BB23-B4A15D16F722}</Project>
      <Name>libprotobuf</Name>
    </ProjectReference>
    <ProjectReference Include="I:\src\opencv-master\build\3rdparty\libtiff\libtiff.vcxproj">
      <Project>{EBBFB8CD-FA1A-3E2F-AAC9-F550A6B4835F}</Project>
      <Name>libtiff</Name>
    </ProjectReference>
    <ProjectReference Include="I:\src\opencv-master\build\3rdparty\libwebp\libwebp.vcxproj">
      <Project>{3DD3A016-E1D2-39C1-BE27-58686D750607}</Project>
      <Name>libwebp</Name>
    </ProjectReference>
    <ProjectReference Include="I:\src\opencv-master\build\modules\world\opencv_world_AVX512_SKX.vcxproj">
      <Project>{5033484E-74AD-3F8E-9167-DC06D8FF146A}</Project>
      <Name>opencv_world_AVX512_SKX</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="I:\src\opencv-master\build\3rdparty\quirc\quirc.vcxproj">
      <Project>{DA9E2E3E-0629-3A5A-8940-54B25681C8C2}</Project>
      <Name>quirc</Name>
    </ProjectReference>
    <ProjectReference Include="I:\src\opencv-master\build\3rdparty\zlib\zlib.vcxproj">
      <Project>{E0DBA41C-C09F-3C9C-99DE-6033D71278B9}</Project>
      <Name>zlib</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>
